{"version":3,"sources":["utils/enums/roles.ts","utils/enums/routes.ts","theme/index.ts","components/header/header-styles.ts","components/text/text-styles.tsx","store/loadingReducer.ts","store/userReducer.ts","store/store.ts","api/axiosInstance.ts","utils/enums/table.ts","services/authServices.ts","store/hooks.ts","hooks/authHook.ts","services/fileServices.ts","components/UI/button/button-styles.ts","components/form/form-styles.tsx","components/UI/button/index.tsx","components/header/profile.tsx","components/header/index.tsx","components/layout/layout.styles.tsx","components/navigationSidebar/navigationSidebar-styles.ts","components/navigationSidebar/navigationSidebarItem/navigationSidebarItem-styles.ts","components/navigationSidebar/navigationSidebarItem/index.tsx","components/navigationSidebar/index.tsx","components/UI/checkbox/checkbox-styles.ts","components/UI/checkbox/checkBox.tsx","components/table/sorter.ts","components/table/table.styles.ts","components/table/row.tsx","components/table/table.tsx","components/UI/searchBar/searchBar-styles.ts","components/UI/searchBar/searchBar.tsx","services/shelfServices.ts","components/table/tableWrapper.styles.ts","components/table/TableWrapper.tsx","components/table/table.interfaces.tsx","components/modal/modal.styles.tsx","components/modal/index.tsx","utils/validation/regex.ts","components/UI/input/input-styles.tsx","components/UI/input/InputField.tsx","components/modal/modifyModal.tsx","components/modal/deleteModal.tsx","pages/shelves/index.tsx","pages/dashboard/index.tsx","utils/validation/config/forgotPasswordValidationConfig.ts","services/userServices.ts","pages/forgotPassword/form.tsx","pages/forgotPassword/index.tsx","components/card/card-styles.ts","components/card/index.tsx","pages/landing/index.tsx","pages/emailVerification/index.tsx","azure/authConfig.ts","utils/validation/config/loginValidationConfig.ts","pages/login/form.tsx","pages/login/index.tsx","pages/register/passwordRequirementsTooltip/passwordRequirementsTooltip.styles.ts","pages/register/passwordRequirementsTooltip/index.tsx","pages/register/form.tsx","utils/validation/config/registerValidationConfig.ts","pages/register/index.tsx","pages/resetPassword/form.tsx","utils/validation/config/resetPasswordValidationConfig.ts","pages/resetPassword/index.tsx","components/textCard/textcard-styles.ts","components/textCard/index.tsx","pages/termsOfService/index.tsx","utils/fixtures/termsOfService.ts","services/localStorage.ts","components/router/protectedRoute/index.tsx","components/router/publicOnlyRoute/index.tsx","pages/sharedShelves/index.tsx","components/breadcrumbs/breadcrumbs.styles.ts","components/breadcrumbs/index.tsx","services/trashService.ts","services/folderService.ts","pages/trash/index.tsx","services/functionService.ts","components/UI/select/select-styles.ts","components/UI/select/index.tsx","utils/fixtures/functionOptions.ts","components/modal/functionModal.tsx","utils/validation/config/functionModalValidations.ts","pages/functions/index.tsx","components/progressBar/progressBar.styles.ts","components/progressBar/index.tsx","components/modal/uploadModal/uploadModal.styles.ts","components/modal/uploadModal/index.tsx","pages/files/index.tsx","components/profile/profile.styles.ts","components/modal/uploadPictureModal.tsx","pages/profileManagement/index.tsx","utils/validation/config/manageProfileValidationConfig.ts","services/adminServices.ts","components/modal/deleteUserModal.tsx","components/modal/changeUserRoleModal.tsx","pages/users/index.tsx","pages/code/index.tsx","components/router/index.tsx","App.tsx","global-styles.tsx","index.tsx"],"names":["Role","Routes","theme","breakpoints","sm","md","lg","xl","space","none","xs","xxl","size","fonts","body","heading","fontSizes","fontWeights","bold","lineHeights","colors","white","black","primary","secondary","shadow","danger","success","info","lightBlue","HeaderContainer","styled","div","position","Logo","img","ProfileInfoWrapper","DropDown","ProfilePicture","imgUrl","ProfileContainer","hideProfile","H1","h1","H2","h2","Description","p","AccentText","Link","ReachRouterLink","Error","PlainText","loadingSlice","createSlice","name","initialState","loading","reducers","setIsLoading","state","action","payload","actions","userSlice","user","setUser","removeUser","store","configureStore","reducer","userReducer","loadingReducer","instanceConfig","baseURL","process","headers","loadingCounter","token","JSON","parse","localStorage","getItem","Authorization","instance","axios","create","interceptors","request","use","config","dispatch","err","response","res","originalConfig","status","defaults","common","post","then","setItem","stringify","data","Object","assign","catch","error","clear","Promise","reject","toast","message","SortingDirection","API_URL_ACCOUNT","jwtToken","useAppDispatch","useDispatch","useAppSelector","useSelector","useAuth","login","onSuccess","onError","authServices","jwtRefreshToken","microsoftLogin","register","microsoftRegister","logout","API_URL_FILES","shelfId","get","fileIds","put","delete","folderIds","url","method","responseType","fileId","folderId","files","options","userId","id","StyledButton","props","css","fullwidth","variant","SpinnerButton","StyledLink","IconButton","IconButtonContainer","FormContainer","Base","form","Spinner","InputFieldWrapper","FunctionForm","FunctionFormInner","Button","children","icon","to","isLoading","spinner","onClick","type","restProps","src","alt","Profile","useState","showDropdown","setShowDropdown","dropDownRef","useRef","profileRef","useEffect","handleOutsideClick","event","current","target","Node","contains","document","addEventListener","removeEventListener","fileServices","ref","firstName","lastName","email","role","Header","showButtons","HOME","LOGIN","REGISTER","Wrapper","GridContainer","LandinPageContainer","Container","background","isHiddenOnSmallScreen","EmailVerificationContainer","Feature","ModalButtonDivider","DashboardLayout","DashboardContentWrapper","FunctionWrapper","FunctionEditorWrapper","FunctionResultWrapper","FunctionInfo","NavigationSidebarOuterWrapper","NavigationSidebarInnerWrapper","NavigationSidebarContentWrapper","nav","NavigationSidebarToggleButton","button","Item","ItemWrapper","ItemChildrenWrapper","ItemIconButton","NavigationSidebarLink","NavigationSidebarItem","label","isCollapsed","setIsCollapsed","item","links","path","DASHBOARD","rolesWithAccess","USER","ADMIN","MASTER_ADMIN","childrenLinks","SHARED_SHELVES","TRASH","FUNCTIONS","STATISTICS","USERS","NavigationSidebar","isOpen","setIsOpen","map","link","userHasRequiredRole","includes","childLink","CheckboxWrapper","Checkbox","input","Label","CheckBox","React","forwardRef","htmlFor","sortColumn","sortKey","sortingDirections","tableData","setTableData","setSortingDirections","currentSortingDirection","newTableData","sortingDirection","sort","a","b","relevantValueA","relevantValueB","toLowerCase","Date","getTime","UNSORTED","ASCENDING","sortData","nextSortingDirection","DESCENDING","newSortingDirections","Thead","thead","StyledTableHeader","th","CheckBoxTableHeader","TableHeaderInner","StyledTableContainer","StyledTable","table","StyledCell","td","StyledRow","tr","IconContainer","span","DeleteIconContainer","Row","multiSelect","selectedRows","setSelectedRows","isChecked","navigation","useNavigate","CellWithHandler","rowText","pathName","folder","undefined","ActionWithHandler","comp","handler","key","onChange","alreadySelected","some","row","filter","checked","values","custom","Table","mulitSelect","getSelectedRows","selectAll","setSelectAll","length","ourSortingDirections","forEach","header","createSortingDirectons","sorterArrowToggle","handleClick","rowData","SearchInputField","SearchInputContainer","SearchIconContainer","SearchBar","setData","searchKey","e","currentTarget","value","toString","trim","color","API_URL_FILESYSTEM","shelfName","TableContainer","TableTitle","ButtonContainer","TableDescription","TableContent","ActionsBox","ButtonActionsBox","TableWrapper","title","description","Delete","Edit","Recover","Backdrop","ModalContainer","HeaderItem","Body","Close","DeleteModalBody","RadioContainer","RadioLabel","RadioInner","FunctionModalContainer","FunctionContainer","RadioTitle","RadioSubTitle","FunctionHeader","FunctionModalFooter","Modal","onCloseModal","closeIcon","modal","stopPropagation","modalPortal","getElementById","ReactDOM","createPortal","emailRegex","passwordRegex","whiteSpaceRegex","Input","InputContainer","SeenIcon","InputTitle","h3","InputSubTitle","InputField","disabled","passwordShown","setPasswordShown","makeDefaultValue","defaultValue","substring","lastIndexOf","validations","required","maxLength","pattern","ModifyModal","onSubmit","placeHolder","buttonMessage","useForm","defaultValues","handleSubmit","errors","formState","placeholder","DeleteModal","onDelete","Shelves","shelves","setShelves","openModal","setOpenModal","selectedShelf","setSelectedShelf","shelvesForTable","setShelvesForTable","filteredShelves","setFilteredShelves","deleteModalOpen","setDeleteModalOpen","getData","shelfServices","finally","newShelves","shelf","createdAt","toLocaleString","handleModalClose","newName","handleEdit","Dashboard","isRootDashboard","useLocation","pathname","forgotPasswordFieldConfig","ForgotPasswordForm","validation","navigate","userServices","ForgotPassword","CardWrapper","Text","IconWrapper","Image","Card","image","text","featuresInfo","Landing","feature","EmailVerification","confirmMessage","setConfirmMessage","resendMessage","setResendMessage","setError","useParams","resendEmailVerification","loginRequest","scopes","loginFieldConfig","LoginForm","msInstance","useMsal","location","fieldConfig","preventDefault","acquireTokenPopup","accessToken","bearerToken","errorCode","FORGOT_PASSWORD","Login","TooltipWrapper","List","ul","ListItem","li","PasswordRequirementsTooltip","RegisterForm","watch","reset","httpRegister","registeFieldConfig","minLength","validate","isPasswordTooltipVisible","setIsPasswordTooltipVisible","handleInputFocus","handleInputBlur","password","onFocus","onBlur","TERMS_AND_CONDITIONS","areTermsRead","Register","ResetPasswordForm","registerFieldConfig","ResetPassword","Footer","TextCard","subtitle","TermsAndConditions","LocalStorage","ProtectedRoute","roles","repsonse","isLoggedIn","PublicOnlyRoute","SharedShelves","BreadcrumbsContainer","Breadcrumbs","pathHistory","rootUrl","folderName","i","parentFolderId","Trash","trash","setTrash","filteredData","setFilteredData","setPathHistory","trashService","Number","breadCrumbs","shelfItems","newData","folderService","push","selectedRowsData","API_URL_FUNCTIONS","functionId","code","language","DropDownContainer","DropDownHeader","DropdownListContainer","DropDownList","DropdownItem","Select","optionsData","selectName","setValue","setPlaceholder","option","index","shouldValidate","selectRef","functionOptions","languageOptions","eventTriggerOptions","logTrigger","FunctionModal","onGetData","optionValue","setOptionValue","predefinedFunction","functionValidation","basicValidation","backupShelf","handleChange","formData","newFormData","function","eventId","functionService","functionName","functionParam","Functions","filteredFunction","setFilteredFunctions","openDeleteModal","setOpenDeleteModal","selectedFunction","setSelectedFunction","shelvesOptions","setShelvesOptions","openEditModal","setOpenEditModal","functionsForTable","setFunctionsForTable","find","trigger","handleDeleteModalClose","handleEditModalClose","ProgressBarWrapper","StyledProgress","progress","ProgressBar","DropZoneWrapper","isDragOver","AddFilesLabel","AddFilesInput","AddFilesText","AddedFilesList","AddedFilesListItem","AddedFilesListItemText","AddedFilesIconButton","DropZoneWrapperImage","ImageWrapper","RemoveImageIconButton","ModalImage","UploadModal","setIsDragOver","filesForUpload","setFilesForUpload","setProgress","AbortController","abortController","addFilesForUpload","Array","from","file","addedFile","prevState","onUploadProgress","progressEvent","percentage","Math","round","loaded","total","abort","itemType","ext","areFilesForUploadEmpty","ItemWithHandler","newFiles","f","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","uploadShelfId","uploadFolderId","FormData","append","signal","Files","setFiles","openUploadModal","setOpenUploadModal","filesforTable","setFilesForTable","filteredFiles","setFilteredFiles","selectedFile","setSelectedFile","handleCloseUploadModal","convertedShelfId","convertedFolderId","extension","fileName","window","URL","createObjectURL","Blob","createElement","href","setAttribute","appendChild","click","remove","join","ProfileWrapper","ProfileLeft","ProfileRight","ProfileImageContainer","EditImageContainer","ButtonWrapper","UploadPictureModal","onUpdatePicture","setImage","previewImage","setPreviewImage","passwordDefault","manageProfileFieldConfig","test","isDisabled","setIsDisabled","setImgUrl","resetPassword","resetData","handleCancelEditProfile","handleCloseModal","onlySpaces","str","newPassword","newFirstName","newLastName","fn","ln","roleId","DeleteUserModal","onDeleteUser","adminServices","ChangeUserRoleModal","onRoleChange","Users","users","setUsers","selectedUser","setSelectedUser","usersForTable","setUsersForTable","filteredUsers","setFilteredUsers","editModalOpen","setEditModalOpen","newUsers","Code","setCode","functionData","setFunctionData","isSaveDisabled","setIsSaveDisabled","isExecuteDisabled","setIsExecuteDisabled","executionResult","setExecutionResult","isFunctionExecutableSynchronously","mode","newValue","width","eventName","Router","routes","element","VERIFICATION","PROFILE","SHELVES","FOLDERS","CODE","RESET_PASSWORD","routing","useRoutes","App","limit","GlobalStyles","createGlobalStyle","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","render","StrictMode"],"mappings":"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","file":"static/js/main.11766683.chunk.js","sourcesContent":["export enum Role {\r\n  USER = 3,\r\n  ADMIN = 2,\r\n  MASTER_ADMIN = 1,\r\n}\r\n","export enum Routes {\r\n  HOME = '/',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile/:id',\r\n  LOGIN = '/login',\r\n  DASHBOARD = '/dashboard',\r\n  TERMS_AND_CONDITIONS = '/shelf-terms-and-conditions',\r\n  VERIFICATION = '/verification/:token',\r\n  FORGOT_PASSWORD = '/forgot-password',\r\n  RESET_PASSWORD = '/reset-password/:jwtToken',\r\n  SHARED_SHELVES = 'shared-shelves',\r\n  TRASH = 'trash',\r\n  FUNCTIONS = 'functions',\r\n  STATISTICS = 'statistics',\r\n  USERS = 'users',\r\n  SHELVES = 'shelves/:shelfId',\r\n  FOLDERS = 'folders/:folderId',\r\n  CODE = 'code/:functionId',\r\n}\r\n","export const theme = {\r\n  breakpoints: {\r\n    sm: '480px',\r\n    md: '768px',\r\n    lg: '996px',\r\n    xl: '1200px',\r\n  },\r\n  space: {\r\n    none: '0px',\r\n    xs: '4px',\r\n    sm: '8px',\r\n    md: '16px',\r\n    lg: '32px',\r\n    xl: '64px',\r\n    xxl: '128px',\r\n  },\r\n  size: {\r\n    sm: '20px',\r\n    md: '40px',\r\n    lg: '80px',\r\n  },\r\n  fonts: {\r\n    body: 'Source Sans Pro, sans-serif',\r\n    heading: 'inherit',\r\n  },\r\n  fontSizes: {\r\n    xs: '12px',\r\n    sm: '14px',\r\n    md: '16px',\r\n    lg: '18px',\r\n    xl: '24px',\r\n    xxl: '64px',\r\n  },\r\n  fontWeights: {\r\n    body: 400,\r\n    heading: 700,\r\n    bold: 700,\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.125,\r\n  },\r\n  colors: {\r\n    white: '#fff',\r\n    black: '#000',\r\n    primary: '#006FD1',\r\n    secondary: '#BFBFBF',\r\n    shadow: '#9aa7b1',\r\n    danger: '#E13E3E',\r\n    success: 'green',\r\n    info: '#1E90FF',\r\n    lightBlue: '#f1f8fe',\r\n  },\r\n};\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\nimport {\r\n  HeaderContainerProps,\r\n  HeaderStyleProps,\r\n  ProfilePictureProps,\r\n  ProfileProps,\r\n} from './header.interface';\r\n\r\nexport const HeaderContainer = styled.div<HeaderContainerProps>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-height: 100px;\r\n  width: 100%;\r\n  ${({ position }) => position && `position:${position};`};\r\n  padding: 10px 20px 0 20px;\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    position: static;\r\n  }\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Logo = styled.img<HeaderStyleProps>`\r\n  width: 70px;\r\n`;\r\n\r\nexport const ProfileInfoWrapper = styled.div`\r\n  margin-left: ${theme.space.md};\r\n`;\r\n\r\nexport const DropDown = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  background: white;\r\n  border: 1px solid ${theme.colors.secondary};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  top: 50px;\r\n  right: 0px;\r\n  padding: ${theme.space.md};\r\n  min-width: 200px;\r\n  height: 140px;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 0px 6px 2px rgba(0, 0, 0, 0.1);\r\n  z-index: 8;\r\n`;\r\nexport const ProfilePicture = styled.div<ProfilePictureProps>`\r\n  border: 2px solid ${theme.colors.white};\r\n  border-radius: 999px;\r\n  width: 45px;\r\n  height: 45px;\r\n  background: ${({ imgUrl }) => `url('${imgUrl}')`};\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n`;\r\n\r\nexport const ProfileContainer = styled.div<ProfileProps>`\r\n  position: relative;\r\n  ${({ hideProfile }) => hideProfile && 'display:none;'}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link as ReachRouterLink } from 'react-router-dom';\r\nimport { theme } from '../../theme';\r\nimport { TextProps } from './text.interfaces';\r\n\r\nexport const H1 = styled.h1<TextProps>`\r\n  font-size: ${theme.fontSizes.xxl};\r\n  text-align: center;\r\n`;\r\n\r\nexport const H2 = styled.h2<TextProps>`\r\n  font-size: ${theme.fontSizes.xl};\r\n  text-align: center;\r\n`;\r\n\r\nexport const Description = styled.p<TextProps>`\r\n  text-align: center;\r\n  margin-top: 0;\r\n`;\r\nexport const AccentText = styled.p<TextProps>`\r\n  color: ${theme.colors.primary};\r\n`;\r\nexport const Link = styled(ReachRouterLink)<TextProps>`\r\n  color: ${theme.colors.primary};\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  margin: 0;\r\n  margin-left: ${theme.space.sm};\r\n  color: ${theme.colors.danger};\r\n  font-size: ${theme.fontSizes.xs};\r\n`;\r\n\r\nexport const Success = styled.p`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: ${theme.colors.success};\r\n  font-size: ${theme.fontSizes.xs};\r\n`;\r\n\r\nexport const PlainText = styled.p<TextProps>`\r\n  font-size: ${theme.fontSizes.sm};\r\n  margin: ${theme.space.xs} 0;\r\n`;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport const initialLoadingState: { loading: boolean } = {\r\n  loading: false,\r\n};\r\n\r\nconst loadingSlice = createSlice({\r\n  name: 'loading',\r\n  initialState: initialLoadingState,\r\n  reducers: {\r\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setIsLoading } = loadingSlice.actions;\r\n\r\nexport default loadingSlice.reducer;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UserType } from '../interfaces/dataTypes';\r\n\r\nexport const initialUserState: { user: UserType | null } = {\r\n  user: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<UserType>) => {\r\n      state.user = action.payload;\r\n    },\r\n    removeUser: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, removeUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport loadingReducer from './loadingReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    loading: loadingReducer,\r\n  },\r\n});\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { store } from '../store/store';\r\nimport { setIsLoading } from '../store/loadingReducer';\r\nimport { removeUser } from '../store/userReducer';\r\n\r\nconst instanceConfig: AxiosRequestConfig = {\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\nlet loadingCounter = 0;\r\n\r\nconst token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\nif (token) {\r\n  if (instanceConfig.headers)\r\n    instanceConfig.headers.Authorization = `Bearer ${token}`;\r\n}\r\n\r\nconst instance = axios.create(instanceConfig);\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    loadingCounter++;\r\n    if (loadingCounter === 1) store.dispatch(setIsLoading(true));\r\n    return config;\r\n  },\r\n  (err) => err\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (res) => {\r\n    loadingCounter--;\r\n    if (loadingCounter === 0) store.dispatch(setIsLoading(false));\r\n    return res;\r\n  },\r\n  (err) => {\r\n    const originalConfig = err.config;\r\n    loadingCounter--;\r\n    if (loadingCounter === 0) {\r\n      store.dispatch(setIsLoading(false));\r\n    }\r\n    if (err?.response?.status === 401) {\r\n      instance.defaults.headers.common.Authorization = '';\r\n      return instance\r\n        .post(\r\n          `/account/auth/refresh/token`,\r\n          JSON.parse(localStorage.getItem('refreshToken') || ''),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'text/plain',\r\n              Authorization: '',\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          localStorage.setItem('token', JSON.stringify(res?.data?.token));\r\n          Object.assign(instance.defaults, {\r\n            headers: {\r\n              ...instance.defaults.headers,\r\n              common: {\r\n                ...instance.defaults.headers.common,\r\n                Authorization: `Bearer ${res?.data?.token}`,\r\n              },\r\n            },\r\n          });\r\n          if (originalConfig.headers) {\r\n            originalConfig.headers.Authorization = `Bearer ${res?.data?.token}`;\r\n          }\r\n          return instance(originalConfig);\r\n        })\r\n        .catch((error) => {\r\n          localStorage.clear();\r\n          instance.defaults.headers.common.Authorization = '';\r\n          store.dispatch(removeUser());\r\n          Promise.reject(error);\r\n        });\r\n    }\r\n\r\n    if (err.response?.status === 404) {\r\n      toast.error(err.response?.data?.message);\r\n      return Promise.reject(err);\r\n    }\r\n    if (err.response?.status === 500) {\r\n      toast.error('Internal server error');\r\n      return Promise.reject(err);\r\n    }\r\n    if (err?.message === 'Network Error') {\r\n      toast.error('Network Error');\r\n      return Promise.reject(err);\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","export enum SortingDirection {\r\n  ASCENDING = 'ASCENDING',\r\n  DESCENDING = 'DESCENDING',\r\n  UNSORTED = 'UNSORTED',\r\n}\r\n","import instance from '../api/axiosInstance';\r\nimport {\r\n  RegisterData,\r\n  LoginData,\r\n  MicrosoftRegisterData,\r\n  MicrosoftLoginData,\r\n  LogoutData,\r\n} from '../interfaces/dataTypes';\r\n\r\nconst API_URL_ACCOUNT = '/account';\r\n\r\nconst register = (data: RegisterData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/register`, data);\r\n\r\nconst microsoftRegister = (data: MicrosoftRegisterData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/register/microsoft`, data);\r\n\r\nconst login = (data: LoginData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/login`, data);\r\n\r\nconst microsoftLogin = (data: MicrosoftLoginData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/login/microsoft`, data);\r\n\r\nconst logout = (data: LogoutData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/auth/logout`, data, {\r\n    headers: {\r\n      Authorization: data.jwtToken,\r\n    },\r\n  });\r\n\r\nexport default {\r\n  register,\r\n  microsoftRegister,\r\n  login,\r\n  microsoftLogin,\r\n  logout,\r\n};\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import authServices from '../services/authServices';\r\nimport { useAppDispatch } from '../store/hooks';\r\nimport { removeUser } from '../store/userReducer';\r\nimport {\r\n  LoginData,\r\n  LogoutData,\r\n  MicrosoftLoginData,\r\n  MicrosoftRegisterData,\r\n  RegisterData,\r\n} from '../interfaces/dataTypes';\r\nimport instance from '../api/axiosInstance';\r\n\r\nexport const useAuth = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const login = (\r\n    data: LoginData,\r\n    onSuccess: () => void,\r\n    onError: (err: string) => void\r\n  ) => {\r\n    authServices\r\n      .login(data)\r\n      .then((res) => {\r\n        if (res.data.jwtToken) {\r\n          localStorage.setItem('token', JSON.stringify(res.data.jwtToken));\r\n          localStorage.setItem(\r\n            'refreshToken',\r\n            JSON.stringify(res.data.jwtRefreshToken)\r\n          );\r\n          instance.defaults.headers.common.Authorization = `Bearer ${res.data.jwtToken}`;\r\n          onSuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        onError(err.response?.data?.message);\r\n      });\r\n  };\r\n\r\n  const microsoftLogin = (\r\n    data: MicrosoftLoginData,\r\n    onSuccess: () => void,\r\n    onError: (error: string) => void\r\n  ) => {\r\n    authServices\r\n      .microsoftLogin(data)\r\n      .then((res) => {\r\n        if (res.data.jwtToken) {\r\n          localStorage.setItem('token', JSON.stringify(res.data.jwtToken));\r\n          localStorage.setItem(\r\n            'refreshToken',\r\n            JSON.stringify(res.data.jwtRefreshToken)\r\n          );\r\n          instance.defaults.headers.common.Authorization = `Bearer ${res.data.jwtToken}`;\r\n          onSuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        onError(err.response?.data.message);\r\n      });\r\n  };\r\n\r\n  const register = (\r\n    data: RegisterData,\r\n    onSuccess: () => void,\r\n    onError: (error: string) => void\r\n  ) => {\r\n    authServices\r\n      .register(data)\r\n      .then(() => {\r\n        onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        onError(err.response?.data.message);\r\n      });\r\n  };\r\n\r\n  const microsoftRegister = (\r\n    data: MicrosoftRegisterData,\r\n    onSuccess: () => void,\r\n    onError: (error: string) => void\r\n  ) => {\r\n    authServices\r\n      .microsoftRegister(data)\r\n      .then(() => {\r\n        onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        onError(err.response?.data.message);\r\n      });\r\n  };\r\n\r\n  const logout = (\r\n    data: LogoutData,\r\n    onSuccess: () => void,\r\n    onError: (error: string) => void\r\n  ) => {\r\n    authServices\r\n      .logout(data)\r\n      .then(() => {\r\n        instance.defaults.headers.common.Authorization = '';\r\n        localStorage.clear();\r\n        dispatch(removeUser());\r\n        onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        instance.defaults.headers.common.Authorization = '';\r\n        localStorage.clear();\r\n        dispatch(removeUser());\r\n        onError(err.response?.data.message);\r\n      });\r\n  };\r\n\r\n  return { login, microsoftLogin, register, microsoftRegister, logout };\r\n};\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport instance from '../api/axiosInstance';\r\n\r\nconst API_URL_FILES = '/filesystem';\r\n\r\nconst getShelfFiles = (shelfId: number) =>\r\n  instance.get(`${API_URL_FILES}/shelf/${shelfId}`);\r\n\r\nconst softDeleteFile = (fileIds: number[]) =>\r\n  instance.put(`${API_URL_FILES}/file/move-to-trash`, fileIds);\r\n\r\nconst hardDeleteFile = (data: number[]) =>\r\n  instance.delete(`${API_URL_FILES}/file`, { data });\r\n\r\nconst recoverFileFromTrash = (data: number[]) =>\r\n  instance.put(`${API_URL_FILES}/file/recover`, data);\r\n\r\nconst editFile = (data: { fileId: number; fileName: string }) =>\r\n  instance.put(`${API_URL_FILES}/file/rename`, data);\r\n\r\nconst downloadSingleFile = (fileId: number) =>\r\n  instance({\r\n    url: `${API_URL_FILES}/file/download/${fileId}?file=true`,\r\n    method: 'GET',\r\n    responseType: 'blob',\r\n  });\r\n\r\nconst downloadFiles = (fileIds: string, folderIds: string) =>\r\n  instance({\r\n    url: `${API_URL_FILES}/file/zip-download?fileIds=${fileIds}&folderIds=${folderIds}`,\r\n\r\n    method: 'GET',\r\n    responseType: 'blob',\r\n  });\r\n\r\nconst uploadFiles = (\r\n  shelfId: number,\r\n  folderId: number,\r\n  files: FormData,\r\n  options: AxiosRequestConfig\r\n) =>\r\n  instance.post(\r\n    `${API_URL_FILES}/file/upload/${shelfId}/${folderId}`,\r\n    files,\r\n    options\r\n  );\r\n\r\nconst getProfilePicture = (userId?: number) =>\r\n  `${process.env.REACT_APP_API_URL}${API_URL_FILES}/file/preview/${userId}?file=false`;\r\n\r\nconst uploadProfilePicture = (\r\n  id: number,\r\n  data: FormData,\r\n  options: AxiosRequestConfig\r\n) => instance.post(`${API_URL_FILES}/file/upload/profile/${id}`, data, options);\r\n\r\nexport default {\r\n  getShelfFiles,\r\n  softDeleteFile,\r\n  hardDeleteFile,\r\n  recoverFileFromTrash,\r\n  editFile,\r\n  downloadFiles,\r\n  downloadSingleFile,\r\n  uploadFiles,\r\n  getProfilePicture,\r\n  uploadProfilePicture,\r\n};\r\n","import styled, { css } from 'styled-components';\r\nimport { Link as ReachRouterLink } from 'react-router-dom';\r\nimport { theme } from '../../../theme';\r\nimport { ButtonStyleProps } from './button.interfaces';\r\n\r\nexport const StyledButton = styled('button')<ButtonStyleProps>`\r\n  appearance: none;\r\n  font-family: inherit;\r\n  border: none;\r\n  border-radius: 999px;\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n  margin: 8px 0;\r\n  font-size: ${theme.fontSizes.md};\r\n  cursor: pointer;\r\n  min-width: 90px;\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    background-color: ${theme.colors.secondary};\r\n    color: ${theme.colors.primary};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.size === 'large' &&\r\n    css`\r\n      padding: 10px 20px;\r\n      font-size: ${theme.fontSizes.lg};\r\n    `}\r\n  ${(props) =>\r\n    props.size === 'small' &&\r\n    css`\r\n      padding: ${theme.space.xs} ${theme.space.sm};\r\n      font-size: ${theme.fontSizes.md};\r\n    `}\r\n  ${(props) =>\r\n    props.fullwidth &&\r\n    css`\r\n      width: 100%;\r\n    `}\r\n\r\n    ${({ variant }) => {\r\n    switch (variant) {\r\n      case 'primary':\r\n        return css`\r\n          color: white;\r\n          background: ${theme.colors.primary};\r\n        `;\r\n      case 'secondary':\r\n        return css`\r\n          color: white;\r\n          background: ${theme.colors.secondary};\r\n        `;\r\n      case 'light':\r\n        return css`\r\n          color: ${theme.colors.primary};\r\n          background: white;\r\n        `;\r\n      case 'lightBordered':\r\n        return css`\r\n          color: ${theme.colors.primary};\r\n          background: white;\r\n          border: 1px solid ${theme.colors.primary};\r\n        `;\r\n      case 'primaryBordered':\r\n        return css`\r\n          color: ${theme.colors.white};\r\n          background: ${theme.colors.primary};\r\n          border: 1px solid ${theme.colors.white};\r\n          &:hover {\r\n            background-color: rgba(255, 255, 255, 0.2);\r\n          }\r\n        `;\r\n      default:\r\n        return null;\r\n    }\r\n  }}\r\n\r\n  @media(max-width: ${theme.breakpoints.sm}) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const SpinnerButton = styled(StyledButton)`\r\n  padding: 0;\r\n  min-height: 45px;\r\n`;\r\n\r\nexport const StyledLink = styled(ReachRouterLink)<ButtonStyleProps>`\r\n  appearance: none;\r\n  font-family: inherit;\r\n  border: none;\r\n  border-radius: 999px;\r\n  margin: 8px 0;\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n  font-size: ${theme.fontSizes.md};\r\n  text-decoration: none;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.size === 'large' &&\r\n    css`\r\n      padding: 10px 20px;\r\n      font-size: ${theme.fontSizes.lg};\r\n    `}\r\n  ${(props) =>\r\n    props.size === 'small' &&\r\n    css`\r\n      padding: ${theme.space.sm} ${theme.space.md};\r\n      font-size: ${theme.fontSizes.md};\r\n    `}\r\n    \r\n\r\n  ${(props) =>\r\n    props.fullwidth &&\r\n    css`\r\n      width: 100%;\r\n    `}    \r\n    ${({ variant }) => {\r\n    switch (variant) {\r\n      case 'primary':\r\n        return css`\r\n          color: white;\r\n          background: ${theme.colors.primary};\r\n        `;\r\n      case 'secondary':\r\n        return css`\r\n          color: white;\r\n          background: ${theme.colors.secondary};\r\n        `;\r\n      case 'light':\r\n        return css`\r\n          color: ${theme.colors.primary};\r\n          background: white;\r\n        `;\r\n      default:\r\n        return null;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport const IconButton = styled(StyledButton)`\r\n  img {\r\n    width: 20px;\r\n    margin-right: 10px;\r\n  }\r\n  svg {\r\n    width: 20px;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    svg {\r\n      width: 100%;\r\n      font-size: ${theme.fontSizes.lg};\r\n    }\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IconButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FormProps } from '../../interfaces/propTypes';\r\nimport { theme } from '../../theme';\r\n\r\nexport const FormContainer = styled.div<FormProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto ${theme.space.lg};\r\n  padding: ${theme.space.md};\r\n  border-radius: 50px;\r\n  border: 2px solid ${theme.colors.secondary};\r\n  max-width: 380px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Base = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 300px;\r\n  padding: ${theme.space.sm};\r\n`;\r\n\r\nexport const Spinner = styled.img`\r\n  filter: invert(1);\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  animation-name: spin;\r\n  animation-duration: 1000ms;\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  @-ms-keyframes spin {\r\n    from {\r\n      -ms-transform: rotate(0deg);\r\n    }\r\n    to {\r\n      -ms-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-moz-keyframes spin {\r\n    from {\r\n      -moz-transform: rotate(0deg);\r\n    }\r\n    to {\r\n      -moz-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    from {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InputFieldWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 75px;\r\n  position: relative;\r\n`;\r\n\r\nexport const FunctionForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  min-height: 350px;\r\n\r\n  margin-bottom: ${theme.space.md};\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const FunctionFormInner = styled.div`\r\n  width: 100%;\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import {\r\n  StyledButton,\r\n  StyledLink,\r\n  IconButton,\r\n  SpinnerButton,\r\n  IconButtonContainer,\r\n} from './button-styles';\r\nimport { Spinner } from '../../form/form-styles';\r\nimport { ButtonProps } from './button.interfaces';\r\n\r\nexport const Button = ({\r\n  children,\r\n  icon,\r\n  to,\r\n  isLoading,\r\n  spinner,\r\n  onClick,\r\n  size,\r\n  variant = 'primary',\r\n  fullwidth,\r\n  type,\r\n  ...restProps\r\n}: ButtonProps) => {\r\n  if (to) {\r\n    return (\r\n      <StyledLink\r\n        size={size}\r\n        fullwidth={fullwidth}\r\n        variant={variant}\r\n        to={to}\r\n        {...restProps}\r\n      >\r\n        {children}\r\n      </StyledLink>\r\n    );\r\n  }\r\n  if (spinner) {\r\n    return (\r\n      <SpinnerButton\r\n        size={size}\r\n        onClick={onClick}\r\n        fullwidth={fullwidth}\r\n        variant={variant}\r\n        {...restProps}\r\n      >\r\n        {isLoading ? (\r\n          <Spinner\r\n            src={`${process.env.PUBLIC_URL}/assets/icons/loading.png`}\r\n            alt=\"loading\"\r\n          />\r\n        ) : (\r\n          children\r\n        )}\r\n      </SpinnerButton>\r\n    );\r\n  }\r\n  if (icon) {\r\n    return (\r\n      <IconButton\r\n        size={size}\r\n        onClick={onClick}\r\n        fullwidth={fullwidth}\r\n        variant={variant}\r\n        {...restProps}\r\n      >\r\n        <IconButtonContainer>\r\n          {icon}\r\n          <span>{children}</span>\r\n        </IconButtonContainer>\r\n      </IconButton>\r\n    );\r\n  }\r\n  return (\r\n    <StyledButton\r\n      size={size}\r\n      onClick={onClick}\r\n      fullwidth={fullwidth}\r\n      variant={variant}\r\n      type={type}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useAuth } from '../../hooks/authHook';\r\nimport fileServices from '../../services/fileServices';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { PlainText, Link } from '../text/text-styles';\r\nimport { Button } from '../UI/button';\r\nimport { DropDown, ProfilePicture, ProfileInfoWrapper } from './header-styles';\r\n\r\nconst Profile = () => {\r\n  const [showDropdown, setShowDropdown] = useState<boolean>(false);\r\n\r\n  const { logout } = useAuth();\r\n\r\n  const user = useAppSelector((state) => state.user.user);\r\n\r\n  const data = {\r\n    jwtRefreshToken: JSON.parse(localStorage.getItem('refreshToken') || ''),\r\n    jwtToken: JSON.parse(localStorage.getItem('token') || ''),\r\n  };\r\n\r\n  const handleDropdownVisibility = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout(\r\n      data,\r\n      () => {},\r\n      () => {}\r\n    );\r\n  };\r\n  const dropDownRef = useRef<HTMLDivElement>(null);\r\n  const profileRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event: MouseEvent) => {\r\n      if (\r\n        dropDownRef.current &&\r\n        profileRef.current &&\r\n        event.target instanceof Node &&\r\n        !dropDownRef.current.contains(event.target) &&\r\n        !profileRef.current.contains(event.target)\r\n      ) {\r\n        setShowDropdown(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleOutsideClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n    };\r\n  }, [dropDownRef, profileRef]);\r\n\r\n  const imgUrl = fileServices.getProfilePicture(user?.id);\r\n\r\n  return (\r\n    <>\r\n      <ProfilePicture\r\n        imgUrl={imgUrl}\r\n        ref={profileRef}\r\n        onClick={handleDropdownVisibility}\r\n      />\r\n      {showDropdown && (\r\n        <DropDown ref={dropDownRef}>\r\n          <div>\r\n            <ProfilePicture imgUrl={imgUrl} />\r\n          </div>\r\n          <ProfileInfoWrapper>\r\n            <PlainText>\r\n              {user?.firstName} {user?.lastName}\r\n            </PlainText>\r\n            <PlainText>{user?.email}</PlainText>\r\n            {user?.role.id !== 1 && (\r\n              <Link to={`/profile/${user?.id}`}>manage account</Link>\r\n            )}\r\n            <div>\r\n              <Button onClick={handleLogout} size=\"small\">\r\n                log out\r\n              </Button>\r\n            </div>\r\n          </ProfileInfoWrapper>\r\n        </DropDown>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { HeaderContainer, Logo, ProfileContainer } from './header-styles';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { Link } from '../text/text-styles';\r\nimport Profile from './profile';\r\nimport { Button } from '../UI/button';\r\nimport { HeaderProps } from './header.interface';\r\n\r\nconst Header = ({ hideProfile, position, showButtons }: HeaderProps) => (\r\n  <HeaderContainer position={position}>\r\n    <Link to={Routes.HOME}>\r\n      <Logo src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} />\r\n    </Link>\r\n    {showButtons && (\r\n      <div>\r\n        <Button variant=\"light\" to={Routes.LOGIN}>\r\n          Sign in\r\n        </Button>\r\n        <Button to={Routes.REGISTER}>Sign up</Button>\r\n      </div>\r\n    )}\r\n    {!hideProfile && (\r\n      <ProfileContainer hideProfile={hideProfile}>\r\n        <Profile />\r\n      </ProfileContainer>\r\n    )}\r\n  </HeaderContainer>\r\n);\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\nimport { ContainerProps } from './layout.interface';\r\n\r\nexport const Wrapper = styled.div<ContainerProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100vh;\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n`;\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n\r\n  gap: 50px;\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const LandinPageContainer = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: ${theme.space.lg};\r\n`;\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n  padding: ${theme.space.lg};\r\n  background-color: ${({ background }) =>\r\n    background === 'primary' && theme.colors.primary};\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    ${({ isHiddenOnSmallScreen }) =>\r\n      isHiddenOnSmallScreen && 'display: none;'}/* height: 100vh;s */\r\n  }\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const EmailVerificationContainer = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  padding: ${theme.space.xl};\r\n  border-radius: 30px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n  color: white;\r\n  background-color: ${theme.colors.primary};\r\n`;\r\n\r\nexport const Feature = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 ${theme.space.md};\r\n  padding: ${theme.space.md};\r\n  height: 100%;\r\n  max-width: 400px;\r\n  max-height: 450px;\r\n  text-align: center;\r\n  color: white;\r\n  border: 1px solid white;\r\n  border-radius: 50px;\r\n`;\r\n\r\nexport const ModalButtonDivider = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const DashboardLayout = styled.div`\r\n  display: flex;\r\n  height: calc(100vh - 60px);\r\n`;\r\n\r\nexport const DashboardContentWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: ${theme.space.lg};\r\n`;\r\n\r\nexport const FunctionWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: ${theme.space.md};\r\n`;\r\n\r\nexport const FunctionEditorWrapper = styled.div`\r\n  flex: 4;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nexport const FunctionResultWrapper = styled.div`\r\n  flex: 3;\r\n  margin-left: ${theme.space.md};\r\n  padding-left: ${theme.space.sm};\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nexport const FunctionInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  margin-left: ${theme.space.md};\r\n  padding-left: ${theme.space.sm};\r\n`;\r\n\r\nexport const FunctionButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const NavigationSidebarOuterWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\nexport const NavigationSidebarInnerWrapper = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const NavigationSidebarContentWrapper = styled.nav`\r\n  width: 280px;\r\n  height: 100%;\r\n  background: ${theme.colors.primary};\r\n`;\r\n\r\nexport const NavigationSidebarToggleButton = styled.button`\r\n  position: absolute;\r\n  left: 100%;\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  color: ${theme.colors.primary};\r\n  font-size: ${theme.fontSizes.xl};\r\n  cursor: pointer;\r\n\r\n  span {\r\n    display: none;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: ${theme.space.lg};\r\n\r\n    background-color: ${theme.colors.white};\r\n    border: 1px solid ${theme.colors.primary};\r\n    font-size: ${theme.fontSizes.sm};\r\n\r\n    padding: ${theme.space.xs};\r\n  }\r\n\r\n  &:hover span {\r\n    display: block;\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${theme.colors.white};\r\n  user-select: none;\r\n`;\r\n\r\nexport const ItemWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  align-items: center;\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n  color: ${theme.colors.white};\r\n`;\r\n\r\nexport const ItemChildrenWrapper = styled.div`\r\n  padding-left: ${theme.space.md};\r\n  border-bottom: 1px solid ${theme.colors.white};\r\n`;\r\n\r\nexport const ItemIconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  color: ${theme.colors.white};\r\n  font-size: ${theme.fontSizes.lg};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const NavigationSidebarLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${theme.colors.white};\r\n  margin-left: ${theme.space.sm};\r\n`;\r\n","import { useState } from 'react';\r\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa';\r\nimport {\r\n  Item,\r\n  ItemChildrenWrapper,\r\n  ItemIconButton,\r\n  ItemWrapper,\r\n  NavigationSidebarLink,\r\n} from './navigationSidebarItem-styles';\r\nimport { NavigationSidebarItemProps } from './navigationSidebarItem.interfaces';\r\n\r\nconst NavigationSidebarItem = ({\r\n  children,\r\n  label,\r\n  icon,\r\n  to,\r\n}: NavigationSidebarItemProps) => {\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const handleCollapse = () => {\r\n    setIsCollapsed(!isCollapsed);\r\n  };\r\n\r\n  const item = (\r\n    <Item>\r\n      {icon}\r\n      <NavigationSidebarLink to={to}>{label}</NavigationSidebarLink>\r\n    </Item>\r\n  );\r\n\r\n  if (children) {\r\n    return (\r\n      <>\r\n        <ItemWrapper>\r\n          {item}\r\n          <ItemIconButton onClick={handleCollapse}>\r\n            {isCollapsed ? <FaCaretDown /> : <FaCaretUp />}\r\n          </ItemIconButton>\r\n        </ItemWrapper>\r\n        <ItemChildrenWrapper>{!isCollapsed && children}</ItemChildrenWrapper>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <ItemWrapper>{item}</ItemWrapper>;\r\n};\r\n\r\nexport default NavigationSidebarItem;\r\n","import { useState } from 'react';\r\nimport {\r\n  FaAngleDoubleLeft,\r\n  FaAngleDoubleRight,\r\n  FaChartLine,\r\n  FaList,\r\n  FaShare,\r\n  FaTrash,\r\n  FaUserFriends,\r\n} from 'react-icons/fa';\r\nimport { AiOutlineFunction } from 'react-icons/ai';\r\nimport { Role } from '../../utils/enums/roles';\r\nimport {\r\n  NavigationSidebarToggleButton,\r\n  NavigationSidebarOuterWrapper,\r\n  NavigationSidebarInnerWrapper,\r\n  NavigationSidebarContentWrapper,\r\n} from './navigationSidebar-styles';\r\nimport NavigationSidebarItem from './navigationSidebarItem';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { RootState } from '../../store/store';\r\nimport { Routes } from '../../utils/enums/routes';\r\n\r\nconst links = [\r\n  {\r\n    name: 'Shelves',\r\n    path: Routes.DASHBOARD,\r\n    icon: <FaList />,\r\n    rolesWithAccess: [Role.USER, Role.ADMIN, Role.MASTER_ADMIN],\r\n    childrenLinks: [\r\n      { name: 'Shared', icon: <FaShare />, path: Routes.SHARED_SHELVES },\r\n      { name: 'Trash', icon: <FaTrash />, path: Routes.TRASH },\r\n    ],\r\n  },\r\n  {\r\n    name: 'Functions',\r\n    path: Routes.FUNCTIONS,\r\n    icon: <AiOutlineFunction />,\r\n    rolesWithAccess: [Role.USER, Role.ADMIN, Role.MASTER_ADMIN],\r\n  },\r\n  {\r\n    name: 'Statistics',\r\n    path: Routes.STATISTICS,\r\n    icon: <FaChartLine />,\r\n    rolesWithAccess: [Role.ADMIN, Role.MASTER_ADMIN],\r\n  },\r\n  {\r\n    name: 'Users',\r\n    path: Routes.USERS,\r\n    icon: <FaUserFriends />,\r\n    rolesWithAccess: [Role.MASTER_ADMIN],\r\n  },\r\n];\r\n\r\nconst NavigationSidebar = () => {\r\n  const user = useAppSelector((state: RootState) => state.user.user);\r\n\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const handleNavigationSidebarToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <NavigationSidebarOuterWrapper>\r\n      <NavigationSidebarInnerWrapper>\r\n        <NavigationSidebarToggleButton onClick={handleNavigationSidebarToggle}>\r\n          {isOpen ? <FaAngleDoubleLeft /> : <FaAngleDoubleRight />}\r\n          <span>{isOpen ? 'Collapse' : 'Expand'}</span>\r\n        </NavigationSidebarToggleButton>\r\n        {isOpen && (\r\n          <NavigationSidebarContentWrapper>\r\n            {links.map((link) => {\r\n              const userHasRequiredRole =\r\n                user && link.rolesWithAccess.includes(user?.role.id);\r\n\r\n              if (user && !userHasRequiredRole) return null;\r\n\r\n              if (link.childrenLinks) {\r\n                return (\r\n                  <NavigationSidebarItem\r\n                    key={link.name}\r\n                    label={link.name}\r\n                    icon={link.icon}\r\n                    to={link.path}\r\n                  >\r\n                    {link.childrenLinks.map((childLink) => (\r\n                      <NavigationSidebarItem\r\n                        key={childLink.name}\r\n                        label={childLink.name}\r\n                        icon={childLink.icon}\r\n                        to={childLink.path}\r\n                      />\r\n                    ))}\r\n                  </NavigationSidebarItem>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <NavigationSidebarItem\r\n                  key={link.name}\r\n                  label={link.name}\r\n                  icon={link.icon}\r\n                  to={link.path}\r\n                />\r\n              );\r\n            })}\r\n          </NavigationSidebarContentWrapper>\r\n        )}\r\n      </NavigationSidebarInnerWrapper>\r\n    </NavigationSidebarOuterWrapper>\r\n  );\r\n};\r\n\r\nexport default NavigationSidebar;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\n\r\nexport const CheckboxWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Checkbox = styled.input`\r\n  cursor: pointer;\r\n  background-color: red;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: ${theme.fontSizes.md};\r\n  cursor: pointer;\r\n`;\r\n","import React, { ForwardedRef } from 'react';\r\nimport { Checkbox, CheckboxWrapper, Label } from './checkbox-styles';\r\nimport { CheckBoxProps } from './checkbox.interfaces';\r\n\r\nconst CheckBox = React.forwardRef(\r\n  (\r\n    { children, id, ...restProps }: CheckBoxProps,\r\n    ref: ForwardedRef<HTMLInputElement>\r\n  ) => (\r\n    <CheckboxWrapper>\r\n      <Checkbox id={id} type=\"checkbox\" ref={ref} {...restProps} />\r\n      <Label htmlFor={id}>{children}</Label>\r\n    </CheckboxWrapper>\r\n  )\r\n);\r\n\r\nexport default CheckBox;\r\n","import {\r\n  HeaderTypes,\r\n  SorterDataTypes,\r\n  SortingDirectionTypes,\r\n  TableDataTypes,\r\n} from '../../interfaces/dataTypes';\r\nimport { SortingDirection } from '../../utils/enums/table';\r\n\r\nconst sortData = (\r\n  data: SorterDataTypes[],\r\n  sortKey: string,\r\n  sortingDirection: string\r\n) => {\r\n  data.sort((a: SorterDataTypes, b: SorterDataTypes) => {\r\n    let relevantValueA = a[sortKey];\r\n    let relevantValueB = b[sortKey];\r\n    if (\r\n      typeof relevantValueA === 'string' &&\r\n      typeof relevantValueB === 'string'\r\n    ) {\r\n      relevantValueA = relevantValueA.toLowerCase();\r\n      relevantValueB = relevantValueB.toLowerCase();\r\n    }\r\n\r\n    if (sortKey === 'createdAt') {\r\n      relevantValueA = new Date(a[sortKey]).getTime();\r\n      relevantValueB = new Date(b[sortKey]).getTime();\r\n    }\r\n\r\n    if (\r\n      sortingDirection === SortingDirection.UNSORTED ||\r\n      sortingDirection === SortingDirection.ASCENDING\r\n    ) {\r\n      if (relevantValueA < relevantValueB) return -1;\r\n      if (relevantValueA > relevantValueB) return 1;\r\n      return 0;\r\n    }\r\n    if (relevantValueA > relevantValueB) return -1;\r\n    if (relevantValueA < relevantValueB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst getNextSortingDirection = (sortingDirection: SortingDirection) => {\r\n  if (\r\n    sortingDirection === SortingDirection.UNSORTED ||\r\n    sortingDirection === SortingDirection.ASCENDING\r\n  ) {\r\n    return SortingDirection.DESCENDING;\r\n  }\r\n  return SortingDirection.ASCENDING;\r\n};\r\n\r\nexport const sortColumn = (\r\n  sortKey: string,\r\n  sortingDirections: SortingDirectionTypes,\r\n  tableData: TableDataTypes[],\r\n  setTableData: (data: TableDataTypes[]) => void,\r\n  setSortingDirections: (data: SortingDirectionTypes) => void\r\n) => {\r\n  const currentSortingDirection = sortingDirections[sortKey];\r\n  const newTableData = [...tableData];\r\n\r\n  sortData(newTableData, sortKey, currentSortingDirection);\r\n  const nextSortingDirection = getNextSortingDirection(currentSortingDirection);\r\n  const newSortingDirections = { ...sortingDirections };\r\n  newSortingDirections[sortKey] = nextSortingDirection;\r\n\r\n  setTableData(newTableData);\r\n  setSortingDirections(newSortingDirections);\r\n};\r\n\r\nexport const createSortingDirectons = (\r\n  headers: HeaderTypes[],\r\n  setSortingDirections: (data: SortingDirectionTypes) => void\r\n) => {\r\n  const ourSortingDirections: SortingDirectionTypes = {};\r\n  headers.forEach((header: HeaderTypes) => {\r\n    ourSortingDirections[header.key] = SortingDirection.UNSORTED;\r\n  });\r\n  setSortingDirections(ourSortingDirections);\r\n};\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const Thead = styled.thead`\r\n  background: ${theme.colors.secondary};\r\n  padding: ${theme.space.sm} 0;\r\n  text-align: left;\r\n\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\nexport const StyledTableHeader = styled.th`\r\n  padding: ${theme.space.sm};\r\n  user-select: none;\r\n  cursor: pointer;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    background: white;\r\n    height: 70%;\r\n    width: 1px;\r\n    right: 0;\r\n    top: 7px;\r\n  }\r\n  &:last-child {\r\n    cursor: default;\r\n    &:after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CheckBoxTableHeader = styled.th`\r\n  padding: ${theme.space.sm};\r\n  width: 0;\r\n`;\r\nexport const TableHeaderInner = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledTableContainer = styled.div`\r\n  overflow: auto;\r\n  max-height: 390px;\r\n  position: relative;\r\n`;\r\n\r\nexport const StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    display: block;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nexport const StyledCell = styled.td`\r\n  border-bottom: 1px solid #d0d0d0;\r\n  padding: ${theme.space.sm};\r\n  border-collapse: collapse;\r\n  cursor: pointer;\r\n`;\r\nexport const StyledRow = styled.tr`\r\n  &:last-child {\r\n    ${StyledCell} {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${theme.colors.lightBlue};\r\n  }\r\n`;\r\n\r\nexport const DeleteActionContainer = styled.span`\r\n  margin-right: ${theme.space.sm};\r\n\r\n  &:hover {\r\n    color: ${theme.colors.danger};\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  display: inline-block;\r\n  margin-right: ${theme.space.sm};\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const DeleteIconContainer = styled.span`\r\n  margin-right: ${theme.space.sm};\r\n\r\n  &:hover {\r\n    color: ${theme.colors.danger};\r\n  }\r\n`;\r\n","/* eslint-disable react/prop-types */\r\nimport { FaFile, FaFolder } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TableDataTypes } from '../../interfaces/dataTypes';\r\nimport { Role } from '../../utils/enums/roles';\r\nimport CheckBox from '../UI/checkbox/checkBox';\r\nimport { ActionType, RowProps } from './table.interfaces';\r\nimport { StyledRow, StyledCell, IconContainer } from './table.styles';\r\n\r\nexport const Row = ({\r\n  data,\r\n  multiSelect,\r\n  selectedRows,\r\n  setSelectedRows,\r\n  isChecked,\r\n  path,\r\n  actions,\r\n}: RowProps) => {\r\n  const navigation = useNavigate();\r\n\r\n  const handleChange = () => {\r\n    const alreadySelected = selectedRows.some(\r\n      (row: TableDataTypes) => row.id === data.id\r\n    );\r\n\r\n    if (!alreadySelected) {\r\n      setSelectedRows([...selectedRows, data]);\r\n    } else {\r\n      setSelectedRows(\r\n        selectedRows.filter((row: TableDataTypes) => row.id !== data.id)\r\n      );\r\n    }\r\n  };\r\n\r\n  const CellWithHandler = ({\r\n    rowText,\r\n    pathName,\r\n  }: {\r\n    rowText: string | number | { id: Role; name: string };\r\n    pathName: string;\r\n  }) => {\r\n    const handleClick = () => {\r\n      if (data.role) return;\r\n      if (data.folder || data.folder === undefined) navigation(pathName);\r\n    };\r\n\r\n    return (\r\n      <StyledCell onClick={handleClick}>\r\n        {data.folder !== undefined && (\r\n          <IconContainer>\r\n            {rowText === data.name && (data.folder ? <FaFolder /> : <FaFile />)}\r\n          </IconContainer>\r\n        )}\r\n        {rowText}\r\n      </StyledCell>\r\n    );\r\n  };\r\n\r\n  const ActionWithHandler = ({ action }: { action: ActionType }) => {\r\n    const handleClick = () => {\r\n      action.handler(data);\r\n    };\r\n\r\n    return <action.comp key={action.key} onClick={handleClick} />;\r\n  };\r\n\r\n  return (\r\n    <StyledRow>\r\n      {multiSelect && (\r\n        <StyledCell>\r\n          <CheckBox onChange={handleChange} checked={isChecked} />\r\n        </StyledCell>\r\n      )}\r\n\r\n      {Object.values(data).map((rowText) => {\r\n        if (rowText === data.id || rowText === data.folder) return null;\r\n\r\n        if (\r\n          rowText === data.id ||\r\n          rowText === data.folder ||\r\n          rowText === data.custom ||\r\n          typeof rowText === 'boolean'\r\n        )\r\n          return null;\r\n\r\n        return (\r\n          <CellWithHandler\r\n            key={`${data.id}-${rowText}`}\r\n            rowText={rowText}\r\n            pathName={`${path}${data.id}`}\r\n          />\r\n        );\r\n      })}\r\n      <StyledCell>\r\n        {actions &&\r\n          actions.map((action: ActionType) => (\r\n            <ActionWithHandler action={action} key={action.key} />\r\n          ))}\r\n      </StyledCell>\r\n    </StyledRow>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa';\r\nimport CheckBox from '../UI/checkbox/checkBox';\r\nimport { createSortingDirectons, sortColumn } from './sorter';\r\nimport {\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  Thead,\r\n  CheckBoxTableHeader,\r\n  TableHeaderInner,\r\n  StyledTableContainer,\r\n} from './table.styles';\r\nimport {\r\n  HeaderTypes,\r\n  SortingDirectionTypes,\r\n  TableDataTypes,\r\n} from '../../interfaces/dataTypes';\r\nimport { SortingDirection } from '../../utils/enums/table';\r\nimport { ActionType } from './table.interfaces';\r\nimport { Row } from './row';\r\n\r\ninterface TableProps {\r\n  mulitSelect?: boolean;\r\n  data: TableDataTypes[];\r\n  headers: HeaderTypes[];\r\n  setTableData: (data: TableDataTypes[]) => void;\r\n  path: string;\r\n  getSelectedRows?: (data: TableDataTypes[]) => void;\r\n  actions?: ActionType[];\r\n}\r\n\r\nexport const Table = ({\r\n  mulitSelect,\r\n  data,\r\n  headers,\r\n  setTableData,\r\n  path,\r\n  getSelectedRows,\r\n  actions,\r\n}: TableProps) => {\r\n  const [selectAll, setSelectAll] = useState<boolean>(false);\r\n  const [selectedRows, setSelectedRows] = useState<TableDataTypes[]>([]);\r\n  const [sortingDirections, setSortingDirections] =\r\n    useState<SortingDirectionTypes>({});\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedRows.length !== data.length) {\r\n      setSelectedRows(data);\r\n      setSelectAll(true);\r\n    } else {\r\n      setSelectedRows([]);\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedRows.length !== data.length) {\r\n      setSelectAll(false);\r\n    } else if (data.length !== 0) {\r\n      setSelectAll(true);\r\n    }\r\n    if (getSelectedRows) {\r\n      getSelectedRows(selectedRows);\r\n    }\r\n  }, [selectedRows]);\r\n\r\n  useEffect(() => {\r\n    createSortingDirectons(headers, setSortingDirections);\r\n  }, []);\r\n\r\n  const sorterArrowToggle = (key: string) => {\r\n    if (\r\n      sortingDirections[key] === SortingDirection.UNSORTED ||\r\n      sortingDirections[key] === SortingDirection.ASCENDING\r\n    )\r\n      return <FaCaretDown />;\r\n    return <FaCaretUp />;\r\n  };\r\n\r\n  const handleClick = (key: string) => {\r\n    sortColumn(\r\n      key,\r\n      sortingDirections,\r\n      data,\r\n      setTableData,\r\n      setSortingDirections\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledTableContainer>\r\n      <StyledTable>\r\n        <Thead>\r\n          <tr>\r\n            {mulitSelect && (\r\n              <CheckBoxTableHeader>\r\n                <CheckBox onChange={handleSelectAll} checked={selectAll} />\r\n              </CheckBoxTableHeader>\r\n            )}\r\n            {headers.map(({ header, key }) => (\r\n              <StyledTableHeader onClick={() => handleClick(key)} key={header}>\r\n                <TableHeaderInner>\r\n                  {header}\r\n                  {sorterArrowToggle(key)}\r\n                </TableHeaderInner>\r\n              </StyledTableHeader>\r\n            ))}\r\n            <StyledTableHeader>Actions</StyledTableHeader>\r\n          </tr>\r\n        </Thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <Row\r\n              actions={actions}\r\n              key={`${item.id}-${item.name}`}\r\n              selectedRows={selectedRows}\r\n              setSelectedRows={setSelectedRows}\r\n              multiSelect={mulitSelect}\r\n              data={item}\r\n              path={path}\r\n              isChecked={selectedRows.some(\r\n                (rowData: TableDataTypes) =>\r\n                  rowData.id === item.id && rowData.folder === item.folder\r\n              )}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledTableContainer>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\n\r\nexport const SearchInputField = styled.input`\r\n  height: ${theme.space.lg};\r\n  width: 100%;\r\n  border-radius: 50px;\r\n  text-indent: ${theme.space.lg};\r\n\r\n  outline: none;\r\n\r\n  border: 1px solid ${theme.colors.secondary};\r\n`;\r\n\r\nexport const SearchInputContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nexport const SearchIconContainer = styled.div`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: ${theme.space.sm};\r\n  top: ${theme.space.sm};\r\n`;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { Dispatch, SetStateAction } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { theme } from '../../../theme';\r\nimport {\r\n  SearchIconContainer,\r\n  SearchInputContainer,\r\n  SearchInputField,\r\n} from './searchBar-styles';\r\n\r\ninterface SearchProps {\r\n  setData?: Dispatch<SetStateAction<any>>;\r\n  data?: any;\r\n  searchKey?: string;\r\n  placeholder?: string;\r\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nconst SearchBar = ({\r\n  setData,\r\n  data,\r\n  searchKey,\r\n  onChange,\r\n  ...restProps\r\n}: SearchProps) => {\r\n  const handleSearchchange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    if (setData !== undefined && searchKey !== undefined) {\r\n      if (!e.currentTarget.value) {\r\n        setData(data);\r\n      } else {\r\n        setData(\r\n          data.filter((item: any) =>\r\n            item[searchKey]\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(e.currentTarget.value.toLowerCase().trim())\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchInputContainer>\r\n      <SearchInputField\r\n        id=\"searchBar\"\r\n        type=\"text\"\r\n        {...restProps}\r\n        onChange={data && searchKey ? handleSearchchange : onChange}\r\n      />\r\n      <SearchIconContainer>\r\n        <FaSearch color={theme.colors.secondary} />\r\n      </SearchIconContainer>\r\n    </SearchInputContainer>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import instance from '../api/axiosInstance';\r\n\r\nconst API_URL_FILESYSTEM = '/filesystem';\r\n\r\nconst getShelves = () => instance.get(`${API_URL_FILESYSTEM}/shelf`);\r\n\r\nconst createShelf = (shelfName: string) =>\r\n  instance.post(`${API_URL_FILESYSTEM}/shelf`, shelfName);\r\n\r\nconst softDeleteShelf = (shelfIds: number[]) =>\r\n  instance.put(`${API_URL_FILESYSTEM}/shelf/move-to-trash`, shelfIds);\r\n\r\nconst hardDeleteShelf = (shelfId: number | undefined) =>\r\n  instance.delete(`${API_URL_FILESYSTEM}/shelf/${shelfId}`);\r\n\r\nconst editShelf = (data: { shelfId: number; shelfName: string }) =>\r\n  instance.put(`${API_URL_FILESYSTEM}/shelf/rename`, data);\r\n\r\nexport default {\r\n  getShelves,\r\n  createShelf,\r\n  softDeleteShelf,\r\n  editShelf,\r\n  hardDeleteShelf,\r\n};\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const TableContainer = styled.div`\r\n  padding: ${theme.space.lg};\r\n  box-shadow: 0 0 6px 0 ${theme.colors.shadow};\r\n  width: 100%;\r\n  // regulates long text if it's inserted into the tableWrapper as child\r\n  word-wrap: break-word;\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport const TableTitle = styled.div`\r\n  font-size: ${theme.fontSizes.xl};\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  button {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    display: grid;\r\n    grid-template-columns: 3fr 3fr;\r\n    justify-items: center;\r\n\r\n    button {\r\n      margin-right: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TableDescription = styled.div`\r\n  font-size: ${theme.fontSizes.md};\r\n`;\r\n\r\nexport const TableContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ActionsBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  margin-top: ${theme.space.lg};\r\n  margin-bottom: ${theme.space.sm};\r\n`;\r\n\r\nexport const ButtonActionsBox = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: end;\r\n\r\n  button {\r\n    margin-left: ${theme.space.sm};\r\n  }\r\n`;\r\n","import {\n  TableContainer,\n  TableContent,\n  TableDescription,\n  TableTitle,\n} from './tableWrapper.styles';\n\nexport interface TableWrapperProps {\n  title?: string;\n  description?: string;\n  children: JSX.Element | JSX.Element[];\n}\n\nconst TableWrapper = ({ title, description, children }: TableWrapperProps) => (\n  <TableContainer>\n    <TableTitle>{title}</TableTitle>\n    <TableDescription>{description}</TableDescription>\n    <TableContent>{children}</TableContent>\n  </TableContainer>\n);\n\nexport default TableWrapper;\n","import { FaTrash, FaEdit } from 'react-icons/fa';\r\nimport { RiArrowGoBackFill } from 'react-icons/ri';\r\nimport { TableDataTypes } from '../../interfaces/dataTypes';\r\nimport { DeleteIconContainer, IconContainer } from './table.styles';\r\n\r\nexport interface RowProps {\r\n  data: TableDataTypes;\r\n  multiSelect?: boolean;\r\n  selectedRows: TableDataTypes[];\r\n  setSelectedRows: (data: TableDataTypes[]) => void;\r\n  isChecked?: boolean;\r\n  path: string;\r\n  actions?: ActionType[];\r\n}\r\n\r\nexport interface ActionType {\r\n  comp: ({ onClick }: { onClick: () => void }) => JSX.Element;\r\n  handler: (row: TableDataTypes) => void;\r\n  key: number;\r\n}\r\n\r\nexport const Delete = ({ onClick }: { onClick: () => void }) => (\r\n  <DeleteIconContainer>\r\n    <FaTrash onClick={onClick} />\r\n  </DeleteIconContainer>\r\n);\r\n\r\nexport const Edit = ({ onClick }: { onClick: () => void }) => (\r\n  <IconContainer>\r\n    <FaEdit onClick={onClick} />\r\n  </IconContainer>\r\n);\r\n\r\nexport const Recover = ({ onClick }: { onClick: () => void }) => (\r\n  <IconContainer>\r\n    <RiArrowGoBackFill onClick={onClick} />\r\n  </IconContainer>\r\n);\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\nimport { ButtonProps } from '../UI/button/button.interfaces';\r\nimport { FunctionStyleProps, ModalStyleProps } from './modal.interfaces';\r\n\r\nexport const Backdrop = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: rgba(46, 52, 66, 0.6);\r\n\r\n  z-index: 9999;\r\n`;\r\n\r\nexport const ModalContainer = styled.div<ModalStyleProps>`\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  position: absolute;\r\n\r\n  background-color: ${({ background }) => background || theme.colors.white};\r\n  color: ${({ color }) => color || theme.colors.primary};\r\n  border-radius: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  max-height: 70px;\r\n  padding: ${theme.space.none} ${theme.space.sm};\r\n  width: 100%;\r\n`;\r\n\r\nexport const HeaderItem = styled.div`\r\n  margin: 0 ${theme.space.md};\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  padding: ${theme.space.md};\r\n  padding-top: 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  padding: ${theme.space.none} ${theme.space.sm};\r\n  margin-top: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: end;\r\n  bottom: 0;\r\n  height: 90px;\r\n  width: 100%;\r\n  border-top: 1px solid ${({ color }) => color || theme.colors.primary};\r\n`;\r\n\r\nexport const Close = styled.button<ButtonProps>`\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: ${theme.space.none};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const DeleteModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const RadioContainer = styled.div`\r\n  display: flex;\r\n  line-height: 20px;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const RadioLabel = styled.label<FunctionStyleProps>`\r\n  color: black;\r\n  cursor: pointer;\r\n  background: ${theme.colors.white};\r\n  border-radius: 30px;\r\n  border: 1px;\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n  margin-right: ${theme.space.lg};\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n  padding: ${theme.space.sm} ${theme.space.lg};\r\n  img {\r\n    width: 45px;\r\n    height: 45px;\r\n  }\r\n  input {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n  }\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    margin-bottom: ${theme.space.sm};\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\nexport const RadioInner = styled.div`\r\n  padding: ${theme.space.sm} 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-height: 120px;\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    text-align: left;\r\n  }\r\n`;\r\nexport const FunctionModalContainer = styled.div`\r\n  background: ${theme.colors.secondary};\r\n  height: 700px;\r\n  max-width: 700px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-radius: 10px;\r\n  margin: ${theme.space.md};\r\n`;\r\n\r\nexport const FunctionContainer = styled.div`\r\n  overflow-y: auto;\r\n  padding: 0px ${theme.space.lg} ${theme.space.sm};\r\n  border-radius: 55px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const RadioTitle = styled.p`\r\n  margin: 0;\r\n  margin-bottom: ${theme.space.sm};\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    margin: ${theme.space.sm} 0;\r\n  }\r\n`;\r\nexport const RadioSubTitle = styled.p`\r\n  margin: 0;\r\n  font-size: ${theme.fontSizes.sm};\r\n`;\r\n\r\nexport const FunctionHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 70px;\r\n  padding: ${theme.space.none} ${theme.space.sm};\r\n  width: 100%;\r\n`;\r\n\r\nexport const FunctionModalFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${theme.space.md} ${theme.space.lg};\r\n  width: 100%;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { SyntheticEvent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FaRegTimesCircle } from 'react-icons/fa';\r\nimport { theme } from '../../theme';\r\nimport { H2 } from '../text/text-styles';\r\nimport {\r\n  Backdrop,\r\n  ModalContainer,\r\n  Header,\r\n  Close,\r\n  Body,\r\n  HeaderItem,\r\n} from './modal.styles';\r\nimport { ModalProps } from './modal.interfaces';\r\n\r\nconst Modal = ({\r\n  onCloseModal,\r\n  children,\r\n  title,\r\n  closeIcon,\r\n  background,\r\n  color,\r\n}: ModalProps) => {\r\n  const handleEventPropagation = (event: SyntheticEvent) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const modal = (\r\n    <Backdrop onClick={onCloseModal}>\r\n      <ModalContainer\r\n        onClick={handleEventPropagation}\r\n        background={background}\r\n        color={color}\r\n      >\r\n        {title && (\r\n          <Header>\r\n            <HeaderItem>\r\n              <H2>{title}</H2>\r\n            </HeaderItem>\r\n\r\n            {closeIcon && (\r\n              <HeaderItem>\r\n                <Close onClick={onCloseModal}>\r\n                  <FaRegTimesCircle\r\n                    color={color || theme.colors.primary}\r\n                    size={theme.space.lg}\r\n                  />\r\n                </Close>\r\n              </HeaderItem>\r\n            )}\r\n          </Header>\r\n        )}\r\n        <Body>{children}</Body>\r\n      </ModalContainer>\r\n    </Backdrop>\r\n  );\r\n\r\n  const modalPortal = document.getElementById('modal-root');\r\n  return <>{modalPortal ? ReactDOM.createPortal(modal, modalPortal) : null}</>;\r\n};\r\n\r\nexport default Modal;\r\n","export const emailRegex =\r\n  /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/g;\r\n\r\nexport const passwordRegex =\r\n  /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&.()–[{}\\]:;',?/*~$^+=<>])([^\\s]){8,}$/g;\r\n\r\nexport const whiteSpaceRegex =\r\n  /^[A-Za-z0-9_!@#$%^&\\-_+][A-Za-z0-9 _!@#$%^&\\-_+]*$/g;\r\n","import styled from 'styled-components';\r\n\r\nimport { theme } from '../../../theme';\r\nimport { InputStyleProps } from './input.interfaces';\r\n\r\nexport const Input = styled.input<InputStyleProps>`\r\n  width: 100%;\r\n  min-height: 45px;\r\n  border: 1px solid ${theme.colors.secondary};\r\n  border-radius: 30px;\r\n  text-indent: 10px;\r\n  margin: ${theme.space.xs} 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 6px 0 ${theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 75px;\r\n`;\r\n\r\nexport const SeenIcon = styled.img`\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  right: 12px;\r\n  top: 18px;\r\n`;\r\nexport const InputTitle = styled.h3`\r\n  margin: 0;\r\n  &:first-of-type{\r\n    margin-top:10px;\r\n  }\r\n`;\r\nexport const InputSubTitle = styled.p`\r\n  margin: 0;\r\n`;\r\n","import React, { ForwardedRef, useState } from 'react';\r\nimport { Input, InputContainer, SeenIcon } from './input-styles';\r\nimport { Error } from '../../text/text-styles';\r\nimport { InputFieldProps } from './input.interfaces';\r\n\r\nexport const InputField = React.forwardRef(\r\n  (\r\n    { error, type = 'text', disabled, ...restProps }: InputFieldProps,\r\n    ref: ForwardedRef<HTMLInputElement>\r\n  ) => {\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n    const handlePasswordVisibilityClick = () => {\r\n      setPasswordShown(!passwordShown);\r\n    };\r\n\r\n    return (\r\n      <InputContainer>\r\n        <Input\r\n          type={!passwordShown || disabled ? type : 'text'}\r\n          ref={ref}\r\n          disabled={disabled}\r\n          {...restProps}\r\n        />\r\n        {type === 'password' && !disabled && (\r\n          <SeenIcon\r\n            src={\r\n              passwordShown\r\n                ? `${process.env.PUBLIC_URL}/assets/icons/eyeopen.png`\r\n                : `${process.env.PUBLIC_URL}/assets/icons/eyeclosed.png`\r\n            }\r\n            onClick={handlePasswordVisibilityClick}\r\n          />\r\n        )}\r\n        {error && <Error>{error.message}</Error>}\r\n      </InputContainer>\r\n    );\r\n  }\r\n);\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Modal from '.';\r\nimport { ShelfFormData } from '../../interfaces/dataTypes';\r\nimport { whiteSpaceRegex } from '../../utils/validation/regex';\r\nimport { Base, InputFieldWrapper } from '../form/form-styles';\r\nimport { ModalButtonDivider } from '../layout/layout.styles';\r\nimport { Button } from '../UI/button';\r\nimport { InputField } from '../UI/input/InputField';\r\nimport { ModifyModalProps } from './modal.interfaces';\r\n\r\nconst makeDefaultValue = (defaultValue: string | undefined) => {\r\n  if (defaultValue?.substring(0, defaultValue.lastIndexOf('.'))) {\r\n    return defaultValue?.substring(0, defaultValue.lastIndexOf('.'));\r\n  }\r\n  return defaultValue;\r\n};\r\n\r\nconst validations = {\r\n  required: 'This field is required',\r\n  maxLength: {\r\n    value: 50,\r\n    message: 'Name can not be longer than 50 characters',\r\n  },\r\n  pattern: {\r\n    value: whiteSpaceRegex,\r\n    message: 'Invalid name format',\r\n  },\r\n};\r\n\r\nexport const ModifyModal = ({\r\n  onCloseModal,\r\n  onSubmit,\r\n  title,\r\n  placeHolder,\r\n  buttonMessage,\r\n  defaultValue,\r\n}: ModifyModalProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ShelfFormData>({\r\n    defaultValues: {\r\n      name: makeDefaultValue(defaultValue),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Modal onCloseModal={onCloseModal} title={title}>\r\n      <Base onSubmit={handleSubmit(onSubmit)}>\r\n        <InputFieldWrapper>\r\n          <InputField\r\n            placeholder={placeHolder}\r\n            error={errors.name}\r\n            {...register('name', validations)}\r\n          />\r\n        </InputFieldWrapper>\r\n\r\n        <ModalButtonDivider>\r\n          <Button type=\"button\" variant=\"lightBordered\" onClick={onCloseModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button>{buttonMessage}</Button>\r\n        </ModalButtonDivider>\r\n      </Base>\r\n    </Modal>\r\n  );\r\n};\r\n","import Modal from '.';\r\nimport { ModalButtonDivider } from '../layout/layout.styles';\r\nimport { Description } from '../text/text-styles';\r\nimport { Button } from '../UI/button';\r\nimport { DeleteModalProps } from './modal.interfaces';\r\nimport { DeleteModalBody } from './modal.styles';\r\n\r\nconst DeleteModal = ({\r\n  onCloseModal,\r\n  onDelete,\r\n  title,\r\n  message,\r\n}: DeleteModalProps) => (\r\n  <Modal onCloseModal={onCloseModal} title={title}>\r\n    <DeleteModalBody>\r\n      <Description>{message}</Description>\r\n      <ModalButtonDivider>\r\n        <Button variant=\"lightBordered\" onClick={onCloseModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onDelete}>Delete</Button>\r\n      </ModalButtonDivider>\r\n    </DeleteModalBody>\r\n  </Modal>\r\n);\r\n\r\nexport default DeleteModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Table } from '../../components/table/table';\r\nimport {\r\n  ShelfDataType,\r\n  ShelfFormData,\r\n  TableDataTypes,\r\n} from '../../interfaces/dataTypes';\r\n\r\nimport { Button } from '../../components/UI/button';\r\nimport { Description } from '../../components/text/text-styles';\r\nimport SearchBar from '../../components/UI/searchBar/searchBar';\r\nimport shelfServices from '../../services/shelfServices';\r\nimport {\r\n  ActionsBox,\r\n  ButtonActionsBox,\r\n} from '../../components/table/tableWrapper.styles';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport {\r\n  ActionType,\r\n  Delete,\r\n  Edit,\r\n} from '../../components/table/table.interfaces';\r\nimport { ModifyModal } from '../../components/modal/modifyModal';\r\nimport DeleteModal from '../../components/modal/deleteModal';\r\n\r\nconst headers = [\r\n  { header: 'Name', key: 'name' },\r\n  { header: 'Creation date', key: 'createdAt' },\r\n];\r\n\r\nconst Shelves = () => {\r\n  const [shelves, setShelves] = useState<ShelfDataType[]>([]);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedShelf, setSelectedShelf] = useState<TableDataTypes | null>(\r\n    null\r\n  );\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [shelvesForTable, setShelvesForTable] = useState<TableDataTypes[]>([]);\r\n  const [filteredShelves, setFilteredShelves] = useState<TableDataTypes[]>([]);\r\n\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState<boolean>(false);\r\n\r\n  const getData = () => {\r\n    setIsLoading(true);\r\n    shelfServices\r\n      .getShelves()\r\n      .then((res) => setShelves(res.data))\r\n      .catch((err) => toast.error(err))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const newShelves = shelves.map((shelf) => ({\r\n      name: shelf.name,\r\n      createdAt: new Date(shelf.createdAt).toLocaleString('en-US'),\r\n      id: shelf.id,\r\n    }));\r\n\r\n    setShelvesForTable(newShelves);\r\n    setFilteredShelves(newShelves);\r\n  }, [shelves]);\r\n\r\n  const handleModalClose = () => {\r\n    setDeleteModalOpen(false);\r\n    setSelectedShelf(null);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleOpenDeleteModal = (shelf: TableDataTypes) => {\r\n    setDeleteModalOpen(true);\r\n    setSelectedShelf(shelf);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    shelfServices\r\n      .hardDeleteShelf(selectedShelf?.id)\r\n      .then(() => {\r\n        const newShelves = shelves.filter(\r\n          (item) => item.id !== selectedShelf?.id\r\n        );\r\n        setShelves(newShelves);\r\n        handleModalClose();\r\n        toast.success('Shelf successfully deleted');\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response?.data?.message);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (newName: string) => {\r\n    const newShelves = shelves.map((item) => {\r\n      if (item.id === selectedShelf?.id) {\r\n        return { ...item, name: newName };\r\n      }\r\n      return item;\r\n    });\r\n    setShelves(newShelves);\r\n  };\r\n\r\n  const handleOpenEditModal = (shelf: TableDataTypes) => {\r\n    setSelectedShelf(shelf);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const actions: ActionType[] = [\r\n    { comp: Delete, handler: handleOpenDeleteModal, key: 1 },\r\n    { comp: Edit, handler: handleOpenEditModal, key: 2 },\r\n  ];\r\n\r\n  const message =\r\n    shelves.length === 0\r\n      ? 'No shelves have been created yet'\r\n      : 'Sorry, no matching results found';\r\n\r\n  const onSubmit = (data: ShelfFormData) => {\r\n    const shelfName = data.name.trim();\r\n    if (!selectedShelf) {\r\n      shelfServices\r\n        .createShelf(shelfName)\r\n        .then((res) => {\r\n          getData();\r\n          toast.success(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    } else {\r\n      shelfServices\r\n        .editShelf({ shelfId: selectedShelf.id, shelfName: data.name })\r\n        .then(() => {\r\n          handleEdit(shelfName);\r\n          toast.success('Shelf name updated');\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    }\r\n    handleModalClose();\r\n  };\r\n\r\n  if (isLoading) return null;\r\n\r\n  return (\r\n    <>\r\n      {openModal && (\r\n        <ModifyModal\r\n          title={selectedShelf ? 'Rename shelf' : 'Create shelf'}\r\n          onCloseModal={handleModalClose}\r\n          onSubmit={onSubmit}\r\n          buttonMessage={selectedShelf ? 'Rename ' : 'Create '}\r\n          placeHolder={selectedShelf ? 'Rename Shelf' : 'Untilted Shelf'}\r\n          defaultValue={selectedShelf?.name}\r\n        />\r\n      )}\r\n      {deleteModalOpen && (\r\n        <DeleteModal\r\n          title=\"Delete shelf\"\r\n          onCloseModal={handleModalClose}\r\n          onDelete={handleDelete}\r\n          message={`Are you sure you want to delete '${selectedShelf?.name}' shelf? This action will permanently delete all data inside this shelf!`}\r\n        />\r\n      )}\r\n\r\n      <TableWrapper\r\n        title=\"Shelves\"\r\n        description=\"Shelves are the fundamental containers for data storage.\"\r\n      >\r\n        <ActionsBox>\r\n          <SearchBar\r\n            placeholder=\"Search...\"\r\n            data={shelvesForTable}\r\n            setData={setFilteredShelves}\r\n            searchKey=\"name\"\r\n          />\r\n          <ButtonActionsBox>\r\n            <Button onClick={handleOpenModal}>Create shelf</Button>\r\n          </ButtonActionsBox>\r\n        </ActionsBox>\r\n        {shelves.length === 0 || filteredShelves.length === 0 ? (\r\n          <Description>{message}</Description>\r\n        ) : (\r\n          <Table\r\n            setTableData={setFilteredShelves}\r\n            data={filteredShelves}\r\n            headers={headers}\r\n            path=\"shelves/\"\r\n            actions={actions}\r\n          />\r\n        )}\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shelves;\r\n","import { useLocation, Outlet } from 'react-router-dom';\r\nimport { Header } from '../../components';\r\nimport {\r\n  DashboardContentWrapper,\r\n  DashboardLayout,\r\n} from '../../components/layout/layout.styles';\r\nimport NavigationSidebar from '../../components/navigationSidebar';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport Shelves from '../shelves';\r\n\r\nconst Dashboard = () => {\r\n  const location = useLocation();\r\n  const isRootDashboard = location.pathname === Routes.DASHBOARD;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <DashboardLayout>\r\n        <NavigationSidebar />\r\n        <DashboardContentWrapper>\r\n          {isRootDashboard ? <Shelves /> : <Outlet />}\r\n        </DashboardContentWrapper>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { ForgotPasswordConfig } from '../../../interfaces/dataTypes';\r\nimport { emailRegex } from '../regex';\r\n\r\nexport const forgotPasswordFieldConfig: ForgotPasswordConfig = {\r\n  validations: {\r\n    required: 'This field is required',\r\n    pattern: {\r\n      value: emailRegex,\r\n      message: 'Invalid email format',\r\n    },\r\n  },\r\n};\r\n","import instance from '../api/axiosInstance';\r\nimport {\r\n  ForgotPasswordData,\r\n  ResetPasswordData,\r\n  UpdateProfileData,\r\n} from '../interfaces/dataTypes';\r\n\r\nconst API_URL_ACCOUNT = '/account';\r\n\r\nconst emailConfirmation = (token: string | undefined) =>\r\n  instance.post(`${API_URL_ACCOUNT}/tokens/confirmation`, { token });\r\n\r\nconst resendEmailVerification = (token: string | undefined) =>\r\n  instance.post(`${API_URL_ACCOUNT}/tokens/resend`, { token });\r\n\r\nconst forgotPassword = (data: ForgotPasswordData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/users/password-reset-request`, data);\r\n\r\nconst resetPassword = (data: ResetPasswordData) =>\r\n  instance.post(`${API_URL_ACCOUNT}/users/password-reset`, data);\r\n\r\nconst getUser = () => instance.get(`${API_URL_ACCOUNT}/users/me`);\r\n\r\nconst updateProfile = (data: UpdateProfileData, id: number) =>\r\n  instance.put(`${API_URL_ACCOUNT}/users/${id}`, data);\r\n\r\nexport default {\r\n  emailConfirmation,\r\n  resendEmailVerification,\r\n  forgotPassword,\r\n  resetPassword,\r\n  updateProfile,\r\n  getUser,\r\n};\r\n","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Base,\r\n  FormContainer,\r\n  InputFieldWrapper,\r\n} from '../../components/form/form-styles';\r\nimport { InputField } from '../../components/UI/input/InputField';\r\nimport { ForgotPasswordData } from '../../interfaces/dataTypes';\r\nimport { forgotPasswordFieldConfig } from '../../utils/validation/config/forgotPasswordValidationConfig';\r\nimport userServices from '../../services/userServices';\r\nimport { Button } from '../../components/UI/button';\r\nimport { H2 } from '../../components/text/text-styles';\r\nimport { Routes } from '../../utils/enums/routes';\r\n\r\nconst ForgotPasswordForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ForgotPasswordData>();\r\n\r\n  const validation = forgotPasswordFieldConfig;\r\n  const navigate = useNavigate();\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const submitData = (data: ForgotPasswordData) => {\r\n    setIsLoading(true);\r\n    userServices\r\n      .forgotPassword(data)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          navigate(Routes.LOGIN, {\r\n            state: 'Go to your email to reset password',\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response?.data?.message);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <H2>Send email</H2>\r\n      <Base onSubmit={handleSubmit(submitData)}>\r\n        <InputFieldWrapper>\r\n          <InputField\r\n            placeholder=\"Enter your email\"\r\n            error={errors.email}\r\n            type=\"email\"\r\n            {...register('email', validation.validations)}\r\n          />\r\n        </InputFieldWrapper>\r\n\r\n        <Button spinner fullwidth isLoading={isLoading}>\r\n          Send\r\n        </Button>\r\n      </Base>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordForm;\r\n","import { Header } from '../../components';\r\nimport { Container, Wrapper } from '../../components/layout/layout.styles';\r\nimport ForgotPasswordForm from './form';\r\n\r\nconst ForgotPassword = () => (\r\n  <>\r\n    <Header hideProfile position=\"absolute\" />\r\n    <Wrapper>\r\n      <Container>\r\n        <ForgotPasswordForm />\r\n      </Container>\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default ForgotPassword;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const CardWrapper = styled.div`\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-self: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: ${theme.fontSizes.xs};\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  padding: ${theme.space.lg};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  border: 1px solid black;\r\n  box-shadow: 1px 1px 6px ${theme.colors.primary};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  object-fit: contain;\r\n  height: 100%;\r\n`;\r\n","import { CardWrapper, IconWrapper, Image, Text } from './card-styles';\r\nimport { CardProps } from './card.interfaces';\r\n\r\nconst Card = ({ image, text, alt }: CardProps) => (\r\n  <CardWrapper>\r\n    <IconWrapper>\r\n      <Image src={image} alt={alt} />\r\n    </IconWrapper>\r\n    <Text>{text}</Text>\r\n  </CardWrapper>\r\n);\r\n\r\nexport default Card;\r\n","import Card from '../../components/card';\r\nimport {\r\n  Wrapper,\r\n  GridContainer,\r\n  LandinPageContainer,\r\n} from '../../components/layout/layout.styles';\r\nimport {\r\n  H1,\r\n  Description,\r\n  AccentText,\r\n  Link,\r\n} from '../../components/text/text-styles';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { Header } from '../../components';\r\n\r\nconst featuresInfo = [\r\n  {\r\n    id: 0,\r\n    img: './assets/images/cloud.png',\r\n    text: 'Store and access your data from cloud',\r\n    alt: 'cloud upload',\r\n  },\r\n  {\r\n    id: 1,\r\n    img: './assets/images/share.png',\r\n    text: 'Share your files and have access to files that are shared with you',\r\n    alt: 'share',\r\n  },\r\n  {\r\n    id: 2,\r\n    img: './assets/images/shelf.png',\r\n    text: 'Built to store and retrive any amount of data from anywhere',\r\n    alt: 'shelf',\r\n  },\r\n  {\r\n    id: 3,\r\n    img: './assets/images/f.png',\r\n    text: 'Event-driven compute service that lets you run code for virtually any type of application or backend service without provisioning or managing servers',\r\n    alt: 'lambda function',\r\n  },\r\n];\r\n\r\nconst Landing = () => (\r\n  <>\r\n    <Header showButtons hideProfile position=\"absolute\" />\r\n    <Wrapper>\r\n      <LandinPageContainer>\r\n        <H1>Welcome to Shelf Storage Service</H1>\r\n        <Description>\r\n          Event-driven compute service that lets you run code for virtually any\r\n          type of application or backend service without provisioning or\r\n          managing servers\r\n        </Description>\r\n        <AccentText>\r\n          Start working more efficiently today,\r\n          <Link to={Routes.REGISTER}>Sign up to get started</Link>\r\n        </AccentText>\r\n      </LandinPageContainer>\r\n      <LandinPageContainer>\r\n        <GridContainer>\r\n          {featuresInfo.map((feature) => (\r\n            <Card\r\n              key={feature.id}\r\n              alt={feature.alt}\r\n              image={feature.img}\r\n              text={feature.text}\r\n            />\r\n          ))}\r\n        </GridContainer>\r\n      </LandinPageContainer>\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default Landing;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  EmailVerificationContainer,\r\n} from '../../components/layout/layout.styles';\r\nimport userServices from '../../services/userServices';\r\nimport { Spinner } from '../../components/form/form-styles';\r\nimport { H2 } from '../../components/text/text-styles';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { Button } from '../../components/UI/button';\r\n\r\nconst EmailVerification = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [confirmMessage, setConfirmMessage] = useState<string>('');\r\n  const [resendMessage, setResendMessage] = useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n  const { token } = useParams();\r\n\r\n  const resendEmailVerification = () => {\r\n    userServices\r\n      .resendEmailVerification(token)\r\n      .then(() => {\r\n        setResendMessage('Email was sent check, your inbox');\r\n      })\r\n      .catch((err) => setError(err.response?.data?.message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    userServices\r\n      .emailConfirmation(token)\r\n      .then((res) => {\r\n        setConfirmMessage(res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response?.data?.message);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  const feedbackMessage = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <Spinner src={`${process.env.PUBLIC_URL}/assets/icons/loading.png`} />\r\n      );\r\n    }\r\n    if (resendMessage) {\r\n      return <H2>{resendMessage}</H2>;\r\n    }\r\n    if (confirmMessage) {\r\n      return (\r\n        <EmailVerificationContainer>\r\n          <H2>{confirmMessage}</H2>\r\n\r\n          <Button variant=\"light\" to={Routes.LOGIN}>\r\n            Procced to login\r\n          </Button>\r\n        </EmailVerificationContainer>\r\n      );\r\n    }\r\n    if (error === 'Token expired.') {\r\n      return (\r\n        <EmailVerificationContainer>\r\n          <H2>{error}</H2>\r\n          <Button onClick={resendEmailVerification} variant=\"light\">\r\n            Reset Token\r\n          </Button>\r\n        </EmailVerificationContainer>\r\n      );\r\n    }\r\n    if (error === 'Token not valid.') {\r\n      return (\r\n        <EmailVerificationContainer>\r\n          <H2>{error}</H2>\r\n        </EmailVerificationContainer>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return <Container>{feedbackMessage()}</Container>;\r\n};\r\n\r\nexport default EmailVerification;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\r\nexport const msalConfig = {\r\n  auth: {\r\n    clientId: '83800c79-b40f-4f52-b27a-4f4f7c026ff6',\r\n    authority: 'https://login.microsoftonline.com/organizations',\r\n    redirectUri: 'http://localhost:3000/',\r\n  },\r\n  cache: {\r\n    cacheLocation: 'sessionStorage', // This configures where your cache will be stored\r\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n  },\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n  scopes: ['User.Read'],\r\n};\r\n","import { LoginFieldConfig } from '../../../interfaces/dataTypes';\r\n\r\nexport const loginFieldConfig: LoginFieldConfig[] = [\r\n  {\r\n    type: 'text',\r\n    placeholder: 'Email',\r\n    name: 'email',\r\n    validations: {\r\n      required: 'This field is required',\r\n    },\r\n  },\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    name: 'password',\r\n    validations: {\r\n      required: 'This field is required',\r\n    },\r\n  },\r\n];\r\n","import { useMsal } from '@azure/msal-react';\r\nimport { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { loginRequest } from '../../azure/authConfig';\r\nimport {\r\n  Base,\r\n  FormContainer,\r\n  InputFieldWrapper,\r\n} from '../../components/form/form-styles';\r\nimport { InputField } from '../../components/UI/input/InputField';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { Button } from '../../components/UI/button';\r\nimport { loginFieldConfig } from '../../utils/validation/config/loginValidationConfig';\r\nimport { LoginData, LoginFieldConfig } from '../../interfaces/dataTypes';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { RootState } from '../../store/store';\r\nimport { useAuth } from '../../hooks/authHook';\r\nimport { H2, Link, PlainText } from '../../components/text/text-styles';\r\n\r\nconst LoginForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginData>({});\r\n  const { login, microsoftLogin } = useAuth();\r\n  const { instance: msInstance } = useMsal();\r\n\r\n  const isLoading = useAppSelector((state: RootState) => state.loading.loading);\r\n\r\n  const navigation = useNavigate();\r\n  const location = useLocation();\r\n  const submitForm = (data: LoginData) => {\r\n    login(\r\n      data,\r\n      () => {\r\n        navigation(Routes.DASHBOARD);\r\n      },\r\n      (err) => {\r\n        toast.error(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      toast.info('Go to your email');\r\n    }\r\n  }, []);\r\n\r\n  const handleMicrosoftSignIn = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    msInstance\r\n      .acquireTokenPopup(loginRequest)\r\n      .then(({ accessToken }) => {\r\n        microsoftLogin(\r\n          { bearerToken: accessToken },\r\n          () => {\r\n            navigation(Routes.DASHBOARD);\r\n          },\r\n          (err: string) => {\r\n            toast.error(err);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        if (err.errorCode === 'user_cancelled') return;\r\n        toast.error(err.response?.data?.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <H2>Log in</H2>\r\n      <Base onSubmit={handleSubmit(submitForm)}>\r\n        <InputFieldWrapper>\r\n          {loginFieldConfig.map((fieldConfig: LoginFieldConfig) => (\r\n            <InputField\r\n              key={fieldConfig.name}\r\n              placeholder={fieldConfig.placeholder}\r\n              error={errors[fieldConfig.name]}\r\n              type={fieldConfig.type}\r\n              {...register(fieldConfig.name, fieldConfig.validations)}\r\n            />\r\n          ))}\r\n        </InputFieldWrapper>\r\n        <Button spinner isLoading={isLoading} fullwidth size=\"large\">\r\n          Sign in\r\n        </Button>\r\n        <Button\r\n          onClick={handleMicrosoftSignIn}\r\n          icon={<img src=\"./assets/images/microsoft-logo.png\" alt=\"\" />}\r\n          fullwidth\r\n          size=\"large\"\r\n        >\r\n          Sign in with Microsoft\r\n        </Button>\r\n      </Base>\r\n      <PlainText>\r\n        {`New to the shelf?  `}\r\n        <Link to={Routes.REGISTER}>Sign up</Link>\r\n      </PlainText>\r\n      <PlainText>\r\n        {`Forgot password?  `}\r\n        <Link to={Routes.FORGOT_PASSWORD}>Reset password</Link>\r\n      </PlainText>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import Header from '../../components/header';\r\nimport {\r\n  Wrapper,\r\n  Container,\r\n  Feature,\r\n} from '../../components/layout/layout.styles';\r\nimport { H1, Description } from '../../components/text/text-styles';\r\nimport LoginForm from './form';\r\n\r\nconst Login = () => (\r\n  <>\r\n    <Header position=\"absolute\" hideProfile />\r\n    <Wrapper>\r\n      <Container>\r\n        <LoginForm />\r\n      </Container>\r\n      <Container background=\"primary\" isHiddenOnSmallScreen>\r\n        <Feature>\r\n          <H1> Welcome back</H1>\r\n          <Description>\r\n            To keep connected with us, please sign in with your personal info\r\n          </Description>\r\n        </Feature>\r\n      </Container>\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\n\r\nexport const TooltipWrapper = styled.div`\r\n  background: ${theme.colors.white};\r\n  border: 1px solid ${theme.colors.shadow};\r\n  position: absolute;\r\n  left: 105%;\r\n  top: 80px;\r\n  width: 245px;\r\n  padding: ${theme.space.md};\r\n  border-radius: ${theme.size.sm};\r\n  font-size: ${theme.fontSizes.xs};\r\n  box-shadow: 0px 0px 6px 2px rgba(0, 0, 0, 0.1);\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    display: block;\r\n  }\r\n\r\n  &:before {\r\n    z-index: 2;\r\n    left: -9px;\r\n    top: 16px;\r\n    border-right: 10px solid ${theme.colors.white};\r\n    border-top: 10px solid transparent;\r\n    border-bottom: 10px solid transparent;\r\n  }\r\n\r\n  &:after {\r\n    z-index: 1;\r\n    left: -11px;\r\n    top: 15px;\r\n    border-right: 11px solid ${theme.colors.shadow};\r\n    border-top: 11px solid transparent;\r\n    border-bottom: 11px solid transparent;\r\n  }\r\n\r\n  @media (max-width: ${theme.breakpoints.md}) {\r\n    top: 130px;\r\n    left: 15%;\r\n\r\n    &:before,\r\n    &:after {\r\n      content: '';\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: ${theme.space.sm};\r\n  }\r\n`;\r\n","import {\r\n  ListItem,\r\n  List,\r\n  Text,\r\n  TooltipWrapper,\r\n} from './passwordRequirementsTooltip.styles';\r\n\r\nconst PasswordRequirementsTooltip = () => (\r\n  <TooltipWrapper>\r\n    <Text>\r\n      Passwords must contain at least 8 characters and contain the following:\r\n    </Text>\r\n    <List>\r\n      <ListItem>Uppercase letter</ListItem>\r\n      <ListItem>Lowercase letter</ListItem>\r\n      <ListItem>Number</ListItem>\r\n      <ListItem>Special character</ListItem>\r\n    </List>\r\n  </TooltipWrapper>\r\n);\r\n\r\nexport default PasswordRequirementsTooltip;\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useMsal } from '@azure/msal-react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Base,\r\n  FormContainer,\r\n  InputFieldWrapper,\r\n} from '../../components/form/form-styles';\r\nimport { InputField } from '../../components/UI/input/InputField';\r\nimport {\r\n  RegisterData,\r\n  RegisterFormData,\r\n  RegisterFieldConfig,\r\n} from '../../interfaces/dataTypes';\r\nimport { Error, H2, Link, PlainText } from '../../components/text/text-styles';\r\nimport CheckBox from '../../components/UI/checkbox/checkBox';\r\nimport { loginRequest } from '../../azure/authConfig';\r\nimport { Button } from '../../components/UI/button';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { config } from '../../utils/validation/config/registerValidationConfig';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { RootState } from '../../store/store';\r\nimport { useAuth } from '../../hooks/authHook';\r\nimport PasswordRequirementsTooltip from './passwordRequirementsTooltip';\r\n\r\nconst RegisterForm = () => {\r\n  const {\r\n    register,\r\n    watch,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<RegisterFormData>();\r\n\r\n  const { register: httpRegister, microsoftRegister } = useAuth();\r\n  const { instance } = useMsal();\r\n\r\n  const submitForm = ({\r\n    password,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n  }: RegisterData) => {\r\n    httpRegister(\r\n      { password, email, firstName, lastName },\r\n      () => {\r\n        toast.success(\r\n          'A verification link has been sent to your email address.'\r\n        );\r\n\r\n        reset();\r\n      },\r\n      (err) => {\r\n        toast.error(err);\r\n      }\r\n    );\r\n  };\r\n  const registeFieldConfig: RegisterFieldConfig[] = config(watch);\r\n\r\n  const isLoading = useAppSelector((state: RootState) => state.loading.loading);\r\n\r\n  const handleMicrosoftSignUp = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    instance\r\n      .acquireTokenPopup(loginRequest)\r\n      .then(({ accessToken }) => {\r\n        microsoftRegister(\r\n          { bearerToken: accessToken },\r\n          () => {\r\n            toast.success('Registered Successfully');\r\n          },\r\n          (err) => {\r\n            toast.error(err);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        if (err.errorCode === 'user_cancelled') return;\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  const [isPasswordTooltipVisible, setIsPasswordTooltipVisible] =\r\n    useState(false);\r\n\r\n  const handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'password') {\r\n      setIsPasswordTooltipVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'password') {\r\n      setIsPasswordTooltipVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <H2>Register</H2>\r\n\r\n      <Base onSubmit={handleSubmit(submitForm)}>\r\n        <InputFieldWrapper>\r\n          {registeFieldConfig.map((fieldConfig: RegisterFieldConfig) => (\r\n            <InputField\r\n              key={fieldConfig.name}\r\n              placeholder={fieldConfig.placeholder}\r\n              error={errors[fieldConfig.name]}\r\n              type={fieldConfig.type}\r\n              {...register(fieldConfig.name, fieldConfig.validations)}\r\n              onFocus={handleInputFocus}\r\n              onBlur={handleInputBlur}\r\n            />\r\n          ))}\r\n          {isPasswordTooltipVisible && <PasswordRequirementsTooltip />}\r\n          <InputFieldWrapper>\r\n            <CheckBox\r\n              id=\"termsOfServices\"\r\n              {...register('areTermsRead', {\r\n                required: 'This field is required',\r\n              })}\r\n            >\r\n              <PlainText>\r\n                I accept{` `}\r\n                <Link to={Routes.TERMS_AND_CONDITIONS} target=\"_blank\">\r\n                  Terms of Service\r\n                </Link>\r\n              </PlainText>\r\n            </CheckBox>\r\n\r\n            <Error>{errors.areTermsRead?.message}</Error>\r\n          </InputFieldWrapper>\r\n        </InputFieldWrapper>\r\n        <Button\r\n          spinner\r\n          isLoading={isLoading}\r\n          variant=\"primary\"\r\n          fullwidth\r\n          size=\"large\"\r\n        >\r\n          Sign up\r\n        </Button>\r\n        <Button\r\n          onClick={handleMicrosoftSignUp}\r\n          icon={<img src=\"./assets/images/microsoft-logo.png\" alt=\"\" />}\r\n          fullwidth\r\n          size=\"large\"\r\n        >\r\n          Sign up with Microsoft\r\n        </Button>\r\n      </Base>\r\n      <PlainText>\r\n        {`Already have an account?  `}\r\n        <Link to={Routes.LOGIN}>Sign in</Link>\r\n      </PlainText>\r\n    </FormContainer>\r\n  );\r\n};\r\nexport default RegisterForm;\r\n","import { UseFormWatch } from 'react-hook-form';\r\nimport {\r\n  RegisterFieldConfig,\r\n  RegisterFormData,\r\n} from '../../../interfaces/dataTypes';\r\nimport { emailRegex, passwordRegex, whiteSpaceRegex } from '../regex';\r\n\r\nexport const config = (\r\n  watch: UseFormWatch<RegisterFormData>\r\n): RegisterFieldConfig[] => [\r\n  {\r\n    type: 'text',\r\n    placeholder: 'Email',\r\n    name: 'email',\r\n    validations: {\r\n      required: 'This field is required',\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'Email can not be longer than 50 characters',\r\n      },\r\n      pattern: {\r\n        value: emailRegex,\r\n        message: 'Invalid email format',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    name: 'password',\r\n    validations: {\r\n      required: 'This field is required',\r\n      minLength: {\r\n        value: 8,\r\n        message: 'Password must have at least 8 characters',\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'Password can not be longer than 50 characters',\r\n      },\r\n      pattern: {\r\n        value: passwordRegex,\r\n        message: 'Invalid password format',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Confirm Password',\r\n    name: 'confirmPassword',\r\n    validations: {\r\n      required: 'This field is required',\r\n      validate: (value: string) =>\r\n        value === watch('password') || 'Passwords must match',\r\n    },\r\n  },\r\n  {\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    name: 'firstName',\r\n    validations: {\r\n      required: 'This field is required',\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'First name can not be longer than 50 characters',\r\n      },\r\n      pattern: {\r\n        value: whiteSpaceRegex,\r\n        message: 'Invalid first name format',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    name: 'lastName',\r\n    validations: {\r\n      required: 'This field is required',\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'Last name can not be longer than 50 characters',\r\n      },\r\n      pattern: {\r\n        value: whiteSpaceRegex,\r\n        message: 'Invalid last name format',\r\n      },\r\n    },\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Header } from '../../components';\r\nimport {\r\n  Wrapper,\r\n  Container,\r\n  Feature,\r\n} from '../../components/layout/layout.styles';\r\nimport { H1, Description } from '../../components/text/text-styles';\r\nimport RegisterForm from './form';\r\n\r\nconst Register = () => (\r\n  <>\r\n    <Header hideProfile position=\"absolute\" />\r\n    <Wrapper>\r\n      <Container>\r\n        <RegisterForm />\r\n      </Container>\r\n      <Container background=\"primary\" isHiddenOnSmallScreen>\r\n        <Feature>\r\n          <H1>Explore a new world</H1>\r\n          <Description>\r\n            Enter your personal details and start your journey with us :)\r\n          </Description>\r\n        </Feature>\r\n      </Container>\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default Register;\r\n","import { useParams, useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport { InputField } from '../../components/UI/input/InputField';\r\nimport { H2 } from '../../components/text/text-styles';\r\nimport {\r\n  Base,\r\n  FormContainer,\r\n  InputFieldWrapper,\r\n} from '../../components/form/form-styles';\r\nimport { Button } from '../../components/UI/button';\r\nimport {\r\n  PasswordData,\r\n  ResetPasswordFieldConfig,\r\n} from '../../interfaces/dataTypes';\r\nimport userServices from '../../services/userServices';\r\n\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { config } from '../../utils/validation/config/resetPasswordValidationConfig';\r\n\r\nconst ResetPasswordForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const { jwtToken } = useParams();\r\n\r\n  const registerFieldConfig: ResetPasswordFieldConfig[] = config(watch);\r\n  const navigation = useNavigate();\r\n\r\n  const onSubmit = ({ password }: PasswordData) => {\r\n    setIsLoading(true);\r\n\r\n    const data = { password, jwtToken };\r\n\r\n    userServices\r\n      .resetPassword(data)\r\n      .then(() => {\r\n        navigation(Routes.LOGIN);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response?.data.message);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <H2>Reset Password</H2>\r\n      <Base onSubmit={handleSubmit(onSubmit)}>\r\n        <InputFieldWrapper>\r\n          {registerFieldConfig.map((fieldConfig) => (\r\n            <InputField\r\n              key={fieldConfig.name}\r\n              placeholder={fieldConfig.placeholder}\r\n              type={fieldConfig.type}\r\n              error={errors[fieldConfig.name]}\r\n              {...register(fieldConfig.name, fieldConfig.validations)}\r\n            />\r\n          ))}\r\n        </InputFieldWrapper>\r\n        <Button spinner fullwidth isLoading={isLoading}>\r\n          Reset Password\r\n        </Button>\r\n      </Base>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import { FieldValues, UseFormWatch } from 'react-hook-form';\r\nimport { ResetPasswordFieldConfig } from '../../../interfaces/dataTypes';\r\nimport { passwordRegex } from '../regex';\r\n\r\nexport const config = (\r\n  watch: UseFormWatch<FieldValues>\r\n): ResetPasswordFieldConfig[] => [\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    name: 'password',\r\n    validations: {\r\n      required: 'This field is required',\r\n      minLength: {\r\n        value: 8,\r\n        message: 'Password must have at least 8 characters',\r\n      },\r\n      pattern: {\r\n        value: passwordRegex,\r\n        message: 'Invalid password format',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Confirm Password',\r\n    name: 'confirmPassword',\r\n    validations: {\r\n      required: 'This field is required',\r\n      validate: (value: string) =>\r\n        value === watch('password') || 'Passwords must match',\r\n    },\r\n  },\r\n];\r\n","import { Header } from '../../components';\r\nimport { Container, Wrapper } from '../../components/layout/layout.styles';\r\nimport ResetPasswordForm from './form';\r\n\r\nconst ResetPassword = () => (\r\n  <>\r\n    <Header hideProfile position=\"absolute\" />\r\n    <Wrapper>\r\n      <Container>\r\n        <ResetPasswordForm />\r\n      </Container>\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nexport default ResetPassword;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: justify;\r\n  position: relative;\r\n  max-width: 700px;\r\n  max-height: 750px;\r\n  margin: ${theme.space.lg};\r\n  background-color: ${theme.colors.primary};\r\n  color: white;\r\n  border-radius: 30px;\r\n  box-shadow: 0px 0px 13px 1px ${theme.colors.secondary};\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n  border-bottom: 1px solid white;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 0 ${theme.space.lg};\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  font-size: ${theme.fontSizes.sm};\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  bottom: 0;\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n  height: 100px;\r\n  width: 100%;\r\n  border-top: 1px solid white;\r\n`;\r\n","import ReactMarkdown from 'react-markdown';\r\nimport { PlainText, H2 } from '../text/text-styles';\r\nimport { Body, CardWrapper, Footer, Header } from './textcard-styles';\r\nimport { TextCardProps } from '../../interfaces/propTypes';\r\n\r\nconst TextCard = ({ title, text, subtitle }: TextCardProps) => (\r\n  <CardWrapper>\r\n    <Header>\r\n      <H2>{title}</H2>\r\n      <PlainText>{subtitle}</PlainText>\r\n    </Header>\r\n    <Body>\r\n      <ReactMarkdown>{text}</ReactMarkdown>\r\n    </Body>\r\n    <Footer>\r\n      <PlainText>Thank you for reading</PlainText>\r\n    </Footer>\r\n  </CardWrapper>\r\n);\r\n\r\nexport default TextCard;\r\n","import { Wrapper } from '../../components/layout/layout.styles';\r\nimport {\r\n  tos,\r\n  TOStitle,\r\n  TOSsubTitle,\r\n} from '../../utils/fixtures/termsOfService';\r\nimport TextCard from '../../components/textCard';\r\n\r\nconst TermsAndConditions = () => {\r\n  const title = TOStitle;\r\n  const subtitle = TOSsubTitle;\r\n  const text = tos;\r\n  return (\r\n    <Wrapper>\r\n      <TextCard title={title} text={text} subtitle={subtitle} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TermsAndConditions;\r\n","export const TOStitle = `TERMS AND CONDITIONS`;\r\nexport const TOSsubTitle = `Last updated November 25, 2021`;\r\n\r\nexport const tos = `\r\n## AGREEMENT TO TERMS\r\n\r\nThese Terms of Use constitute a legally binding agreement made between you, whether personally or on behalf of an entity (&quot;you&quot;) and Shelf (&quot; **Company** ,&quot; &quot; **we** ,&quot; &quot; **us** ,&quot; or &quot; **our**&quot;), concerning your access to and use of the [http://www.shelf.rs](http://www.shelf.rs/) website as well as any other media form, media channel, mobile website or mobile application related, linked, or otherwise connected thereto (collectively, the &quot;Site&quot;). We are registered in Serbia and have our registered office at Bulevar Milutina Milankovica 11b, Belgrade 11000. Our VAT number is 18002984567. You agree that by accessing the Site, you have read, understood, and agreed to be bound by all of these Terms of Use. IF YOU DO NOT AGREE WITH ALL OF THESE TERMS OF USE, THEN YOU ARE EXPRESSLY PROHIBITED FROM USING THE SITE AND YOU MUST DISCONTINUE USE IMMEDIATELY.\r\n\r\nSupplemental terms and conditions or documents that may be posted on the Site from time to time are hereby expressly incorporated herein by reference. We reserve the right, in our sole discretion, to make changes or modifications to these Terms of Use from time to time. We will alert you about any changes by updating the &quot;Last updated&quot; date of these Terms of Use, and you waive any right to receive specific notice of each such change. Please ensure that you check the applicable Terms every time you use our Site so that you understand which Terms apply. You will be subject to, and will be deemed to have been made aware of and to have accepted, the changes in any revised Terms of Use by your continued use of the Site after the date such revised Terms of Use are posted.\r\n\r\nThe information provided on the Site is not intended for distribution to or use by any person or entity in any jurisdiction or country where such distribution or use would be contrary to law or regulation or which would subject us to any registration requirement within such jurisdiction or country. Accordingly, those persons who choose to access the Site from other locations do so on their own initiative and are solely responsible for compliance with local laws, if and to the extent local laws are applicable.\r\n\r\nThe Site is intended for users who are at least 13 years of age. All users who are minors in the jurisdiction in which they reside (generally under the age of 18) must have the permission of, and be directly supervised by, their parent or guardian to use the Site. If you are a minor, you must have your parent or guardian read and agree to these Terms of Use prior to you using the Site.\r\n\r\n## INTELLECTUAL PROPERTY RIGHTS\r\n\r\nUnless otherwise indicated, the Site is our proprietary property and all source code, databases, functionality, software, website designs, audio, video, text, photographs, and graphics on the Site\r\n\r\n(collectively, the &quot;Content&quot;) and the trademarks, service marks, and logos contained therein (the &quot;Marks&quot;) are owned or controlled by us or licensed to us, and are protected by copyright and trademark laws and various other intellectual property rights and unfair competition laws of the United States, international copyright laws, and international conventions. The Content and the Marks are provided on the Site &quot;AS IS&quot; for your information and personal use only. Except as expressly provided in these Terms of Use, no part of the Site and no Content or Marks may be copied, reproduced, aggregated, republished, uploaded, posted, publicly displayed, encoded,\r\n\r\ntranslated, transmitted, distributed, sold, licensed, or otherwise exploited for any commercial purpose whatsoever, without our express prior written Permission.\r\n\r\nProvided that you are eligible to use the Site, you are granted a limited license to access and use the Site and to download or print a copy of any portion of the Content to which you have properly gained access solely for your personal, non-commercial use. We reserve all rights not expressly granted to you in and to the Site, the Content and the Marks.\r\n\r\n## USER REPRESENTATIONS\r\n\r\nBy using the Site, you represent and warrant that: (1) all registration information you submit will be true, accurate, current, and complete; (2) you will maintain the accuracy of such information and promptly update such registration information as necessary; (3) you have the legal capacity and you agree to comply with these Terms of Use; (4) you are not under the age of 13; (5) you are not a minor in the jurisdiction in which you reside, or if a minor, you have received parental permission to use the Site; (6) you will not access the Site through automated or non-human means, whether through a bot, script, or otherwise; (7) you will not use the Site for any illegal or unauthorized purpose; and (8) your use of the Site will not violate any applicable law or regulation.\r\n\r\nIf you provide any information that is untrue, inaccurate, not current, or incomplete, we have the right to suspend or terminate your account and refuse any and all current or future use of the Site (or any portion thereof).\r\n\r\n## USER REGISTRATION\r\n\r\nYou may be required to register with the Site. You agree to keep your password confidential and will be responsible for all use of your account and password. We reserve the right to remove, reclaim, or change a username you select if we determine, in our sole discretion, that such username is inappropriate, obscene, or otherwise objectionable.\r\n\r\n## PROHIBITED ACTIVITIES\r\n\r\nYou may not access or use the Site for any purpose other than that for which we make the Site available. The Site may not be used in connection with any commercial endeavors except those that are specifically endorsed or approved by us.\r\n\r\nAs a user of the Site, you agree not to:\r\n\r\n1. Systematically retrieve data or other content from the Site to create or compile, directly or indirectly, a collection, compilation, database, or directory without written permission from us.\r\n2. Trick, defraud, or mislead us and other users, especially in any attempt to learn sensitive account information such as user passwords.\r\n3. Circumvent, disable, or otherwise interfere with security-related features of the Site, including features that prevent or restrict the use or copying of any Content or enforce limitations on the use of the Site and/or the Content contained therein.\r\n4. Disparage, tarnish, or otherwise harm, in our opinion, us and/or the Site.\r\n5. Use any information obtained from the Site in order to harass, abuse, or harm another person.\r\n6. Make improper use of our support services or submit false reports of abuse or misconduct.\r\n7. Use the Site in a manner inconsistent with any applicable laws or regulations.\r\n8. Engage in unauthorized framing of or linking to the Site.\r\n9. Upload or transmit (or attempt to upload or to transmit) viruses, Trojan horses, or other material, including excessive use of capital letters and spamming (continuous posting of repetitive text), that interferes with any party&#39;s uninterrupted use and enjoyment of the Site or modifies, impairs, disrupts, alters, or interferes with the use, features, functions, operation, or maintenance of the Site.\r\n10. Engage in any automated use of the system, such as using scripts to send comments or messages, or using any data mining, robots, or similar data gathering and extraction tools.\r\n11. Delete the copyright or other proprietary rights notice from any Content.\r\n12. Attempt to impersonate another user or person or use the username of another user.\r\n13. Upload or transmit (or attempt to upload or to transmit) any material that acts as a passive or active information collection or transmission mechanism, including without limitation, clear graphics interchange formats (&quot;gifs&quot;), 1×1 pixels, web bugs, cookies, or other similar devices (sometimes referred to as &quot;spyware&quot; or &quot;passive collection mechanisms&quot; or &quot;pcms&quot;).\r\n14. Interfere with, disrupt, or create an undue burden on the Site or the networks or services connected to the Site.\r\n15. Harass, annoy, intimidate, or threaten any of our employees or agents engaged in providing any portion of the Site to you.\r\n16. Attempt to bypass any measures of the Site designed to prevent or restrict access to the Site, or any portion of the Site.\r\n17. Copy or adapt the Site&#39;s software, including but not limited to Flash, PHP, HTML, JavaScript, or other code.\r\n18. Except as permitted by applicable law, decipher, decompile, disassemble, or reverse engineer any of the software comprising or in any way making up a part of the Site.\r\n19. Except as may be the result of standard search engine or Internet browser usage, use, launch, develop, or distribute any automated system, including without limitation, any spider, robot, cheat utility, scraper, or offline reader that accesses the Site, or using or launching any unauthorized script or other software.\r\n20. Use a buying agent or purchasing agent to make purchases on the Site.\r\n21. Make any unauthorized use of the Site, including collecting usernames and/or email addresses of users by electronic or other means for the purpose of sending unsolicited email, or creating user accounts by automated means or under false pretenses.\r\n22. Use the Site as part of any effort to compete with us or otherwise use the Site and/or the Content for any revenue-generating endeavor or commercial enterprise.\r\n23. Use the Site to advertise or offer to sell goods and services.\r\n\r\n## USER GENERATED CONTRIBUTIONS\r\n\r\nThe Site may invite you to chat, contribute to, or participate in blogs, message boards, online forums, and other functionality, and may provide you with the opportunity to create, submit, post, display, transmit, perform, publish, distribute, or broadcast content and materials to us or on the Site, including but not limited to text, writings, video, audio, photographs, graphics, comments, suggestions, or personal information or other material (collectively, &quot;Contributions&quot;). Contributions may be viewable by other users of the Site and through third-party websites. As such, any Contributions you transmit may be treated as non-confidential and non-proprietary. When you create or make available any Contributions, you thereby represent and warrant that:\r\n\r\n1. The creation, distribution, transmission, public display, or performance, and the accessing, downloading, or copying of your Contributions do not and will not infringe the proprietary rights, including but not limited to the copyright, patent, trademark, trade secret, or moral rights of any third party.\r\n2. You are the creator and owner of or have the necessary licenses, rights, consents, releases, and permissions to use and to authorize us, the Site, and other users of the Site to use your Contributions in any manner contemplated by the Site and these Terms of Use.\r\n3. You have the written consent, release, and/or permission of each and every identifiable individual person in your Contributions to use the name or likeness of each and every such identifiable individual person to enable inclusion and use of your Contributions in any manner contemplated by the Site and these Terms of Use.\r\n4. Your Contributions are not false, inaccurate, or misleading.\r\n5. Your Contributions are not unsolicited or unauthorized advertising, promotional materials, pyramid schemes, chain letters, spam, mass mailings, or other forms of solicitation.\r\n6. Your Contributions are not obscene, lewd, lascivious, filthy, violent, harassing, libelous, slanderous, or otherwise objectionable (as determined by us).\r\n7. Your Contributions do not ridicule, mock, disparage, intimidate, or abuse anyone.\r\n8. Your Contributions are not used to harass or threaten (in the legal sense of those terms) any other person and to promote violence against a specific person or class of people.\r\n9. Your Contributions do not violate any applicable law, regulation, or rule.\r\n10. Your Contributions do not violate the privacy or publicity rights of any third party.\r\n11. Your Contributions do not violate any applicable law concerning child pornography, or otherwise intended to protect the health or well-being of minors.\r\n12. Your Contributions do not include any offensive comments that are connected to race, national origin, gender, sexual preference, or physical handicap.\r\n13. Your Contributions do not otherwise violate, or link to material that violates, any provision of these Terms of Use, or any applicable law or regulation.\r\n\r\nAny use of the Site in violation of the foregoing violates these Terms of Use and may result in, among other things, termination or suspension of your rights to use the Site.\r\n\r\n## CONTRIBUTION LICENSE\r\n\r\nBy posting your Contributions to any part of the Site or making Contributions accessible to the Site by linking your account from the Site to any of your social networking accounts, you automatically grant, and you represent and warrant that you have the right to grant, to us an unrestricted, unlimited, irrevocable, perpetual, non-exclusive, transferable, royalty-free, fully-paid, worldwide right, and license to host, use, copy, reproduce, disclose, sell, resell, publish, broadcast, retitle, archive, store, cache, publicly perform, publicly display, reformat, translate, transmit, excerpt (in whole or in part), and distribute such Contributions (including, without limitation, your image and voice) for any purpose, commercial, advertising, or otherwise, and to prepare derivative works of, or incorporate into other works, such Contributions, and grant and authorize sublicenses of the foregoing. The use and distribution may occur in any media formats and through any media channels.\r\n\r\nThis license will apply to any form, media, or technology now known or hereafter developed, and includes our use of your name, company name, and franchise name, as applicable, and any of the trademarks, service marks, trade names, logos, and personal and commercial images you provide. You waive all moral rights in your Contributions, and you warrant that moral rights have not otherwise been asserted in your Contributions.\r\n\r\nWe do not assert any ownership over your Contributions. You retain full ownership of all of your Contributions and any intellectual property rights or other proprietary rights associated with your Contributions. We are not liable for any statements or representations in your Contributions provided by you in any area on the Site. You are solely responsible for your Contributions to the Site and you expressly agree to exonerate us from any and all responsibility and to refrain from any legal action against us regarding your Contributions.\r\n\r\nWe have the right, in our sole and absolute discretion, (1) to edit, redact, or otherwise change any Contributions; (2) to re-categorize any Contributions to place them in more appropriate locations on the Site; and (3) to pre-screen or delete any Contributions at any time and for any reason, without notice. We have no obligation to monitor your Contributions.\r\n\r\n## SOCIAL MEDIA\r\n\r\nAs part of the functionality of the Site, you may link your account with online accounts you have with third-party service providers (each such account, a &quot;Third-Party Account&quot;) by either: (1) providing your Third-Party Account login information through the Site; or (2) allowing us to access your Third-Party Account, as is permitted under the applicable terms and conditions that govern your use of each Third-Party Account. You represent and warrant that you are entitled to disclose your Third-Party Account login information to us and/or grant us access to your Third-Party Account, without breach by you of any of the terms and conditions that govern your use of the applicable Third-Party Account, and without obligating us to pay any fees or making us subject to any usage limitations imposed by the third-party service provider of the Third-Party Account. By granting us access to any Third-Party Accounts, you understand that (1) we may access, make available, and store (if applicable) any content that you have provided to and stored in your Third-Party Account (the &quot;Social Network Content&#39;&#39;) so that it is available on and through the Site via your account, including without limitation any friend lists and (2) we may submit to and receive from your Third-Party Account additional information to the extent you are notified when you link your account with the Third-Party Account. Depending on the Third-Party Accounts you choose and subject to the privacy settings that you have set in such Third-Party Accounts, personally identifiable information that you post to your Third-Party Accounts may be available on and through your account on the Site. Please note that if a Third-Party Account or associated service becomes unavailable or our access to such Third Party Account is terminated by the third-party service provider, then Social Network Content may no longer be available on and through the Site. You will have the ability to disable the connection between your account on the Site and your Third-Party Accounts at any time. PLEASE NOTE THAT YOUR RELATIONSHIP WITH THE THIRD-PARTY SERVICE PROVIDERS ASSOCIATED WITH YOUR THIRD-PARTY ACCOUNTS IS GOVERNED SOLELY BY YOUR AGREEMENT(S) WITH SUCH THIRD-PARTY SERVICE PROVIDERS. We make no effort to review any Social Network Content for any purpose, including but not limited to, for accuracy, legality, or non-infringement, and we are not responsible for any Social Network Content. You acknowledge and agree that we may access your email address book associated with a Third-Party Account and your contacts list stored on your mobile device or tablet computer solely for purposes of identifying and informing you of those contacts who have also registered to use the Site. You can deactivate the connection between the Site and your Third-Party Account by contacting us using the contact information below or through your account settings (if applicable). We will attempt to delete any information stored on our servers that was obtained through such Third-Party Account, except the username and profile picture that become associated with your account.\r\n\r\n## SUBMISSIONS\r\n\r\nYou acknowledge and agree that any questions, comments, suggestions, ideas, feedback, or other information regarding the Site (&quot;Submissions&quot;) provided by you to us are non-confidential and shall become our sole property. We shall own exclusive rights, including all intellectual property rights, and shall be entitled to the unrestricted use and dissemination of these Submissions for any lawful purpose, commercial or otherwise, without acknowledgment or compensation to you. You hereby waive all moral rights to any such Submissions, and you hereby warrant that any such Submissions are original with you or that you have the right to submit such Submissions. You agree there shall be no recourse against us for any alleged or actual infringement or misappropriation of any proprietary right in your Submissions.\r\n\r\n## SITE MANAGEMENT\r\n\r\nWe reserve the right, but not the obligation, to: (1) monitor the Site for violations of\r\n\r\nthese Terms of Use; (2) take appropriate legal action against anyone who, in our sole discretion, violates the law or these Terms of Use, including without limitation, reporting such user to law enforcement authorities; (3) in our sole discretion and without limitation, refuse, restrict access to, limit the availability of, or disable (to the extent technologically feasible) any of your Contributions or any portion thereof; (4) in our sole discretion and without limitation, notice, or liability, to remove from the Site or otherwise disable all files and content that are excessive in size or are in any way burdensome to our systems; and (5) otherwise manage the Site in a manner designed to protect our rights and property and to facilitate the proper functioning of the Site.\r\n\r\n## TERM AND TERMINATION\r\n\r\nThese Terms of Use shall remain in full force and effect while you use the Site. WITHOUT LIMITING ANY OTHER PROVISION OF THESE TERMS OF USE, WE RESERVE THE RIGHT TO, IN OUR SOLE DISCRETION AND WITHOUT NOTICE OR LIABILITY, DENY ACCESS TO AND USE OF THE SITE (INCLUDING BLOCKING CERTAIN IP ADDRESSES), TO ANY PERSON FOR ANY REASON OR FOR NO REASON, INCLUDING WITHOUT LIMITATION FOR BREACH OF ANY REPRESENTATION, WARRANTY, OR COVENANT CONTAINED IN THESE TERMS OF USE OR OF ANY APPLICABLE LAW OR REGULATION. WE MAY TERMINATE YOUR USE OR PARTICIPATION IN THE SITE OR DELETE YOUR ACCOUNT AND ANY CONTENT OR INFORMATION THAT YOU POSTED AT ANY TIME, WITHOUT WARNING, IN OUR SOLE DISCRETION. If we terminate or suspend your account for any reason, you are prohibited from registering and creating a new account under your name, a fake or borrowed name, or the name of any third party, even if you may be acting on behalf of the third party. In addition to terminating or suspending your account, we reserve the right to take appropriate legal action, including without limitation pursuing civil, criminal, and injunctive redress.\r\n\r\n## MODIFICATIONS AND INTERRUPTIONS\r\n\r\nWe reserve the right to change, modify, or remove the contents of the Site at any time or for any reason at our sole discretion without notice. However, we have no obligation to update any information on our Site. We also reserve the right to modify or discontinue all or part of the Site without notice at any time. We will not be liable to you or any third party for any modification, price change, suspension, or discontinuance of the Site.\r\n\r\nWe cannot guarantee the Site will be available at all times. We may experience hardware, software, or other problems or need to perform maintenance related to the Site, resulting\r\n\r\nin interruptions, delays, or errors. We reserve the right to change, revise, update, suspend, discontinue, or otherwise modify the Site at any time or for any reason without notice to you. You agree that we have no liability whatsoever for any loss, damage, or inconvenience caused by your inability to access or use the Site during any downtime or discontinuance of the Site. Nothing in these Terms of Use will be construed to obligate us to maintain and support the Site or to supply any corrections, updates, or releases in connection therewith.\r\n\r\n## GOVERNING LAW\r\n\r\nThese Terms shall be governed by and defined following the laws of Serbia. Shelf and yourself irrevocably consent that the courts of Serbia shall have exclusive jurisdiction to resolve any dispute which may arise in connection with these terms.\r\n\r\n## DISPUTE RESOLUTION\r\n\r\n### Informal Negotiations\r\n\r\nTo expedite resolution and control the cost of any dispute, controversy, or claim related to these Terms of Use (each &quot;Dispute&quot; and collectively, the &quot;Disputes&quot;) brought by either you or us (individually, a &quot;Party&quot; and collectively, the &quot;Parties&quot;), the Parties agree to first attempt to negotiate any Dispute (except those Disputes expressly provided below) informally for at least thirty (30) days before initiating arbitration. Such informal negotiations commence upon written notice from one Party to the other Party.\r\n\r\n### Binding Arbitration\r\n\r\nAny dispute arising out of or in connection with this contract, including any question regarding its existence, validity, or termination, shall be referred to and finally resolved by the International Commercial Arbitration Court under the European Arbitration Chamber (Belgium, Brussels, Avenue Louise, 146) according to the Rules of this ICAC, which, as a result of referring to it, is considered as the part of this clause. The number of arbitrators shall be three (3). The seat, or legal place, of arbitration shall be Belgrade, Serbia. The language of the proceedings shall be Serbian &amp; English. The governing law of the contract shall be the substantive law of Serbia.\r\n\r\n### Restrictions\r\n\r\nThe Parties agree that any arbitration shall be limited to the Dispute between the Parties individually. To the full extent permitted by law, (a) no arbitration shall be joined with any other proceeding; (b) there is no right or authority for any Dispute to be arbitrated on a class-action basis or to utilize class action procedures; and (c) there is no right or authority for any Dispute to be brought in a purported representative capacity on behalf of the general public or any other persons.\r\n\r\n### Exceptions to Informal Negotiations and Arbitration\r\n\r\nThe Parties agree that the following Disputes are not subject to the above provisions concerning informal negotiations and binding arbitration: (a) any Disputes seeking to enforce or protect, or concerning the validity of, any of the intellectual property rights of a Party; (b) any Dispute related to, or arising from, allegations of theft, piracy, invasion of privacy, or unauthorized use; and (c) any claim for injunctive relief. If this provision is found to be illegal or unenforceable, then neither Party will elect to arbitrate any Dispute falling within that portion of this provision found to be illegal or unenforceable and such Dispute shall be decided by a court of competent jurisdiction within the courts listed for jurisdiction above, and the Parties agree to submit to the personal jurisdiction of that court.\r\n\r\n## CORRECTIONS\r\n\r\nThere may be information on the Site that contains typographical errors, inaccuracies, or\r\n\r\nomissions, including descriptions, pricing, availability, and various other information. We reserve the right to correct any errors, inaccuracies, or omissions and to change or update the information on the Site at any time, without prior notice.\r\n\r\n## DISCLAIMER\r\n\r\nTHE SITE IS PROVIDED ON AN AS-IS AND AS-AVAILABLE BASIS. YOU AGREE THAT YOUR USE OF THE SITE AND OUR SERVICES WILL BE AT YOUR SOLE RISK. TO THE FULLEST EXTENT PERMITTED BY LAW, WE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, IN CONNECTION WITH THE SITE AND YOUR USE THEREOF, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. WE MAKE NO WARRANTIES OR REPRESENTATIONS ABOUT THE ACCURACY OR COMPLETENESS OF THE SITE&#39;S CONTENT OR THE CONTENT OF ANY WEBSITES LINKED TO THE SITE AND WE WILL ASSUME NO LIABILITY OR RESPONSIBILITY FOR ANY (1) ERRORS, MISTAKES, OR INACCURACIES OF CONTENT AND MATERIALS, (2) PERSONAL INJURY OR PROPERTY DAMAGE, OF ANY NATURE WHATSOEVER, RESULTING FROM YOUR ACCESS TO AND USE OF THE SITE, (3) ANY UNAUTHORIZED ACCESS TO OR USE OF OUR SECURE SERVERS AND/OR ANY AND ALL PERSONAL INFORMATION AND/OR FINANCIAL INFORMATION STORED THEREIN, (4) ANY INTERRUPTION OR CESSATION OF TRANSMISSION TO OR FROM THE SITE, (5) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE WHICH MAY BE TRANSMITTED TO OR THROUGH THE SITE BY ANY THIRD PARTY, AND/OR (6) ANY ERRORS OR OMISSIONS IN ANY CONTENT AND MATERIALS OR FOR ANY LOSS OR DAMAGE OF ANY KIND INCURRED AS A RESULT OF THE USE OF ANY CONTENT POSTED, TRANSMITTED, OR OTHERWISE MADE AVAILABLE VIA THE SITE. WE DO NOT WARRANT, ENDORSE, GUARANTEE, OR ASSUME RESPONSIBILITY FOR ANY PRODUCT OR SERVICE ADVERTISED OR OFFERED BY A THIRD PARTY THROUGH THE SITE, ANY HYPERLINKED WEBSITE, OR ANY WEBSITE OR MOBILE APPLICATION FEATURED IN ANY BANNER OR OTHER ADVERTISING, AND WE WILL NOT BE A\r\n\r\nPARTY TO OR IN ANY WAY BE RESPONSIBLE FOR MONITORING ANY TRANSACTION BETWEEN YOU AND ANY THIRD-PARTY PROVIDERS OF PRODUCTS OR SERVICES. AS WITH THE PURCHASE OF A PRODUCT OR SERVICE THROUGH ANY MEDIUM OR IN ANY ENVIRONMENT, YOU SHOULD USE YOUR BEST JUDGMENT AND EXERCISE CAUTION WHERE APPROPRIATE.\r\n\r\n## LIMITATIONS OF LIABILITY\r\n\r\nIN NO EVENT WILL WE OR OUR DIRECTORS, EMPLOYEES, OR AGENTS BE LIABLE TO YOU OR ANY THIRD PARTY FOR ANY DIRECT, INDIRECT, CONSEQUENTIAL, EXEMPLARY, INCIDENTAL, SPECIAL, OR PUNITIVE DAMAGES, INCLUDING LOST PROFIT, LOST REVENUE, LOSS OF DATA, OR OTHER DAMAGES ARISING FROM YOUR USE OF THE SITE, EVEN IF WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\r\n\r\n## INDEMNIFICATION\r\n\r\nYou agree to defend, indemnify, and hold us harmless, including our subsidiaries, affiliates, and all of our respective officers, agents, partners, and employees, from and against any loss, damage, liability, claim, or demand, including reasonable attorneys&#39; fees and expenses, made by any third party due to or arising out of: (1) your Contributions; (2) use of the Site; (3) breach of these Terms of Use; (4) any breach of your representations and warranties set forth in these Terms of Use; (5) your violation of the rights of a third party, including but not limited to intellectual property rights; or (6) any overt harmful act toward any other user of the Site with whom you connected via the Site. Notwithstanding the foregoing, we reserve the right, at your expense, to assume the exclusive defense and control of any matter for which you are required to indemnify us, and you agree to cooperate, at your expense, with our defense of such claims. We will use reasonable efforts to notify you of any such claim, action, or proceeding which is subject to this indemnification upon becoming aware of it.\r\n\r\n## USER DATA\r\n\r\nWe will maintain certain data that you transmit to the Site for the purpose of managing the\r\n\r\nperformance of the Site, as well as data relating to your use of the Site. Although we perform regular routine backups of data, you are solely responsible for all data that you transmit or that\r\n\r\nrelates to any activity you have undertaken using the Site. You agree that we shall have no liability to you for any loss or corruption of any such data, and you hereby waive any right of action against us arising from any such loss or corruption of such data.\r\n\r\n## ELECTRONIC COMMUNICATIONS, TRANSACTIONS, AND SIGNATURES\r\n\r\nVisiting the Site, sending us emails, and completing online forms constitute electronic communications. You consent to receive electronic communications, and you agree that all agreements, notices, disclosures, and other communications we provide to you electronically, via email and on the Site, satisfy any legal requirement that such communication be in writing. YOU HEREBY AGREE TO THE USE OF ELECTRONIC SIGNATURES, CONTRACTS, ORDERS, AND OTHER RECORDS, AND TO ELECTRONIC DELIVERY OF NOTICES, POLICIES, AND RECORDS OF TRANSACTIONS INITIATED OR COMPLETED BY US OR VIA THE SITE. You hereby waive any rights or requirements under any statutes, regulations, rules, ordinances, or other laws in any jurisdiction which require an original signature or delivery or retention of non-electronic records, or to payments or the granting of credits by any means other than electronic means.\r\n\r\n## MISCELLANEOUS\r\n\r\nThese Terms of Use and any policies or operating rules posted by us on the Site or in respect to the Site constitute the entire agreement and understanding between you and us. Our failure to exercise or enforce any right or provision of these Terms of Use shall not operate as a waiver of such right or provision. These Terms of Use operate to the fullest extent permissible by law. We may assign any or all of our rights and obligations to others at any time. We shall not be responsible or liable for any loss, damage, delay, or failure to act caused by any cause beyond our reasonable control. If any provision or part of a provision of these Terms of Use is determined to be unlawful, void, or unenforceable, that provision or part of the provision is deemed severable from these Terms of Use and does not affect the validity and enforceability of any remaining provisions. There is no joint venture, partnership, employment or agency relationship created between you and us as a result of these Terms of Use or use of the Site. You agree that these Terms of Use will not be construed against us by virtue of having drafted them. You hereby waive any and all defenses you may have based on the electronic form of these Terms of Use and the lack of signing by the parties hereto to execute these Terms of Use.\r\n\r\n## CONTACT US\r\n\r\nIn order to resolve a complaint regarding the Site or to receive further information regarding use of the Site, please contact us at:\r\n\r\n**Shelf**\r\n\r\n**Bulevar Milutina Milankovica 11b**\r\n\r\n**Belgrade 11000**\r\n\r\n**Serbia**\r\n\r\n**Phone: +381641234567**\r\n\r\n**Fax: +38117654321**\r\n\r\n**marko.manic@htecgroup.com**`;\r\n","export const LocalStorage = {\r\n  get(key: string) {\r\n    return localStorage.getItem(key);\r\n  },\r\n  set(key: string, value: string | {}) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  },\r\n  remove(key: string) {\r\n    localStorage.removeItem(key);\r\n  },\r\n  clear() {\r\n    localStorage.clear();\r\n  },\r\n};\r\n","import { toast } from 'react-toastify';\r\nimport { useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { LocalStorage } from '../../../services/localStorage';\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\nimport { setUser } from '../../../store/userReducer';\r\nimport { Routes } from '../../../utils/enums/routes';\r\nimport userServices from '../../../services/userServices';\r\n\r\ntype ProtectedRouteProps = {\r\n  children: JSX.Element;\r\n  roles: number[];\r\n};\r\n\r\nconst ProtectedRoute = ({ children, roles }: ProtectedRouteProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const accessToken = LocalStorage.get('token');\r\n  const user = useAppSelector((state) => state.user.user);\r\n\r\n  useEffect(() => {\r\n    if (!user)\r\n      userServices\r\n        .getUser()\r\n        .then((res) => {\r\n          dispatch(setUser(res.data));\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.repsonse?.data?.message);\r\n        });\r\n  }, []);\r\n\r\n  const isLoggedIn = accessToken;\r\n  const userHasRequiredRole = user && roles.includes(user?.role.id);\r\n\r\n  if (!isLoggedIn) {\r\n    return <Navigate to={Routes.HOME} />;\r\n  }\r\n  if (user && isLoggedIn && !userHasRequiredRole) {\r\n    return <Navigate to={Routes.DASHBOARD} />;\r\n  }\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Navigate } from 'react-router-dom';\r\nimport { Routes } from '../../../utils/enums/routes';\r\nimport { LocalStorage } from '../../../services/localStorage';\r\n\r\ntype PublicOnlyRouteProps = { children: JSX.Element };\r\n\r\nconst PublicOnlyRoute = ({ children }: PublicOnlyRouteProps) => {\r\n  const accessToken = LocalStorage.get('token');\r\n  const isLoggedIn = accessToken;\r\n\r\n  return isLoggedIn ? <Navigate to={Routes.DASHBOARD} /> : children;\r\n};\r\n\r\nexport default PublicOnlyRoute;\r\n","const SharedShelves = () => <>SharedShelves</>;\r\n\r\nexport default SharedShelves;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const BreadcrumbsContainer = styled.div`\r\n  \r\n  margin-bottom: ${theme.space.md};\r\n`;\r\n","import { Link } from '../text/text-styles';\r\nimport { PathHistoryData } from '../../interfaces/dataTypes';\r\nimport { BreadcrumbsContainer } from './breadcrumbs.styles';\r\n\r\nconst Breadcrumbs = ({ pathHistory }: { pathHistory: PathHistoryData[] }) => {\r\n  let rootUrl =\r\n    pathHistory &&\r\n    pathHistory[0] &&\r\n    `/dashboard/shelves/${pathHistory[0].folderId}`;\r\n  if (pathHistory && pathHistory[0] && pathHistory[0].folderName === 'trash') {\r\n    rootUrl =\r\n      pathHistory &&\r\n      pathHistory[0] &&\r\n      `/dashboard/${pathHistory[0].folderName}`;\r\n  }\r\n  const separator = '/';\r\n\r\n  return (\r\n    <BreadcrumbsContainer>\r\n      {pathHistory &&\r\n        pathHistory.map((item: PathHistoryData, i: number) => (\r\n          <span key={item.folderId}>\r\n            {i === 0 && item.folderName !== 'trash' ? (\r\n              <span>\r\n                {pathHistory.length === 1 ? (\r\n                  <span>{pathHistory[0].folderName}</span>\r\n                ) : (\r\n                  <Link to={rootUrl}>{pathHistory[0].folderName}</Link>\r\n                )}\r\n\r\n                {` ${pathHistory.length > 1 ? separator : ''} `}\r\n              </span>\r\n            ) : (\r\n              <>\r\n                {i === pathHistory.length - 1 ? (\r\n                  <span>{item.folderName}</span>\r\n                ) : (\r\n                  <span>\r\n                    {item.folderName !== 'trash' && (\r\n                      <>\r\n                        <Link to={`${rootUrl}/folders/${item.folderId}`}>\r\n                          {item.folderName}\r\n                        </Link>\r\n                        {` ${separator} `}\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </span>\r\n        ))}\r\n    </BreadcrumbsContainer>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import instance from '../api/axiosInstance';\r\n\r\nconst API_URL_FILESYSTEM = '/filesystem';\r\n\r\nconst getTrash = () => instance.get(`${API_URL_FILESYSTEM}/shelf/trash`);\r\n\r\nconst getTrashFiles = (folderId: number) =>\r\n  instance.get(`${API_URL_FILESYSTEM}/folder/trash/${folderId}`);\r\n\r\nexport default {\r\n  getTrash,\r\n  getTrashFiles,\r\n};\r\n","import instance from '../api/axiosInstance';\r\n\r\nconst API_URL_FILESYSTEM = '/filesystem';\r\n\r\nconst getFolderFiles = (folderId: number) =>\r\n  instance.get(`${API_URL_FILESYSTEM}/folder/${folderId}`);\r\n\r\nconst createFolder = (\r\n  folderName: string,\r\n  shelfId: number,\r\n  parentFolderId = 0\r\n) =>\r\n  instance.post(`${API_URL_FILESYSTEM}/folder`, {\r\n    folderName,\r\n    shelfId,\r\n    parentFolderId,\r\n  });\r\n\r\nconst softDeleteFolder = (folderIds: number[]) =>\r\n  instance.put(`${API_URL_FILESYSTEM}/folder/move-to-trash`, folderIds);\r\n\r\nconst hardDeleteFolder = (data: number[]) =>\r\n  instance.delete(`${API_URL_FILESYSTEM}/folder`, { data });\r\n  \r\nconst recoverFolderFromTrash = (data: number[]) =>\r\n  instance.put(`${API_URL_FILESYSTEM}/folder/recover`, data);\r\n\r\nconst editFolder = (data: { folderId: number; folderName: string }) =>\r\n  instance.put(`${API_URL_FILESYSTEM}/folder/rename`, data);\r\n\r\nexport default {\r\n  getFolderFiles,\r\n  createFolder,\r\n  softDeleteFolder,\r\n  hardDeleteFolder,\r\n  recoverFolderFromTrash,\r\n  editFolder,\r\n};\r\n","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { FaTrash } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport { Table } from '../../components/table/table';\r\nimport {\r\n  ActionsBox,\r\n  ButtonActionsBox,\r\n} from '../../components/table/tableWrapper.styles';\r\nimport { Button } from '../../components/UI/button';\r\nimport SearchBar from '../../components/UI/searchBar/searchBar';\r\nimport {\r\n  FileDataType,\r\n  PathHistoryData,\r\n  TableDataTypes,\r\n} from '../../interfaces/dataTypes';\r\nimport { Description } from '../../components/text/text-styles';\r\nimport DeleteModal from '../../components/modal/deleteModal';\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport fileServices from '../../services/fileServices';\r\nimport trashService from '../../services/trashService';\r\nimport folderService from '../../services/folderService';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport { ActionType, Recover } from '../../components/table/table.interfaces';\r\n\r\nconst headers = [\r\n  {\r\n    header: 'Name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    header: 'Creation Date',\r\n    key: 'createdAt',\r\n  },\r\n];\r\n\r\nconst Trash = () => {\r\n  const [trash, setTrash] = useState<FileDataType[]>([]);\r\n  const [filteredData, setFilteredData] = useState<TableDataTypes[]>([]);\r\n  const [selectedRows, setSelectedRows] = useState<TableDataTypes[]>([]);\r\n  const [tableData, setTableData] = useState<TableDataTypes[]>([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const { folderId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pathHistory, setPathHistory] = useState<PathHistoryData[]>([]);\r\n\r\n  const setMessage = () => {\r\n    if (trash.length === 0 && pathHistory.length === 0) return 'Trash is empty';\r\n    if (pathHistory.length > 0) return 'There are no further folders or files';\r\n    return 'Sorry, no matching results found';\r\n  };\r\n  const message = setMessage();\r\n\r\n  const getData = () => {\r\n    setIsLoading(true);\r\n    if (folderId) {\r\n      trashService\r\n        .getTrashFiles(Number(folderId))\r\n        .then((res) => {\r\n          setPathHistory(res.data.breadCrumbs);\r\n          setTrash(res.data.shelfItems);\r\n        })\r\n        .catch((err) => toast.error(err))\r\n        .finally(() => setIsLoading(false));\r\n    } else {\r\n      trashService\r\n        .getTrash()\r\n        .then((res) => {\r\n          setTrash(res.data.shelfItems);\r\n        })\r\n        .catch((err) => toast.error(err.response?.data?.message))\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    setPathHistory([]);\r\n  }, [folderId]);\r\n\r\n  useEffect(() => {\r\n    if (trash) {\r\n      const newData = trash.map((item) => ({\r\n        id: item.id,\r\n        folder: item.folder ? 1 : 0,\r\n        name: item.name,\r\n        createdAt: new Date(item.createdAt).toLocaleString('en-US'),\r\n      }));\r\n\r\n      setFilteredData(newData);\r\n      setTableData(newData);\r\n    }\r\n  }, [trash]);\r\n\r\n  const getSelectedRows = (selectedRowsData: TableDataTypes[]) => {\r\n    setSelectedRows(selectedRowsData);\r\n  };\r\n\r\n  const handleOpenDeleteModal = () => {\r\n    if (selectedRows.length === 0) return;\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleRecoverFromTrash = (row: TableDataTypes) => {\r\n    if (row.folder) {\r\n      folderService\r\n        .recoverFolderFromTrash([row.id])\r\n        .then(() => {\r\n          getData();\r\n          toast.success('Folder recoverd from trash');\r\n        })\r\n        .catch((err) => toast.error(err));\r\n    } else {\r\n      fileServices\r\n        .recoverFileFromTrash([row.id])\r\n        .then(() => {\r\n          getData();\r\n          toast.success('File recoverd from trash');\r\n        })\r\n        .catch((err) => toast.error(err));\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const handleHardDelete = () => {\r\n    const fileIds: number[] = [];\r\n    const folderIds: number[] = [];\r\n\r\n    selectedRows.forEach((item) => {\r\n      if (item.folder) folderIds.push(item.id);\r\n      else fileIds.push(item.id);\r\n    });\r\n\r\n    if (fileIds.length > 0) {\r\n      fileServices\r\n        .hardDeleteFile(fileIds)\r\n        .then(() => {\r\n          getData();\r\n          toast.success('Files successfully removed');\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    }\r\n\r\n    if (folderIds.length > 0) {\r\n      folderService\r\n        .hardDeleteFolder(folderIds)\r\n        .then(() => {\r\n          getData();\r\n          toast.success('Folders successfully removed');\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    }\r\n    handleModalClose();\r\n  };\r\n\r\n  if (isLoading) return null;\r\n\r\n  const actions: ActionType[] = [\r\n    { comp: Recover, handler: handleRecoverFromTrash, key: 1 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {openModal && (\r\n        <DeleteModal\r\n          title=\"Delete from trash\"\r\n          onDelete={handleHardDelete}\r\n          onCloseModal={handleModalClose}\r\n          message=\"This action will permanently delete selected items!\"\r\n        />\r\n      )}\r\n\r\n      <TableWrapper title=\"Trash\">\r\n        <Breadcrumbs pathHistory={pathHistory} />\r\n        <ActionsBox>\r\n          <SearchBar\r\n            placeholder=\"Search...\"\r\n            data={tableData}\r\n            setData={setFilteredData}\r\n            searchKey=\"name\"\r\n          />\r\n          <ButtonActionsBox>\r\n            <Button onClick={handleOpenDeleteModal} icon={<FaTrash />}>\r\n              Delete\r\n            </Button>\r\n          </ButtonActionsBox>\r\n        </ActionsBox>\r\n        {(trash && trash.length === 0) || filteredData.length === 0 ? (\r\n          <Description>{message}</Description>\r\n        ) : (\r\n          <Table\r\n            setTableData={setFilteredData}\r\n            data={filteredData}\r\n            headers={headers}\r\n            path=\"folders/\"\r\n            mulitSelect\r\n            getSelectedRows={getSelectedRows}\r\n            actions={actions}\r\n          />\r\n        )}\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trash;\r\n","import instance from '../api/axiosInstance';\r\nimport { FunctionFormData } from '../interfaces/dataTypes';\r\n\r\nconst API_URL_FUNCTIONS = '/shelffunctions';\r\n\r\nconst createPredefinedFunction = (data: FunctionFormData) =>\r\n  instance.post(`${API_URL_FUNCTIONS}/functions/predefined`, data);\r\n\r\nconst getFunctions = () => instance.get(`${API_URL_FUNCTIONS}/functions`);\r\n\r\nconst deleteFunction = (functionId: number) =>\r\n  instance.delete(`${API_URL_FUNCTIONS}/functions/${functionId}`);\r\n\r\nconst createCustomfunction = (data: FunctionFormData) =>\r\n  instance.post(`${API_URL_FUNCTIONS}/functions/custom`, data);\r\n\r\nconst renameFunction = (data: { functionId: number; newName: string }) =>\r\n  instance.put(`${API_URL_FUNCTIONS}/functions/rename`, data);\r\nconst getFunction = (functionId: number) =>\r\n  instance.get(`${API_URL_FUNCTIONS}/functions/${functionId}`);\r\n\r\nconst saveFunction = (functionId: number, code: string) =>\r\n  instance.put(`shelffunctions/functions/code`, {\r\n    functionId,\r\n    code,\r\n  });\r\n\r\nconst executeFunction = (language: string, functionId: number) =>\r\n  instance.get(\r\n    `shelffunctions/execute/language/${language}/function/${functionId}`\r\n  );\r\n\r\nexport default {\r\n  createPredefinedFunction,\r\n  getFunctions,\r\n  deleteFunction,\r\n  createCustomfunction,\r\n  renameFunction,\r\n  getFunction,\r\n  saveFunction,\r\n  executeFunction,\r\n};\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\n\r\nexport interface SelectStyleProps {\r\n  variant?: 'secondary' | undefined;\r\n}\r\n\r\nexport const DropDownContainer = styled.div`\r\n  width: 100%;\r\n  margin: 0;\r\n  color: black;\r\n  margin: ${theme.space.sm} 0 ${theme.space.lg};\r\n  input {\r\n    display: none;\r\n  }\r\n  height: 50px;\r\n  font-size: ${theme.fontSizes.sm};\r\n`;\r\n\r\nexport const DropDownHeader = styled.div<SelectStyleProps>`\r\n  background: ${theme.colors.white};\r\n  color: ${theme.colors.black};\r\n\r\n  padding: ${theme.space.sm};\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-radius: ${theme.space.lg};\r\n  margin-bottom: 10px;\r\n  text-indent: 10px;\r\n  cursor: pointer;\r\n\r\n  ${({ variant }) => {\r\n    switch (variant) {\r\n      case 'secondary':\r\n        return `\r\n          border: 1px solid ${theme.colors.secondary};\r\n        `;\r\n      default:\r\n        return null;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport const DropdownListContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const DropDownList = styled.div<SelectStyleProps>`\r\n  margin: 0;\r\n  background: ${theme.colors.white};\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  box-shadow: 0px 0px 6px 2px rgba(0, 0, 0, 0.1);\r\n  max-height: 180px;\r\n  overflow: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DropdownItem = styled.div`\r\n  padding: 10px;\r\n  &:hover {\r\n    background: ${theme.colors.lightBlue};\r\n  }\r\n`;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  FieldValues,\r\n  RegisterOptions,\r\n  UseFormRegister,\r\n  UseFormSetValue,\r\n} from 'react-hook-form';\r\nimport { RiArrowDownSFill, RiArrowUpSFill } from 'react-icons/ri';\r\nimport { ShelvesOptionTypes } from '../../modal/modal.interfaces';\r\nimport { Error } from '../../text/text-styles';\r\nimport {\r\n  DropDownContainer,\r\n  DropDownHeader,\r\n  DropDownList,\r\n  DropdownItem,\r\n  DropdownListContainer,\r\n} from './select-styles';\r\n\r\ninterface SelectProps {\r\n  optionsData: { value: string; text: string }[];\r\n  selectName: string;\r\n  placeHolder: string;\r\n  register: UseFormRegister<FieldValues>;\r\n  error: { message: string };\r\n  validation?: RegisterOptions;\r\n  setValue?: UseFormSetValue<FieldValues>;\r\n  variant?: 'secondary' | undefined;\r\n}\r\n\r\nexport const Select = ({\r\n  optionsData,\r\n  selectName,\r\n  setValue,\r\n  placeHolder,\r\n  register,\r\n  error,\r\n  validation,\r\n  variant,\r\n}: SelectProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggling = () => setIsOpen(!isOpen);\r\n  const [placeholder, setPlaceholder] = useState(placeHolder);\r\n\r\n  const validationRule = { required: 'You must select a role' };\r\n\r\n  const ListItem = ({\r\n    option,\r\n    index,\r\n  }: {\r\n    option: ShelvesOptionTypes;\r\n    index: number;\r\n  }) => {\r\n    const handleChooseOption = () => {\r\n      if (setValue) {\r\n        setValue(selectName, option.value, { shouldValidate: true });\r\n      }\r\n      setPlaceholder(option.text);\r\n      setIsOpen(false);\r\n    };\r\n    return (\r\n      <DropdownItem key={index} onClick={handleChooseOption}>\r\n        {option.text}\r\n      </DropdownItem>\r\n    );\r\n  };\r\n\r\n  const dropDownRef = useRef<HTMLDivElement>(null);\r\n  const selectRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event: MouseEvent) => {\r\n      if (\r\n        dropDownRef.current &&\r\n        selectRef.current &&\r\n        event.target instanceof Node &&\r\n        !dropDownRef.current.contains(event.target) &&\r\n        !selectRef.current.contains(event.target)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleOutsideClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n    };\r\n  }, [dropDownRef, selectRef]);\r\n\r\n  return (\r\n    <DropDownContainer>\r\n      <input {...register(selectName, validation || validationRule)} />\r\n      <DropDownHeader onClick={toggling} variant={variant} ref={selectRef}>\r\n        {placeholder}\r\n        {!isOpen ? (\r\n          <RiArrowDownSFill size=\"30px\" />\r\n        ) : (\r\n          <RiArrowUpSFill size=\"30px\" />\r\n        )}\r\n      </DropDownHeader>\r\n\r\n      {error && !isOpen && <Error>{error.message}</Error>}\r\n      {isOpen && (\r\n        <DropdownListContainer>\r\n          <DropDownList ref={dropDownRef} variant={variant}>\r\n            {optionsData.map(\r\n              (option: { value: string; text: string }, index: number) => (\r\n                <ListItem option={option} index={index} />\r\n              )\r\n            )}\r\n          </DropDownList>\r\n        </DropdownListContainer>\r\n      )}\r\n    </DropDownContainer>\r\n  );\r\n};\r\n","export const functionOptions = [\r\n  {\r\n    value: 'backup',\r\n    text: 'backup',\r\n  },\r\n  {\r\n    value: 'log',\r\n    text: 'log',\r\n  },\r\n];\r\n\r\nexport const languageOptions = [\r\n  {\r\n    value: 'java',\r\n    text: 'java',\r\n  },\r\n  {\r\n    value: 'csharp',\r\n    text: 'csharp',\r\n  },\r\n];\r\n\r\nexport const eventTriggerOptions = [\r\n  {\r\n    value: '1',\r\n    text: 'upload',\r\n  },\r\n  {\r\n    value: '2',\r\n    text: 'download',\r\n  },\r\n  {\r\n    value: '3',\r\n    text: 'delete',\r\n  },\r\n  {\r\n    value: '4',\r\n    text: 'daily',\r\n  },\r\n  {\r\n    value: '5',\r\n    text: 'weekly',\r\n  },\r\n  {\r\n    value: '6',\r\n    text: 'monthly',\r\n  },\r\n  {\r\n    value: '7',\r\n    text: 'sync',\r\n  },\r\n];\r\n\r\nexport const logTrigger = [\r\n  {\r\n    value: '1',\r\n    text: 'upload',\r\n  },\r\n  {\r\n    value: '2',\r\n    text: 'download',\r\n  },\r\n  {\r\n    value: '3',\r\n    text: 'delete',\r\n  },\r\n];\r\n","import { SyntheticEvent, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FaRegTimesCircle } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport { FunctionForm, FunctionFormInner } from '../form/form-styles';\r\nimport { InputField } from '../UI/input/InputField';\r\nimport { Button } from '../UI/button';\r\nimport functionService from '../../services/functionService';\r\nimport { Error, H2 } from '../text/text-styles';\r\nimport {\r\n  Backdrop,\r\n  Close,\r\n  FunctionContainer,\r\n  FunctionHeader,\r\n  FunctionModalContainer,\r\n  HeaderItem,\r\n  RadioLabel,\r\n  RadioContainer,\r\n  RadioInner,\r\n  RadioSubTitle,\r\n  RadioTitle,\r\n  FunctionModalFooter,\r\n} from './modal.styles';\r\nimport { theme } from '../../theme';\r\nimport { InputSubTitle, InputTitle } from '../UI/input/input-styles';\r\nimport { Select } from '../UI/select';\r\nimport { FunctionFormData } from '../../interfaces/dataTypes';\r\nimport { FunctionModalProps } from './modal.interfaces';\r\nimport {\r\n  eventTriggerOptions,\r\n  functionOptions,\r\n  languageOptions,\r\n  logTrigger,\r\n} from '../../utils/fixtures/functionOptions';\r\nimport { config } from '../../utils/validation/config/functionModalValidations';\r\n\r\nconst FunctionModal = ({\r\n  onCloseModal,\r\n  data,\r\n  onGetData,\r\n}: FunctionModalProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [optionValue, setOptionValue] = useState<string>('scratch');\r\n\r\n  const onSubmit = (formData: FunctionFormData) => {\r\n    const newFormData: FunctionFormData = formData;\r\n    newFormData.name = newFormData.name.trim();\r\n    if (formData.function === 'backup') {\r\n      const newData = { ...formData };\r\n      newData.eventId = 1;\r\n      functionService\r\n        .createPredefinedFunction(newData)\r\n        .then(() => {\r\n          toast.success('Function created');\r\n          onCloseModal();\r\n          onGetData();\r\n        })\r\n        .catch((err) => toast.error(err.response?.data.message));\r\n    } else if (formData.function === 'log') {\r\n      functionService\r\n        .createPredefinedFunction(formData)\r\n        .then(() => {\r\n          toast.success('Function created');\r\n          onCloseModal();\r\n          onGetData();\r\n        })\r\n        .catch((err) => toast.error(err.response?.data.message));\r\n    } else {\r\n      functionService\r\n        .createCustomfunction(formData)\r\n        .then(() => {\r\n          toast.success('Function created');\r\n          onCloseModal();\r\n          onGetData();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const predefinedFunction = watch('function');\r\n  const validations = config(watch);\r\n\r\n  const handleChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n    setOptionValue(target.value);\r\n    reset();\r\n  };\r\n\r\n  const handleEventPropagation = (event: SyntheticEvent) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const modal = (\r\n    <Backdrop onClick={onCloseModal}>\r\n      <FunctionModalContainer onClick={handleEventPropagation}>\r\n        <FunctionHeader>\r\n          <HeaderItem>\r\n            <H2>Create Function</H2>\r\n          </HeaderItem>\r\n\r\n          <HeaderItem>\r\n            <Close onClick={onCloseModal}>\r\n              <FaRegTimesCircle\r\n                color={theme.colors.white}\r\n                size={theme.space.lg}\r\n              />\r\n            </Close>\r\n          </HeaderItem>\r\n        </FunctionHeader>\r\n        <FunctionContainer>\r\n          <p>choose one of the following options:</p>\r\n          <RadioContainer>\r\n            <RadioLabel htmlFor=\"scratch\">\r\n              <RadioInner>\r\n                <div>\r\n                  <RadioTitle>Author from scratch</RadioTitle>\r\n                  <RadioSubTitle>Write your own code.</RadioSubTitle>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"scratch\"\r\n                  name=\"code\"\r\n                  value=\"scratch\"\r\n                  checked={optionValue === 'scratch'}\r\n                  onChange={handleChange}\r\n                />\r\n              </RadioInner>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/configuration.png`}\r\n                alt=\"gear with coding symbol\"\r\n              />\r\n            </RadioLabel>\r\n            <RadioLabel htmlFor=\"blueprint\">\r\n              <RadioInner>\r\n                <div>\r\n                  <RadioTitle>Use a blueprint</RadioTitle>\r\n                  <RadioSubTitle>\r\n                    Build Shelf Function with prewritten code and configuration\r\n                    preset for common use cases.\r\n                  </RadioSubTitle>\r\n                </div>\r\n              </RadioInner>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"blueprint\"\r\n                name=\"code\"\r\n                value=\"blueprint\"\r\n                checked={optionValue === 'blueprint'}\r\n                onChange={handleChange}\r\n              />\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/coding.png`}\r\n                alt=\"code symbol\"\r\n              />\r\n            </RadioLabel>\r\n          </RadioContainer>\r\n          <FunctionForm onSubmit={handleSubmit(onSubmit)} id=\"function-form\">\r\n            <FunctionFormInner>\r\n              {optionValue === 'scratch' ? (\r\n                <>\r\n                  <InputTitle>Function Name</InputTitle>\r\n                  <InputSubTitle>\r\n                    Enter a name that describes the purpose of your function\r\n                  </InputSubTitle>\r\n                  <InputField\r\n                    placeholder=\"Function name\"\r\n                    error={errors.name}\r\n                    {...register('name', validations.functionValidation)}\r\n                  />\r\n                  <Error>{errors?.functionName?.message}</Error>\r\n                  <InputTitle>Runtime</InputTitle>\r\n                  <InputSubTitle>\r\n                    Choose the language to use for writing your function\r\n                  </InputSubTitle>\r\n                  <Select\r\n                    optionsData={languageOptions}\r\n                    register={register}\r\n                    selectName=\"language\"\r\n                    error={errors.language}\r\n                    placeHolder=\"Select language\"\r\n                    setValue={setValue}\r\n                    validation={validations.basicValidation}\r\n                  />\r\n                  <InputTitle>Select event trigger</InputTitle>\r\n                  <InputSubTitle>\r\n                    When should function be executed\r\n                  </InputSubTitle>\r\n                  <Select\r\n                    optionsData={eventTriggerOptions}\r\n                    register={register}\r\n                    selectName=\"eventId\"\r\n                    error={errors.eventId}\r\n                    placeHolder=\"Select function trigger\"\r\n                    setValue={setValue}\r\n                    validation={validations.basicValidation}\r\n                  />\r\n                  <InputTitle>Bind function to shelf</InputTitle>\r\n                  <InputSubTitle>\r\n                    Select on what shelf you want function to be executed\r\n                  </InputSubTitle>\r\n                  <Select\r\n                    optionsData={data}\r\n                    register={register}\r\n                    selectName=\"shelfId\"\r\n                    error={errors.shelfId}\r\n                    placeHolder=\"Select shelf\"\r\n                    setValue={setValue}\r\n                    validation={validations.basicValidation}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <InputTitle>Choose predifined function</InputTitle>\r\n                  <InputSubTitle>\r\n                    Choose function that suits your needs\r\n                  </InputSubTitle>\r\n                  <Select\r\n                    optionsData={functionOptions}\r\n                    register={register}\r\n                    selectName=\"function\"\r\n                    error={errors.function}\r\n                    placeHolder=\"Select function\"\r\n                    setValue={setValue}\r\n                    validation={validations.basicValidation}\r\n                  />\r\n                  {predefinedFunction && (\r\n                    <>\r\n                      <InputTitle>Function Name</InputTitle>\r\n                      <InputSubTitle>\r\n                        Enter a name that describes the purpose of your function\r\n                      </InputSubTitle>\r\n                      <InputField\r\n                        placeholder=\"Function name\"\r\n                        error={errors.name}\r\n                        {...register('name', validations.functionValidation)}\r\n                      />\r\n                      <InputTitle>Bind function to shelf</InputTitle>\r\n                      <InputSubTitle>\r\n                        Select on what shelf you want function to be executed on\r\n                      </InputSubTitle>\r\n                      <Select\r\n                        optionsData={data}\r\n                        register={register}\r\n                        selectName=\"shelfId\"\r\n                        error={errors.shelfId}\r\n                        placeHolder=\"Select shelf\"\r\n                        setValue={setValue}\r\n                        validation={validations.basicValidation}\r\n                      />\r\n                    </>\r\n                  )}\r\n                  {predefinedFunction === 'backup' && (\r\n                    <>\r\n                      <InputTitle>Select backup shelf</InputTitle>\r\n                      <InputSubTitle>\r\n                        Data will be backed up upon uploading files in bound\r\n                        shelf\r\n                      </InputSubTitle>\r\n                      <Select\r\n                        optionsData={data}\r\n                        register={register}\r\n                        selectName=\"functionParam\"\r\n                        error={errors.functionParam}\r\n                        placeHolder=\"Select backup shelf\"\r\n                        setValue={setValue}\r\n                        validation={validations.backupShelf}\r\n                      />\r\n                    </>\r\n                  )}\r\n                  {predefinedFunction === 'log' && (\r\n                    <>\r\n                      <InputTitle>Log file name</InputTitle>\r\n                      <InputSubTitle>\r\n                        File will be created on first level of selected shelf\r\n                      </InputSubTitle>\r\n                      <InputField\r\n                        placeholder=\"Log file name\"\r\n                        error={errors.name}\r\n                        {...register(\r\n                          'logFileName',\r\n                          validations.functionValidation\r\n                        )}\r\n                      />\r\n                      <InputTitle>Select event trigger</InputTitle>\r\n                      <InputSubTitle>\r\n                        When should function be executed\r\n                      </InputSubTitle>\r\n                      <Select\r\n                        optionsData={logTrigger}\r\n                        register={register}\r\n                        selectName=\"eventId\"\r\n                        error={errors.eventId}\r\n                        setValue={setValue}\r\n                        placeHolder=\"Select function trigger\"\r\n                        validation={validations.basicValidation}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </FunctionFormInner>\r\n          </FunctionForm>\r\n        </FunctionContainer>\r\n        <FunctionModalFooter>\r\n          <Button\r\n            variant=\"lightBordered\"\r\n            onClick={onCloseModal}\r\n            size=\"large\"\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button size=\"large\" type=\"submit\" form=\"function-form\">\r\n            Submit\r\n          </Button>\r\n        </FunctionModalFooter>\r\n      </FunctionModalContainer>\r\n    </Backdrop>\r\n  );\r\n\r\n  const modalPortal = document.getElementById('modal-root');\r\n  return <>{modalPortal ? ReactDOM.createPortal(modal, modalPortal) : null}</>;\r\n};\r\n\r\nexport default FunctionModal;\r\n","import { FieldValues, UseFormWatch } from 'react-hook-form';\r\nimport { whiteSpaceRegex } from '../regex';\r\n\r\nexport const config = (watch: UseFormWatch<FieldValues>) => {\r\n  const functionValidation = {\r\n    required: 'This field is required',\r\n    maxLength: {\r\n      value: 50,\r\n      message: 'Function name can not be longer than 50 characters',\r\n    },\r\n    pattern: {\r\n      value: whiteSpaceRegex,\r\n      message: 'Invalid name format',\r\n    },\r\n  };\r\n  const basicValidation = {\r\n    required: 'This field is required',\r\n  };\r\n\r\n  const backupShelf = {\r\n    required: 'This field is required',\r\n    validate: (value: string) =>\r\n      value !== watch('shelfId') || \"Can't select the same shelf\",\r\n  };\r\n\r\n  return { functionValidation, basicValidation, backupShelf };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport DeleteModal from '../../components/modal/deleteModal';\r\nimport FunctionModal from '../../components/modal/functionModal';\r\nimport { ModifyModal } from '../../components/modal/modifyModal';\r\nimport { ShelvesOptionTypes } from '../../components/modal/modal.interfaces';\r\nimport { Table } from '../../components/table/table';\r\nimport {\r\n  ActionType,\r\n  Delete,\r\n  Edit,\r\n} from '../../components/table/table.interfaces';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport {\r\n  ActionsBox,\r\n  ButtonActionsBox,\r\n} from '../../components/table/tableWrapper.styles';\r\nimport { Description } from '../../components/text/text-styles';\r\nimport { Button } from '../../components/UI/button';\r\nimport SearchBar from '../../components/UI/searchBar/searchBar';\r\nimport { ShelfFormData, TableDataTypes } from '../../interfaces/dataTypes';\r\nimport functionService from '../../services/functionService';\r\nimport shelfServices from '../../services/shelfServices';\r\nimport { eventTriggerOptions } from '../../utils/fixtures/functionOptions';\r\n\r\nconst headers = [\r\n  { header: 'Function name', key: 'name' },\r\n  {\r\n    header: 'Binding shelf',\r\n    key: 'shelfName',\r\n  },\r\n  {\r\n    header: 'Language',\r\n    key: 'language',\r\n  },\r\n  {\r\n    header: 'Trigger',\r\n    key: 'trigger',\r\n  },\r\n];\r\n\r\nconst Functions = () => {\r\n  const [filteredFunction, setFilteredFunctions] = useState<TableDataTypes[]>(\r\n    []\r\n  );\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState<boolean>();\r\n  const [selectedFunction, setSelectedFunction] =\r\n    useState<TableDataTypes | null>(null);\r\n  const [shelvesOptions, setShelvesOptions] = useState<ShelvesOptionTypes[]>(\r\n    []\r\n  );\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [functionsForTable, setFunctionsForTable] = useState<TableDataTypes[]>(\r\n    []\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getData = () => {\r\n    setIsLoading(true);\r\n    shelfServices\r\n      .getShelves()\r\n      .then((response) => {\r\n        setShelvesOptions(\r\n          response.data?.map((shelf: TableDataTypes) => ({\r\n            text: shelf.name,\r\n            value: shelf.id,\r\n          }))\r\n        );\r\n        functionService\r\n          .getFunctions()\r\n          .then((res) => {\r\n            const newData = res.data.map((item: TableDataTypes) => ({\r\n              name: item.name,\r\n              shelfName: response.data?.find(\r\n                (shelf: TableDataTypes) => item.shelfId === shelf.id\r\n              )?.name,\r\n              custom: item.custom ? 1 : 0,\r\n              language: item.language,\r\n              id: item.id,\r\n              trigger: eventTriggerOptions.find(\r\n                (event) => item.eventId === Number(event.value)\r\n              )?.text,\r\n            }));\r\n            setFunctionsForTable(newData);\r\n            setFilteredFunctions(newData);\r\n          })\r\n          .catch((err) => toast.error(err));\r\n      })\r\n      .catch((err) => toast.error(err))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const message =\r\n    functionsForTable.length === 0\r\n      ? 'No functions have been created yet'\r\n      : 'Sorry, no matching results found';\r\n\r\n  const handleOpenModal = () => {\r\n    setOpenModal(true);\r\n  };\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleDeleteModalClose = () => {\r\n    setOpenDeleteModal(false);\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setOpenEditModal(false);\r\n    setSelectedFunction(null);\r\n  };\r\n\r\n  const handleOpenDeleteModal = (data: TableDataTypes) => {\r\n    setOpenDeleteModal(true);\r\n    setSelectedFunction(data);\r\n  };\r\n  const handleOpenEditModal = (data: TableDataTypes) => {\r\n    setSelectedFunction(data);\r\n    setOpenEditModal(true);\r\n  };\r\n\r\n  const handleEdit = (newName: string) => {\r\n    const newData = filteredFunction.map((item) => {\r\n      if (item.id === selectedFunction?.id) {\r\n        return { ...item, name: newName };\r\n      }\r\n      return item;\r\n    });\r\n    setFilteredFunctions(newData);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedFunction)\r\n      functionService\r\n        .deleteFunction(selectedFunction?.id)\r\n        .then(() => toast.success('Function successfully deleted'))\r\n        .catch((err) => toast.error(err.response?.data?.message));\r\n    const newData = filteredFunction.filter(\r\n      (item) => item.id !== selectedFunction?.id\r\n    );\r\n    setFilteredFunctions(newData);\r\n    handleDeleteModalClose();\r\n  };\r\n\r\n  const actions: ActionType[] = [\r\n    { comp: Delete, handler: handleOpenDeleteModal, key: 1 },\r\n    { comp: Edit, handler: handleOpenEditModal, key: 2 },\r\n  ];\r\n\r\n  const onSubmit = (data: ShelfFormData) => {\r\n    const functionName = data.name;\r\n    if (selectedFunction) {\r\n      const payload = {\r\n        functionId: selectedFunction.id,\r\n        newName: functionName,\r\n      };\r\n      functionService\r\n        .renameFunction(payload)\r\n        .then((res) => {\r\n          toast.success(res.data.message);\r\n          handleEdit(functionName);\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data.message);\r\n        });\r\n    }\r\n    handleEditModalClose();\r\n  };\r\n\r\n  if (isLoading) return null;\r\n  return (\r\n    <>\r\n      {openModal && (\r\n        <FunctionModal\r\n          onCloseModal={handleModalClose}\r\n          data={shelvesOptions}\r\n          onGetData={getData}\r\n        />\r\n      )}\r\n      {openDeleteModal && (\r\n        <DeleteModal\r\n          title=\"Delete function\"\r\n          message={`Are you sure you want to delete '${selectedFunction?.name}'? This action will permanently delete this function!`}\r\n          onDelete={handleDelete}\r\n          onCloseModal={handleDeleteModalClose}\r\n        />\r\n      )}\r\n      {openEditModal && (\r\n        <ModifyModal\r\n          title=\"Edit name\"\r\n          onCloseModal={handleEditModalClose}\r\n          onSubmit={onSubmit}\r\n          buttonMessage=\"Rename \"\r\n          placeHolder=\"Edit name\"\r\n          defaultValue={selectedFunction?.name}\r\n        />\r\n      )}\r\n      <TableWrapper\r\n        title=\"Functions\"\r\n        description=\"Create or use predefined function on your shelves\"\r\n      >\r\n        <ActionsBox>\r\n          <SearchBar\r\n            placeholder=\"Search...\"\r\n            data={functionsForTable}\r\n            setData={setFilteredFunctions}\r\n            searchKey=\"name\"\r\n          />\r\n          <ButtonActionsBox>\r\n            <Button onClick={handleOpenModal} icon={<FaPlusCircle />}>\r\n              Create function\r\n            </Button>\r\n          </ButtonActionsBox>\r\n        </ActionsBox>\r\n        {functionsForTable.length === 0 || filteredFunction.length === 0 ? (\r\n          <Description>{message}</Description>\r\n        ) : (\r\n          <Table\r\n            setTableData={setFilteredFunctions}\r\n            data={filteredFunction}\r\n            headers={headers}\r\n            path=\"/dashboard/code/\"\r\n            actions={actions}\r\n          />\r\n        )}\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Functions;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\nimport { ProgressBarProps } from './progressBar.interfaces';\r\n\r\nexport const ProgressBarWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: ${theme.space.xs};\r\n  background: ${theme.colors.primary};\r\n  border: 1px solid ${theme.colors.white};\r\n`;\r\n\r\nexport const StyledProgress = styled.div<ProgressBarProps>`\r\n  align-self: flex-start;\r\n  background: ${theme.colors.white};\r\n  color: ${theme.colors.primary};\r\n  font-size: ${theme.fontSizes.xs};\r\n  text-align: center;\r\n  width: ${({ progress }) => `${progress}%`};\r\n`;\r\n","import { ProgressBarProps } from './progressBar.interfaces';\r\nimport { ProgressBarWrapper, StyledProgress } from './progressBar.styles';\r\n\r\nconst ProgressBar = ({ progress }: ProgressBarProps) => (\r\n  <ProgressBarWrapper>\r\n    <StyledProgress progress={progress}>{progress}%</StyledProgress>\r\n  </ProgressBarWrapper>\r\n);\r\n\r\nexport default ProgressBar;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../../theme';\r\nimport { DropZoneWrapperProps } from './uploadModal.interfaces';\r\n\r\nexport const DropZoneWrapper = styled.div<DropZoneWrapperProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  min-width: 400px;\r\n  min-height: 200px;\r\n  background: ${({ isDragOver }) =>\r\n    isDragOver ? `${theme.colors.secondary}55` : 'transparent'};\r\n  padding: 0 ${theme.space.md} ${theme.space.md};\r\n  margin-bottom: ${theme.space.md};\r\n\r\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='white' stroke-width='2' stroke-dasharray='10%2c 20' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\");\r\n  transition: all 500ms;\r\n`;\r\n\r\nexport const AddFilesLabel = styled.label`\r\n  border: 1px solid ${theme.colors.white};\r\n  border-radius: ${theme.space.sm};\r\n  padding: ${theme.space.sm} ${theme.space.md};\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nexport const AddFilesInput = styled.input`\r\n  position: absolute;\r\n  visibility: hidden;\r\n`;\r\n\r\nexport const AddFilesText = styled.p`\r\n  margin: 0;\r\n  margin-bottom: ${theme.space.sm};\r\n`;\r\n\r\nexport const AddedFilesList = styled.ul`\r\n  margin: ${theme.space.md} 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  list-style: none;\r\n  font-size: ${theme.fontSizes.md};\r\n  max-height: 220px;\r\n  max-width: 400px;\r\n  overflow: scroll;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const AddedFilesListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${theme.space.xs};\r\n  margin-bottom: ${theme.space.xs};\r\n  background-color: ${theme.colors.white};\r\n  color: ${theme.colors.primary};\r\n  height: 50px;\r\n\r\n  p {\r\n    margin: 0;\r\n    width: 300px;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 10px;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const AddedFilesListItemText = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const AddedFilesIconButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding-right: 5px;\r\n  color: ${theme.colors.primary};\r\n  cursor: pointer;\r\n`;\r\n\r\n// upload picture modal down\r\nexport const DropZoneWrapperImage = styled.div<DropZoneWrapperProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${({ isDragOver }) =>\r\n    isDragOver ? `${theme.colors.secondary}55` : 'transparent'};\r\n  transition: all 500ms;\r\n  margin-top: ${theme.space.md};\r\n  min-height: 250px;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  position: relative;\r\n  height: 200px;\r\n  max-width: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n`;\r\n\r\nexport const RemoveImageIconButton = styled.div`\r\n  position: absolute;\r\n  right: -11px;\r\n  top: -11px;\r\n  display: flex;\r\n  border-radius: 50px;\r\n  padding: 2px;\r\n  cursor: pointer;\r\n  background: ${theme.colors.primary};\r\n`;\r\n\r\nexport const ModalImage = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: contain;\r\n`;\r\n","import { ChangeEvent, DragEvent, useEffect, useState } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { RiFileZipLine } from 'react-icons/ri';\r\nimport { AiFillFile, AiOutlineFileImage } from 'react-icons/ai';\r\nimport { BsCloudUpload } from 'react-icons/bs';\r\nimport { BiText } from 'react-icons/bi';\r\nimport { MdVideoLibrary } from 'react-icons/md';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport fileServices from '../../../services/fileServices';\r\nimport { theme } from '../../../theme';\r\nimport { ModalButtonDivider } from '../../layout/layout.styles';\r\nimport ProgressBar from '../../progressBar';\r\nimport { Button } from '../../UI/button';\r\nimport { UploadModalProps } from './uploadModal.interfaces';\r\nimport {\r\n  AddedFilesIconButton,\r\n  AddedFilesList,\r\n  AddedFilesListItem,\r\n  AddedFilesListItemText,\r\n  AddFilesInput,\r\n  AddFilesLabel,\r\n  AddFilesText,\r\n  DropZoneWrapper,\r\n} from './uploadModal.styles';\r\n\r\nconst UploadModal = ({ onCloseModal, onGetData }: UploadModalProps) => {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [filesForUpload, setFilesForUpload] = useState<File[]>([]);\r\n  const [progress, setProgress] = useState(0);\r\n  const { shelfId, folderId } = useParams();\r\n  const [abortController] = useState<AbortController>(new AbortController());\r\n\r\n  const addFilesForUpload = (files: FileList) => {\r\n    const filesArray = Array.from(files);\r\n\r\n    filesArray.forEach((file) => {\r\n      const isFileAlreadyAdded = filesForUpload.some(\r\n        (addedFile) => addedFile.name === file.name\r\n      );\r\n\r\n      if (isFileAlreadyAdded) return;\r\n\r\n      setFilesForUpload((prevState: File[]) => [...prevState, file]);\r\n    });\r\n  };\r\n\r\n  const handleAddFiles = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) return;\r\n    addFilesForUpload(e.target.files);\r\n  };\r\n\r\n  const handleDragOver = (e: DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleDrop = (e: DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n\r\n    addFilesForUpload(e.dataTransfer.files);\r\n  };\r\n\r\n  const onUploadProgress = (progressEvent: ProgressEvent) => {\r\n    const percentage = Math.round(\r\n      (100 * progressEvent.loaded) / progressEvent.total\r\n    );\r\n    setProgress(percentage);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadShelfId = Number(shelfId);\r\n    const uploadFolderId = Number(folderId) || 0;\r\n\r\n    const formData = new FormData();\r\n\r\n    filesForUpload.forEach((file: File) => {\r\n      formData.append(file.name, file);\r\n    });\r\n\r\n    const options = {\r\n      headers: {\r\n        'Shelf-Header': 'File-request',\r\n      },\r\n      signal: abortController.signal,\r\n      onUploadProgress,\r\n    };\r\n\r\n    fileServices\r\n      .uploadFiles(uploadShelfId, uploadFolderId, formData, options)\r\n      .then((res) => {\r\n        toast.success(res.data?.message);\r\n        onGetData();\r\n        onCloseModal();\r\n      })\r\n      .catch((err) => {\r\n        setProgress(0);\r\n        toast.error(err.response?.data?.message);\r\n        onCloseModal();\r\n      });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    onCloseModal();\r\n  };\r\n\r\n  const cancelUploadRequest = () => {\r\n    abortController.abort();\r\n  };\r\n\r\n  useEffect(\r\n    () => () => {\r\n      cancelUploadRequest();\r\n    },\r\n    []\r\n  );\r\n\r\n  const itemType = (item: File) => {\r\n    const ext = item.name.substring(item.name.lastIndexOf('.'));\r\n    if (ext === '.jpg' || ext === '.jpeg' || ext === '.png') {\r\n      return <AiOutlineFileImage size={theme.size.sm} />;\r\n    }\r\n    if (ext === '.txt' || ext === '.pdf' || ext === '.doc') {\r\n      return <BiText size={theme.size.sm} />;\r\n    }\r\n    if (ext === '.mp3' || ext === '.mp4') {\r\n      return <MdVideoLibrary size={theme.size.sm} />;\r\n    }\r\n    if (ext === '.zip' || ext === '.7z' || ext === '.rar') {\r\n      return <RiFileZipLine size={theme.size.sm} />;\r\n    }\r\n    return <AiFillFile size={theme.size.sm} />;\r\n  };\r\n\r\n  const areFilesForUploadEmpty = filesForUpload.length === 0;\r\n\r\n  const ItemWithHandler = ({ file }: { file: File }) => {\r\n    const handleClick = () => {\r\n      const newFiles = filesForUpload.filter((f) => f.name !== file.name);\r\n      setFilesForUpload(newFiles);\r\n    };\r\n\r\n    return (\r\n      <AddedFilesListItem>\r\n        <AddedFilesListItemText>\r\n          {itemType(file)}\r\n          <p>{file.name}</p>\r\n        </AddedFilesListItemText>\r\n        <AddedFilesIconButton onClick={handleClick}>\r\n          <FaTimes />\r\n        </AddedFilesIconButton>\r\n      </AddedFilesListItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropZoneWrapper\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n        isDragOver={isDragOver}\r\n      >\r\n        {areFilesForUploadEmpty ? (\r\n          <>\r\n            <BsCloudUpload size={theme.space.xl} />\r\n            <AddFilesText>Drag and Drop</AddFilesText>\r\n            <AddFilesText>OR</AddFilesText>\r\n          </>\r\n        ) : (\r\n          <AddedFilesList>\r\n            {filesForUpload.map((file: File) => (\r\n              <ItemWithHandler key={file.name} file={file} />\r\n            ))}\r\n          </AddedFilesList>\r\n        )}\r\n\r\n        <AddFilesLabel>\r\n          Browse\r\n          <AddFilesInput type=\"file\" multiple onChange={handleAddFiles} />\r\n        </AddFilesLabel>\r\n      </DropZoneWrapper>\r\n\r\n      {progress > 0 && <ProgressBar progress={progress} />}\r\n\r\n      <ModalButtonDivider>\r\n        <Button variant=\"light\" onClick={handleCloseModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleUpload}\r\n          disabled={!filesForUpload.length || progress > 0}\r\n          variant=\"primaryBordered\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </ModalButtonDivider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  FaCloudDownloadAlt,\r\n  FaCloudUploadAlt,\r\n  FaPlusCircle,\r\n  FaTrash,\r\n} from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport { Table } from '../../components/table/table';\r\nimport {\r\n  FileDataType,\r\n  PathHistoryData,\r\n  TableDataTypes,\r\n} from '../../interfaces/dataTypes';\r\nimport Modal from '../../components/modal';\r\nimport UploadModal from '../../components/modal/uploadModal';\r\nimport { Button } from '../../components/UI/button';\r\nimport { Description } from '../../components/text/text-styles';\r\nimport Breadcrumbs from '../../components/breadcrumbs';\r\nimport { ButtonContainer } from '../../components/table/tableWrapper.styles';\r\nimport SearchBar from '../../components/UI/searchBar/searchBar';\r\nimport fileServices from '../../services/fileServices';\r\nimport folderService from '../../services/folderService';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport { ActionType, Edit } from '../../components/table/table.interfaces';\r\nimport { theme } from '../../theme';\r\nimport { ModifyModal } from '../../components/modal/modifyModal';\r\n\r\nconst headers = [\r\n  { header: 'Name', key: 'name' },\r\n  { header: 'Creation date', key: 'createdAt' },\r\n];\r\n\r\nconst Files = () => {\r\n  const [files, setFiles] = useState<FileDataType[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openUploadModal, setOpenUploadModal] = useState(false);\r\n  const [filesforTable, setFilesForTable] = useState<TableDataTypes[]>([]);\r\n  const [filteredFiles, setFilteredFiles] = useState<TableDataTypes[]>([]);\r\n  const [selectedRows, setSelectedRows] = useState<TableDataTypes[]>([]);\r\n  const [selectedFile, setSelectedFile] = useState<TableDataTypes | null>();\r\n  const { shelfId, folderId } = useParams();\r\n  const [pathHistory, setPathHistory] = useState<PathHistoryData[]>([]);\r\n  const message =\r\n    files?.length === 0\r\n      ? 'You dont have any files to display'\r\n      : 'Sorry, no matching results found';\r\n\r\n  const getData = () => {\r\n    setIsLoading(true);\r\n    if (folderId) {\r\n      folderService\r\n        .getFolderFiles(Number(folderId))\r\n        .then((res) => {\r\n          setPathHistory(res.data.breadCrumbs);\r\n          setFiles(res.data.shelfItems);\r\n        })\r\n        .catch((err) => toast.error(err))\r\n        .finally(() => setIsLoading(false));\r\n    } else\r\n      fileServices\r\n        .getShelfFiles(Number(shelfId))\r\n        .then((res) => {\r\n          setPathHistory(res.data.breadCrumbs);\r\n          setFiles(res.data.shelfItems);\r\n        })\r\n        .catch((err) => toast.error(err))\r\n        .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [folderId, shelfId]);\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      const newFiles = files.map((file) => ({\r\n        name: file.name,\r\n        createdAt: new Date(file.createdAt).toLocaleString('en-US'),\r\n        id: file.id,\r\n        folder: file.folder ? 1 : 0,\r\n      }));\r\n      setFilteredFiles(newFiles);\r\n      setFilesForTable(newFiles);\r\n    }\r\n  }, [files]);\r\n\r\n  const getSelectedRows = (selectedRowsData: TableDataTypes[]) => {\r\n    setSelectedRows(selectedRowsData);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const fileIds: number[] = [];\r\n    const folderIds: number[] = [];\r\n    selectedRows.forEach((item) => {\r\n      if (item.folder) folderIds.push(item.id);\r\n      else {\r\n        fileIds.push(item.id);\r\n      }\r\n    });\r\n\r\n    if (fileIds.length !== 0)\r\n      fileServices\r\n        .softDeleteFile(fileIds)\r\n        .then(() => {\r\n          toast.info('Files moved to trash');\r\n          getData();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n\r\n    if (folderIds.length !== 0)\r\n      folderService\r\n        .softDeleteFolder(folderIds)\r\n        .then(() => {\r\n          toast.info('Folders moved to trash');\r\n          getData();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n  };\r\n\r\n  const handleEdit = (newName: string) => {\r\n    const newFiles = files.map((item) => {\r\n      if (item.id === selectedFile?.id) {\r\n        if (!selectedFile.folder) {\r\n          return { ...item, name: newName };\r\n        }\r\n        return { ...item, name: newName };\r\n      }\r\n      return item;\r\n    });\r\n    setFiles(newFiles);\r\n  };\r\n\r\n  const handleCreateFolder = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (selectedRows.length === 0) return;\r\n    const fileIds: number[] = [];\r\n    const folderIds: number[] = [];\r\n    selectedRows.forEach((item) => {\r\n      if (item.folder) folderIds.push(item.id);\r\n      else {\r\n        fileIds.push(item.id);\r\n      }\r\n    });\r\n    if (fileIds.length === 1 && folderIds?.length === 0) {\r\n      fileServices\r\n        .downloadSingleFile(fileIds[0])\r\n        .then((res) => {\r\n          const url = window.URL.createObjectURL(new Blob([res.data]));\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.setAttribute('download', selectedRows[0].name);\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          link.remove();\r\n        })\r\n        .catch(() => {\r\n          toast.error('Failed to download');\r\n        });\r\n    } else {\r\n      fileServices\r\n        .downloadFiles(fileIds.join(), folderIds.join())\r\n        .then((res) => {\r\n          const url = window.URL.createObjectURL(new Blob([res.data]));\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.setAttribute('download', 'shelf.zip');\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          link.remove();\r\n        })\r\n        .catch(() => {\r\n          toast.error('Failed to download');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleOpenUploadModal = () => {\r\n    setOpenUploadModal(true);\r\n  };\r\n  const handleCloseUploadModal = () => {\r\n    setOpenUploadModal(false);\r\n  };\r\n  const handleModalClose = () => {\r\n    setSelectedFile(null);\r\n    setOpenModal(false);\r\n  };\r\n  const handleOpenEditModal = (file: TableDataTypes) => {\r\n    setSelectedFile(file);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  if (isLoading) return null;\r\n\r\n  const actions: ActionType[] = [\r\n    { comp: Edit, handler: handleOpenEditModal, key: 1 },\r\n  ];\r\n\r\n  const convertedShelfId = Number(shelfId);\r\n  const convertedFolderId = Number(folderId);\r\n\r\n  const onSubmit = (data: { name: string }) => {\r\n    const newName = data.name;\r\n    if (selectedFile) {\r\n      if (!selectedFile?.folder) {\r\n        let extension = '';\r\n        if (selectedFile.name.includes('.'))\r\n          extension = selectedFile.name.substring(\r\n            selectedFile.name.lastIndexOf('.')\r\n          );\r\n        fileServices\r\n          .editFile({ fileId: selectedFile.id, fileName: newName })\r\n          .then(() => {\r\n            handleEdit(newName + extension);\r\n            toast.success('File name updated');\r\n          })\r\n          .catch((err) => {\r\n            toast.error(err.response?.data?.message);\r\n          });\r\n      } else if (selectedFile?.folder) {\r\n        folderService\r\n          .editFolder({ folderId: selectedFile.id, folderName: newName })\r\n          .then(() => {\r\n            handleEdit(newName);\r\n            toast.success('Folder name updated');\r\n          })\r\n          .catch((err) => {\r\n            toast.error(err.response?.data?.message);\r\n          });\r\n      }\r\n    } else if (folderId) {\r\n      folderService\r\n        .createFolder(newName, convertedShelfId, convertedFolderId)\r\n        .then(() => {\r\n          getData();\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    } else if (!folderId) {\r\n      folderService\r\n        .createFolder(newName, convertedShelfId)\r\n        .then(() => getData())\r\n        .catch((err) => {\r\n          toast.error(err.response?.data?.message);\r\n        });\r\n    }\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {openModal && (\r\n        <ModifyModal\r\n          title={selectedFile ? 'Edit name' : 'Create folder'}\r\n          onCloseModal={handleModalClose}\r\n          onSubmit={onSubmit}\r\n          buttonMessage={selectedFile ? 'Rename ' : 'Create '}\r\n          placeHolder={selectedFile ? 'Edit name' : 'Untilted folder'}\r\n          defaultValue={selectedFile?.name}\r\n        />\r\n      )}\r\n      {openUploadModal && (\r\n        <Modal\r\n          title=\"Upload files\"\r\n          onCloseModal={handleCloseUploadModal}\r\n          closeIcon\r\n          background={theme.colors.primary}\r\n          color={theme.colors.white}\r\n        >\r\n          <UploadModal\r\n            onCloseModal={handleCloseUploadModal}\r\n            onGetData={getData}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      <TableWrapper>\r\n        <Breadcrumbs pathHistory={pathHistory} />\r\n        <SearchBar\r\n          placeholder=\"Search...\"\r\n          data={filesforTable}\r\n          setData={setFilteredFiles}\r\n          searchKey=\"name\"\r\n        />\r\n        <ButtonContainer>\r\n          <Button onClick={handleCreateFolder} icon={<FaPlusCircle />}>\r\n            Create folder\r\n          </Button>\r\n          <Button icon={<FaCloudDownloadAlt />} onClick={handleDownload}>\r\n            Download\r\n          </Button>\r\n          <Button onClick={handleOpenUploadModal} icon={<FaCloudUploadAlt />}>\r\n            Upload\r\n          </Button>\r\n          <Button icon={<FaTrash />} onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </ButtonContainer>\r\n        {(files && files.length === 0) || filteredFiles.length === 0 ? (\r\n          <Description>{message}</Description>\r\n        ) : (\r\n          <Table\r\n            mulitSelect\r\n            setTableData={setFilteredFiles}\r\n            data={filteredFiles}\r\n            headers={headers}\r\n            path=\"folders/\"\r\n            getSelectedRows={getSelectedRows}\r\n            actions={actions}\r\n          />\r\n        )}\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import styled from 'styled-components';\r\nimport { theme } from '../../theme';\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    flex-direction: column;\r\n    height: auto;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const ProfileLeft = styled.div`\r\n  background-color: ${theme.colors.primary};\r\n  padding: ${theme.space.md};\r\n  border-radius: ${theme.space.lg} 0 0 ${theme.space.lg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  width: 50%;\r\n  min-width: 300px;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    border-radius: ${theme.space.lg} ${theme.space.lg} 0 0;\r\n  }\r\n`;\r\n\r\nexport const ProfileRight = styled.div`\r\n  padding: ${theme.space.md};\r\n  border: 1px solid ${theme.colors.secondary};\r\n  border-radius: 0 ${theme.space.lg} ${theme.space.lg} 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  min-width: 300px;\r\n\r\n  @media (max-width: ${theme.breakpoints.sm}) {\r\n    border-radius: 0 0 ${theme.space.lg} ${theme.space.lg};\r\n    padding: ${theme.space.sm};\r\n  }\r\n`;\r\n\r\nexport const ProfileImageContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ProfileImage = styled.img`\r\n  width: ${theme.space.xxl};\r\n  height: ${theme.space.xxl};\r\n  border-radius: 999px;\r\n  border: 3px solid white;\r\n`;\r\n\r\nexport const EditImageContainer = styled.div`\r\n  position: absolute;\r\n  right: -20px;\r\n  bottom: -5px;\r\n`;\r\n\r\nexport const About = styled.div`\r\n  margin-top: ${theme.space.lg};\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { ChangeEvent, DragEvent, useState } from 'react';\r\nimport { BsCloudUpload } from 'react-icons/bs';\r\nimport { RiCloseCircleFill } from 'react-icons/ri';\r\nimport { toast } from 'react-toastify';\r\nimport fileServices from '../../services/fileServices';\r\nimport { theme } from '../../theme';\r\nimport { ButtonWrapper } from '../profile/profile.styles';\r\nimport { Button } from '../UI/button';\r\nimport {\r\n  AddFilesInput,\r\n  AddFilesLabel,\r\n  DropZoneWrapperImage,\r\n  ImageWrapper,\r\n  ModalImage,\r\n  RemoveImageIconButton,\r\n} from './uploadModal/uploadModal.styles';\r\n\r\ninterface UploadPictureModalProps {\r\n  onCloseModal: () => void;\r\n  id: number;\r\n  onUpdatePicture: (url: string) => void;\r\n}\r\n\r\nconst UploadPictureModal = ({\r\n  onCloseModal,\r\n  id,\r\n  onUpdatePicture,\r\n}: UploadPictureModalProps) => {\r\n  const [image, setImage] = useState<File | null>(null);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\r\n    './assets/images/profile.jpg'\r\n  );\r\n  const [abortController] = useState<AbortController>(new AbortController());\r\n\r\n  const handleCloseModal = () => onCloseModal();\r\n\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { files } = e.target;\r\n\r\n    if (files?.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (files) {\r\n      const extension = files[0].name\r\n        .substring(files[0].name.lastIndexOf('.'))\r\n        .toLowerCase();\r\n      if (\r\n        extension !== '.jpg' &&\r\n        extension !== '.jpeg' &&\r\n        extension !== '.png'\r\n      ) {\r\n        toast.error('You must select a file of type .jpg, .jpeg or .png');\r\n        return;\r\n      }\r\n      setImage(files[0]);\r\n      setPreviewImage(URL.createObjectURL(files[0]));\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: DragEvent<HTMLDivElement>): void => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n  const handleDragLeave = (e: DragEvent<HTMLDivElement>): void => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n  const handleDrop = (e: DragEvent<HTMLDivElement>): void => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    setImage(e.dataTransfer.files[0]);\r\n    setPreviewImage(URL.createObjectURL(e.dataTransfer.files[0]));\r\n  };\r\n  const handleRemoveImage = () => {\r\n    setImage(null);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!image) {\r\n      toast.error('You must select an image');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    const options = {\r\n      headers: {\r\n        'Shelf-Header': 'File-request',\r\n      },\r\n      signal: abortController.signal,\r\n    };\r\n\r\n    if (image) {\r\n      formData.append('image', image);\r\n    }\r\n\r\n    fileServices\r\n      .uploadProfilePicture(id, formData, options)\r\n      .then((res) => {\r\n        toast.success(res.data.message);\r\n        onUpdatePicture(URL.createObjectURL(image));\r\n        onCloseModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response?.data?.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropZoneWrapperImage\r\n        isDragOver={isDragOver}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n      >\r\n        {image ? (\r\n          <ImageWrapper>\r\n            <RemoveImageIconButton onClick={handleRemoveImage}>\r\n              <RiCloseCircleFill color={theme.colors.white} size=\"23px\" />\r\n            </RemoveImageIconButton>\r\n            <ModalImage src={previewImage} alt=\"profileImage.jpg\" />\r\n          </ImageWrapper>\r\n        ) : (\r\n          <ImageWrapper>\r\n            <BsCloudUpload size={theme.space.xl} />\r\n            Drag and Drop <br /> or <br />\r\n            <AddFilesLabel>\r\n              Browse\r\n              <AddFilesInput type=\"file\" onChange={handleFileChange} />\r\n            </AddFilesLabel>\r\n          </ImageWrapper>\r\n        )}\r\n      </DropZoneWrapperImage>\r\n\r\n      <ButtonWrapper>\r\n        <Button onClick={handleCloseModal} type=\"button\" variant=\"light\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleUpload} type=\"button\" variant=\"primaryBordered\">\r\n          Upload\r\n        </Button>\r\n      </ButtonWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadPictureModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { AiFillEdit } from 'react-icons/ai';\r\nimport { toast } from 'react-toastify';\r\nimport { Header } from '../../components';\r\nimport { Base, InputFieldWrapper } from '../../components/form/form-styles';\r\nimport { ProfilePicture } from '../../components/header/header-styles';\r\nimport { Container, Wrapper } from '../../components/layout/layout.styles';\r\nimport Modal from '../../components/modal';\r\nimport UploadPictureModal from '../../components/modal/uploadPictureModal';\r\nimport {\r\n  ProfileLeft,\r\n  ProfileWrapper,\r\n  EditImageContainer,\r\n  ProfileImageContainer,\r\n  ProfileRight,\r\n  ButtonWrapper,\r\n} from '../../components/profile/profile.styles';\r\nimport { H2 } from '../../components/text/text-styles';\r\nimport { Button } from '../../components/UI/button';\r\nimport { InputField } from '../../components/UI/input/InputField';\r\nimport {\r\n  ManageProfileFieldConfig,\r\n  ManageProfileFormData,\r\n} from '../../interfaces/dataTypes';\r\nimport fileServices from '../../services/fileServices';\r\nimport userServices from '../../services/userServices';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { setUser } from '../../store/userReducer';\r\nimport { theme } from '../../theme';\r\nimport { config } from '../../utils/validation/config/manageProfileValidationConfig';\r\nimport PasswordRequirementsTooltip from '../register/passwordRequirementsTooltip';\r\n\r\nconst passwordDefault = 'passwordD@123';\r\n\r\nconst Profile = () => {\r\n  const user = useAppSelector((state) => state.user.user);\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<ManageProfileFormData>();\r\n\r\n  const manageProfileFieldConfig: ManageProfileFieldConfig[] = config(watch);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isPasswordTooltipVisible, setIsPasswordTooltipVisible] =\r\n    useState(false);\r\n  const [imgUrl, setImgUrl] = useState<string>(\r\n    fileServices.getProfilePicture(user?.id)\r\n  );\r\n\r\n  const resetPassword = () => {\r\n    setValue('password', passwordDefault, { shouldValidate: true });\r\n    setValue('confirmPassword', passwordDefault, { shouldValidate: true });\r\n  };\r\n  const resetData = () => {\r\n    if (user) {\r\n      setValue('firstName', user.firstName, { shouldValidate: true });\r\n      setValue('lastName', user.lastName, { shouldValidate: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setValue('email', user.email, { shouldValidate: true });\r\n      resetData();\r\n      resetPassword();\r\n      setImgUrl(fileServices.getProfilePicture(user.id));\r\n    }\r\n  }, [user]);\r\n\r\n  const handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'password') {\r\n      setIsPasswordTooltipVisible(true);\r\n    }\r\n  };\r\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'password') {\r\n      setIsPasswordTooltipVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleNotDisabled = () => {\r\n    setIsDisabled(!isDisabled);\r\n    setValue('password', '', { shouldValidate: true });\r\n    setValue('confirmPassword', '', { shouldValidate: true });\r\n  };\r\n\r\n  const handleCancelEditProfile = () => {\r\n    resetPassword();\r\n    resetData();\r\n    setIsDisabled(!isDisabled);\r\n  };\r\n  const handleOpenModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const onlySpaces = (str: string) => /^\\s*$/.test(str); // checks if user input a string of only space characters\r\n\r\n  const onSubmit = (data: ManageProfileFormData) => {\r\n    if (user) {\r\n      let newPassword: string | null = data.password.trim();\r\n      let newFirstName: string | null = data.firstName.trim();\r\n      let newLastName: string | null = data.lastName.trim();\r\n\r\n      if (\r\n        newFirstName === user.firstName &&\r\n        newLastName === user.lastName &&\r\n        newPassword === ''\r\n      ) {\r\n        handleCancelEditProfile();\r\n        return;\r\n      }\r\n\r\n      if (newPassword === '' || onlySpaces(newPassword)) {\r\n        newPassword = null;\r\n      }\r\n\r\n      if (\r\n        newFirstName === user?.firstName ||\r\n        newFirstName === '' ||\r\n        onlySpaces(newFirstName)\r\n      ) {\r\n        newFirstName = null;\r\n      }\r\n\r\n      if (\r\n        newLastName === user?.lastName ||\r\n        newLastName === '' ||\r\n        onlySpaces(newLastName)\r\n      ) {\r\n        newLastName = null;\r\n      }\r\n\r\n      userServices\r\n        .updateProfile(\r\n          {\r\n            password: newPassword,\r\n            firstName: newFirstName,\r\n            lastName: newLastName,\r\n          },\r\n          user.id\r\n        )\r\n        .then((res) => {\r\n          const fn =\r\n            res.data.firstName === null ? user.firstName : res.data.firstName;\r\n          const ln =\r\n            res.data.lastName === null ? user.lastName : res.data.lastName;\r\n          setValue('firstName', fn);\r\n          setValue('lastName', ln);\r\n\r\n          dispatch(\r\n            setUser({\r\n              ...user,\r\n              firstName: fn,\r\n              lastName: ln,\r\n            })\r\n          );\r\n\r\n          toast.success('User successfully updated');\r\n        })\r\n        .catch((err) => {\r\n          toast.success(err.response?.data?.message);\r\n        })\r\n        .finally(() => {\r\n          setIsDisabled(true);\r\n          resetPassword();\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpdateImage = (url: string) => {\r\n    setImgUrl(url);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && user && (\r\n        <Modal\r\n          onCloseModal={handleCloseModal}\r\n          background={theme.colors.primary}\r\n          color={theme.colors.white}\r\n        >\r\n          <UploadPictureModal\r\n            onCloseModal={handleCloseModal}\r\n            id={user.id}\r\n            onUpdatePicture={handleUpdateImage}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Header position=\"absolute\" />\r\n      <Wrapper>\r\n        <Container>\r\n          <ProfileWrapper>\r\n            <ProfileLeft>\r\n              <ProfileImageContainer onClick={handleOpenModal}>\r\n                {imgUrl && (\r\n                  <ProfilePicture imgUrl={imgUrl} size={theme.space.xxl} />\r\n                )}\r\n                <EditImageContainer>\r\n                  <AiFillEdit size={theme.space.lg} />\r\n                </EditImageContainer>\r\n              </ProfileImageContainer>\r\n            </ProfileLeft>\r\n            <ProfileRight>\r\n              <Base onSubmit={handleSubmit(onSubmit)}>\r\n                <H2>My Profile</H2>\r\n                <InputFieldWrapper>\r\n                  {manageProfileFieldConfig.map(\r\n                    (fieldConfig: ManageProfileFieldConfig) => (\r\n                      <InputField\r\n                        key={fieldConfig.name}\r\n                        disabled={\r\n                          fieldConfig.name === 'email' ? true : isDisabled\r\n                        }\r\n                        placeholder={fieldConfig.placeholder}\r\n                        error={errors[fieldConfig.name]}\r\n                        type={fieldConfig.type}\r\n                        {...register(fieldConfig.name, fieldConfig.validations)}\r\n                        onFocus={handleInputFocus}\r\n                        onBlur={handleInputBlur}\r\n                      />\r\n                    )\r\n                  )}\r\n                  {isPasswordTooltipVisible && <PasswordRequirementsTooltip />}\r\n                </InputFieldWrapper>\r\n\r\n                <ButtonWrapper>\r\n                  {isDisabled && (\r\n                    <Button type=\"button\" onClick={handleNotDisabled}>\r\n                      Edit\r\n                    </Button>\r\n                  )}\r\n                  {!isDisabled && <Button type=\"submit\">Update</Button>}\r\n                  {!isDisabled && (\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"secondary\"\r\n                      onClick={handleCancelEditProfile}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  )}\r\n                </ButtonWrapper>\r\n              </Base>\r\n            </ProfileRight>\r\n          </ProfileWrapper>\r\n        </Container>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { UseFormWatch } from 'react-hook-form';\r\nimport {\r\n  ManageProfileFieldConfig,\r\n  ManageProfileFormData,\r\n} from '../../../interfaces/dataTypes';\r\nimport { passwordRegex } from '../regex';\r\n\r\nexport const config = (\r\n  watch: UseFormWatch<ManageProfileFormData>\r\n): ManageProfileFieldConfig[] => [\r\n  {\r\n    type: 'text',\r\n    placeholder: 'Email',\r\n    name: 'email',\r\n    validations: {},\r\n  },\r\n\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    name: 'password',\r\n    validations: {\r\n      minLength: {\r\n        value: 8,\r\n        message: 'Password must have at least 8 characters',\r\n      },\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'Password can not be longer than 50 characters',\r\n      },\r\n      pattern: {\r\n        value: passwordRegex,\r\n        message: 'Invalid password format',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    type: 'password',\r\n    placeholder: 'Confirm Password',\r\n    name: 'confirmPassword',\r\n    validations: {\r\n      validate: (value: string) =>\r\n        value === watch('password') || 'Passwords must match',\r\n    },\r\n  },\r\n  {\r\n    type: 'text',\r\n    placeholder: 'First Name',\r\n    name: 'firstName',\r\n    validations: {\r\n      required: 'This field is required',\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'First name can not be longer than 50 characters',\r\n      },\r\n      validate: (value: string) =>\r\n        !/^\\s*$/.test(value) || 'You cannot leave only empty spaces ',\r\n    },\r\n  },\r\n  {\r\n    type: 'text',\r\n    placeholder: 'Last Name',\r\n    name: 'lastName',\r\n    validations: {\r\n      required: 'This field is required',\r\n      maxLength: {\r\n        value: 50,\r\n        message: 'Last name can not be longer than 50 characters',\r\n      },\r\n      validate: (value: string) =>\r\n        !/^\\s*$/.test(value) || 'You cannot leave only empty spaces ',\r\n    },\r\n  },\r\n];\r\n","import instance from '../api/axiosInstance';\r\n\r\nconst API_URL_ACCOUNT = '/account';\r\n\r\nconst getUsers = () => instance.get(`${API_URL_ACCOUNT}/admin?size=20`);\r\n\r\nconst deleteUser = (userId: number) =>\r\n  instance.delete(`${API_URL_ACCOUNT}/admin/${userId}`);\r\n\r\nconst changeUserRole = (userId: number, roleId: number) =>\r\n  instance.put(`${API_URL_ACCOUNT}/admin/grant/${userId}`, { roleId });\r\n\r\nexport default {\r\n  getUsers,\r\n  deleteUser,\r\n  changeUserRole,\r\n};\r\n","import { toast } from 'react-toastify';\r\nimport { TableDataTypes } from '../../interfaces/dataTypes';\r\nimport adminServices from '../../services/adminServices';\r\nimport { ModalButtonDivider } from '../layout/layout.styles';\r\nimport { Description } from '../text/text-styles';\r\nimport { Button } from '../UI/button';\r\nimport { DeleteModalBody } from './modal.styles';\r\n\r\nconst DeleteUserModal = ({\r\n  onCloseModal,\r\n  onDeleteUser,\r\n  user,\r\n}: {\r\n  onCloseModal: () => void;\r\n  onDeleteUser: () => void;\r\n  user: TableDataTypes | null;\r\n}) => {\r\n  const handleCloseModal = () => {\r\n    onCloseModal();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (!user) return;\r\n    adminServices\r\n      .deleteUser(user?.id)\r\n      .then(() => {\r\n        onDeleteUser();\r\n        onCloseModal();\r\n      })\r\n      .catch((err) => toast.error(err?.response?.data?.message));\r\n  };\r\n\r\n  return (\r\n    <DeleteModalBody>\r\n      <Description>\r\n        {`Are you sure you want to delete user '${user?.name}'? This action is permanent!`}\r\n      </Description>\r\n      <ModalButtonDivider>\r\n        <Button variant=\"lightBordered\" onClick={handleCloseModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleDelete}>Delete</Button>\r\n      </ModalButtonDivider>\r\n    </DeleteModalBody>\r\n  );\r\n};\r\n\r\nexport default DeleteUserModal;\r\n","import { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\nimport { TableDataTypes } from '../../interfaces/dataTypes';\r\nimport adminServices from '../../services/adminServices';\r\nimport { Base } from '../form/form-styles';\r\nimport { ModalButtonDivider } from '../layout/layout.styles';\r\nimport { Button } from '../UI/button';\r\nimport { Select } from '../UI/select';\r\n\r\nconst options = [\r\n  { value: '2', text: 'Moderator' },\r\n  { value: '3', text: 'User' },\r\n];\r\n\r\nconst ChangeUserRoleModal = ({\r\n  onCloseModal,\r\n  onRoleChange,\r\n  user,\r\n}: {\r\n  onCloseModal: () => void;\r\n  onRoleChange: () => void;\r\n  user: TableDataTypes | null;\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data: { role: string }) => {\r\n    if (!user) return;\r\n    const roleId = Number(data.role);\r\n    adminServices\r\n      .changeUserRole(user?.id, roleId)\r\n      .then(() => {\r\n        onRoleChange();\r\n        onCloseModal();\r\n      })\r\n      .catch((err) => toast.error(err?.response?.data?.message));\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    onCloseModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Base onSubmit={handleSubmit(onSubmit)}>\r\n        <Select\r\n          optionsData={options}\r\n          selectName=\"role\"\r\n          error={errors.role}\r\n          register={register}\r\n          setValue={setValue}\r\n          placeHolder=\"Choose new role\"\r\n          variant=\"secondary\"\r\n        />\r\n        <ModalButtonDivider>\r\n          <Button variant=\"lightBordered\" onClick={handleCloseModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button>Change</Button>\r\n        </ModalButtonDivider>\r\n      </Base>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeUserRoleModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Table } from '../../components/table/table';\r\nimport { TableDataTypes, UserDataType } from '../../interfaces/dataTypes';\r\nimport Modal from '../../components/modal';\r\nimport { Description } from '../../components/text/text-styles';\r\nimport SearchBar from '../../components/UI/searchBar/searchBar';\r\nimport { ActionsBox } from '../../components/table/tableWrapper.styles';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport {\r\n  ActionType,\r\n  Delete,\r\n  Edit,\r\n} from '../../components/table/table.interfaces';\r\nimport DeleteUserModal from '../../components/modal/deleteUserModal';\r\nimport ChangeUserRoleModal from '../../components/modal/changeUserRoleModal';\r\nimport adminServices from '../../services/adminServices';\r\n\r\nconst headers = [\r\n  { header: 'Name', key: 'name' },\r\n  { header: 'Email', key: 'email' },\r\n  { header: 'Role', key: 'role' },\r\n];\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState<UserDataType[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<TableDataTypes | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [usersForTable, setUsersForTable] = useState<TableDataTypes[]>([]);\r\n  const [filteredUsers, setFilteredUsers] = useState<TableDataTypes[]>([]);\r\n\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState<boolean>(false);\r\n  const [editModalOpen, setEditModalOpen] = useState<boolean>(false);\r\n\r\n  const getData = () => {\r\n    setIsLoading(true);\r\n    adminServices\r\n      .getUsers()\r\n      .then((res) => {\r\n        setUsers(res.data.users);\r\n      })\r\n      .catch((err) => toast.error(err))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const newUsers = users.map((user) => ({\r\n      name: `${user.firstName} ${user.lastName}`,\r\n      email: user.email,\r\n      role: user.role.name,\r\n      id: user.id,\r\n    }));\r\n\r\n    setUsersForTable(newUsers);\r\n    setFilteredUsers(newUsers);\r\n  }, [users]);\r\n\r\n  const handleModalClose = () => {\r\n    setDeleteModalOpen(false);\r\n    setEditModalOpen(false);\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleOpenDeleteModal = (user: TableDataTypes) => {\r\n    setDeleteModalOpen(true);\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleOpenEditModal = (user: TableDataTypes) => {\r\n    setEditModalOpen(true);\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    getData();\r\n  };\r\n\r\n  const handleRoleChange = () => {\r\n    getData();\r\n  };\r\n\r\n  const actions: ActionType[] = [\r\n    { comp: Delete, handler: handleOpenDeleteModal, key: 1 },\r\n    { comp: Edit, handler: handleOpenEditModal, key: 2 },\r\n  ];\r\n\r\n  const message =\r\n    users.length === 0\r\n      ? 'No users have been registered yet'\r\n      : 'Sorry, no matching results found';\r\n\r\n  if (isLoading) return null;\r\n\r\n  return (\r\n    <>\r\n      {deleteModalOpen && (\r\n        <Modal title=\"Delete user\" onCloseModal={handleModalClose}>\r\n          <DeleteUserModal\r\n            onDeleteUser={handleDelete}\r\n            onCloseModal={handleModalClose}\r\n            user={selectedUser}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {editModalOpen && (\r\n        <Modal title=\"Change role\" onCloseModal={handleModalClose}>\r\n          <ChangeUserRoleModal\r\n            onRoleChange={handleRoleChange}\r\n            onCloseModal={handleModalClose}\r\n            user={selectedUser}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <TableWrapper title=\"Users\" description=\"Manage users.\">\r\n        <ActionsBox>\r\n          <SearchBar\r\n            placeholder=\"Search...\"\r\n            data={usersForTable}\r\n            setData={setFilteredUsers}\r\n            searchKey=\"name\"\r\n          />\r\n        </ActionsBox>\r\n        {users.length === 0 || filteredUsers.length === 0 ? (\r\n          <Description>{message}</Description>\r\n        ) : (\r\n          <Table\r\n            setTableData={setFilteredUsers}\r\n            data={filteredUsers}\r\n            headers={headers}\r\n            path=\"/\"\r\n            actions={actions}\r\n          />\r\n        )}\r\n      </TableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-java';\r\nimport 'ace-builds/src-noconflict/mode-csharp';\r\nimport 'ace-builds/src-noconflict/theme-github';\r\nimport 'ace-builds/webpack-resolver';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { FaCog, FaSave } from 'react-icons/fa';\r\nimport TableWrapper from '../../components/table/TableWrapper';\r\nimport { Button } from '../../components/UI/button';\r\nimport { Error, PlainText } from '../../components/text/text-styles';\r\nimport {\r\n  FunctionEditorWrapper,\r\n  FunctionInfo,\r\n  FunctionResultWrapper,\r\n  FunctionWrapper,\r\n} from '../../components/layout/layout.styles';\r\nimport { ButtonContainer } from '../../components/table/tableWrapper.styles';\r\nimport functionService from '../../services/functionService';\r\nimport { FunctionData } from '../../interfaces/dataTypes';\r\n\r\nconst Code = () => {\r\n  const [code, setCode] = useState('');\r\n  const [functionData, setFunctionData] = useState<FunctionData | null>(null);\r\n  const [isSaveDisabled, setIsSaveDisabled] = useState(false);\r\n  const [isExecuteDisabled, setIsExecuteDisabled] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [executionResult, setExecutionResult] = useState('');\r\n\r\n  const { functionId } = useParams();\r\n\r\n  const isFunctionExecutableSynchronously = functionData?.eventId === 7;\r\n\r\n  const getData = () => {\r\n    functionService\r\n      .getFunction(Number(functionId))\r\n      .then((res) => {\r\n        setFunctionData(res.data);\r\n        setCode(res.data.code);\r\n      })\r\n      .catch((err) => toast.error(err.response?.data?.message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [functionId]);\r\n\r\n  const handleEditorValueChange = (newValue: string) => {\r\n    if (isSaveDisabled) setIsSaveDisabled(false);\r\n    if (!isExecuteDisabled) setIsExecuteDisabled(true);\r\n    setCode(newValue);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsSaveDisabled(true);\r\n    if (isExecuteDisabled) setIsExecuteDisabled(false);\r\n\r\n    functionService\r\n      .saveFunction(Number(functionId), code)\r\n      .then((res) => {\r\n        toast.success(res.data?.message);\r\n        setError('');\r\n        setExecutionResult('');\r\n      })\r\n      .catch((err) => {\r\n        setError(err.response?.data?.message);\r\n        setExecutionResult('');\r\n        setIsSaveDisabled(false);\r\n        setIsExecuteDisabled(true);\r\n      });\r\n  };\r\n\r\n  const handleExecute = () => {\r\n    functionService\r\n      .executeFunction(functionData!.language, Number(functionId))\r\n      .then((res) => {\r\n        setExecutionResult(res.data);\r\n        setError('');\r\n      })\r\n      .catch((err) => toast.error(err?.data?.message));\r\n  };\r\n\r\n  return (\r\n    <TableWrapper title=\"Function\" description=\"Write your code\">\r\n      <ButtonContainer>\r\n        <Button\r\n          icon={<FaSave />}\r\n          onClick={handleSave}\r\n          disabled={isSaveDisabled}\r\n        >\r\n          Save\r\n        </Button>\r\n        {isFunctionExecutableSynchronously && (\r\n          <Button\r\n            icon={<FaCog />}\r\n            onClick={handleExecute}\r\n            disabled={isExecuteDisabled}\r\n          >\r\n            Execute\r\n          </Button>\r\n        )}\r\n      </ButtonContainer>\r\n      <FunctionWrapper>\r\n        <FunctionEditorWrapper>\r\n          <AceEditor\r\n            mode={functionData?.language}\r\n            theme=\"github\"\r\n            value={code}\r\n            onChange={handleEditorValueChange}\r\n            name=\"CODE_EDITOR\"\r\n            width=\"100%\"\r\n          />\r\n        </FunctionEditorWrapper>\r\n        {isFunctionExecutableSynchronously && (\r\n          <FunctionResultWrapper>\r\n            <PlainText>\r\n              <strong>Execution result:</strong>\r\n            </PlainText>\r\n            {error ? (\r\n              <Error>{error}</Error>\r\n            ) : (\r\n              <PlainText>{executionResult}</PlainText>\r\n            )}\r\n          </FunctionResultWrapper>\r\n        )}\r\n        <FunctionInfo>\r\n          <div>\r\n            <PlainText>\r\n              <strong>Name:</strong>\r\n            </PlainText>\r\n            <PlainText>\r\n              <strong>Language:</strong>\r\n            </PlainText>\r\n            <PlainText>\r\n              <strong>Shelf:</strong>\r\n            </PlainText>\r\n            <PlainText>\r\n              <strong>Trigger:</strong>\r\n            </PlainText>\r\n          </div>\r\n          <div>\r\n            <PlainText>{functionData?.functionName}</PlainText>\r\n            <PlainText>{functionData?.language}</PlainText>\r\n            <PlainText>{functionData?.shelfName}</PlainText>\r\n            <PlainText>{functionData?.eventName}</PlainText>\r\n          </div>\r\n        </FunctionInfo>\r\n      </FunctionWrapper>\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { useRoutes } from 'react-router-dom';\r\nimport { Role } from '../../utils/enums/roles';\r\nimport { Routes } from '../../utils/enums/routes';\r\nimport { RouteProps } from '../../interfaces/route';\r\nimport Dashboard from '../../pages/dashboard';\r\nimport ForgotPassword from '../../pages/forgotPassword';\r\nimport Landing from '../../pages/landing';\r\nimport EmailVerification from '../../pages/emailVerification';\r\nimport Login from '../../pages/login';\r\nimport Register from '../../pages/register';\r\nimport ResetPassword from '../../pages/resetPassword';\r\nimport TermsAndConditions from '../../pages/termsOfService';\r\nimport ProtectedRoute from './protectedRoute';\r\nimport PublicOnlyRoute from './publicOnlyRoute';\r\nimport SharedShelves from '../../pages/sharedShelves';\r\nimport Trash from '../../pages/trash';\r\nimport Functions from '../../pages/functions';\r\nimport Files from '../../pages/files';\r\nimport Profile from '../../pages/profileManagement';\r\nimport Users from '../../pages/users';\r\nimport Code from '../../pages/code';\r\n\r\nconst Router = () => {\r\n  const routes: RouteProps[] = [\r\n    {\r\n      path: Routes.HOME,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <Landing />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.VERIFICATION,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <EmailVerification />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.REGISTER,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <Register />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.PROFILE,\r\n      element: (\r\n        <ProtectedRoute roles={[Role.USER, Role.ADMIN, Role.MASTER_ADMIN]}>\r\n          <Profile />\r\n        </ProtectedRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.LOGIN,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <Login />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.DASHBOARD,\r\n      element: (\r\n        <ProtectedRoute roles={[Role.USER, Role.ADMIN, Role.MASTER_ADMIN]}>\r\n          <Dashboard />\r\n        </ProtectedRoute>\r\n      ),\r\n      children: [\r\n        {\r\n          path: Routes.SHELVES,\r\n          element: <Files />,\r\n          children: [\r\n            {\r\n              path: Routes.FOLDERS,\r\n              element: <Files />,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          path: Routes.SHARED_SHELVES,\r\n          element: <SharedShelves />,\r\n        },\r\n        {\r\n          path: Routes.TRASH,\r\n          element: <Trash />,\r\n          children: [\r\n            {\r\n              path: Routes.FOLDERS,\r\n              element: <Trash />,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          path: Routes.FUNCTIONS,\r\n          element: <Functions />,\r\n        },\r\n        {\r\n          path: Routes.USERS,\r\n          element: <Users />,\r\n        },\r\n        {\r\n          path: Routes.CODE,\r\n          element: <Code />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: Routes.TERMS_AND_CONDITIONS,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <TermsAndConditions />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.FORGOT_PASSWORD,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <ForgotPassword />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n    {\r\n      path: Routes.RESET_PASSWORD,\r\n      element: (\r\n        <PublicOnlyRoute>\r\n          <ResetPassword />\r\n        </PublicOnlyRoute>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const routing = useRoutes(routes);\r\n\r\n  return <>{routing}</>;\r\n};\r\n\r\nexport default Router;\r\n","import { ThemeProvider } from 'styled-components';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { theme } from './theme';\r\nimport Router from './components/router';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst App = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <ToastContainer limit={3} />\r\n    <Router />\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing:border-box;\r\n  }\r\n  html,\r\n  \r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif; \r\n    -webkit-font-smoothing: antialiased;        \r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { MsalProvider } from '@azure/msal-react';\r\nimport { PublicClientApplication } from '@azure/msal-browser';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { GlobalStyles } from './global-styles';\r\nimport { msalConfig } from './azure/authConfig';\r\nimport { store } from './store/store';\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <GlobalStyles />\r\n      <Router>\r\n        <MsalProvider instance={msalInstance}>\r\n          <App />\r\n        </MsalProvider>\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}